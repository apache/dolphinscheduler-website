{
  "filename": "plugin-development.md",
  "__html": "<h2>Task Plugin Development</h2>\n<p>Remind:Currently, task plugin development does not support hot deployment.</p>\n<h3>Shell-based tasks</h3>\n<h4>YARN-based calculations (see MapReduceTask)</h4>\n<ul>\n<li>Need to be <strong>org.apache.dolphinscheduler.server.worker.task</strong> Down <strong>TaskManager</strong> Create a custom task in the class (also need to register the corresponding task type in TaskType)</li>\n<li>Need to inherit<strong>org.apache.dolphinscheduler.server.worker.task</strong> Down <strong>AbstractYarnTask</strong></li>\n<li>Constructor Scheduling <strong>AbstractYarnTask</strong> Construction method</li>\n<li>Inherit <strong>AbstractParameters</strong> Custom task parameter entity</li>\n<li>Rewrite <strong>AbstractTask</strong> of <strong>init</strong> Parsing in method<strong>Custom task parameters</strong></li>\n<li>Rewrite <strong>buildCommand</strong> Encapsulation command</li>\n</ul>\n<h4>Non-YARN-based calculations (see ShellTask)</h4>\n<ul>\n<li>\n<p>Need to be <strong>org.apache.dolphinscheduler.server.worker.task</strong> Down <strong>TaskManager</strong> A custom task</p>\n</li>\n<li>\n<p>Need to inherit<strong>org.apache.dolphinscheduler.server.worker.task</strong> Down <strong>AbstractTask</strong></p>\n</li>\n<li>\n<p>Instantiation in constructor <strong>ShellCommandExecutor</strong></p>\n<pre><code>public ShellTask(TaskProps props, Logger logger) {\n  super(props, logger);\n\n  this.taskDir = props.getTaskDir();\n\n  this.processTask = new ShellCommandExecutor(this::logHandle,\n      props.getTaskDir(), props.getTaskAppId(),\n      props.getTenantCode(), props.getEnvFile(), props.getTaskStartTime(),\n      props.getTaskTimeout(), logger);\n  this.processDao = DaoFactory.getDaoInstance(ProcessDao.class);\n}\n</code></pre>\n<p>Incoming custom tasks <strong>TaskProps</strong>And custom<strong>Logger</strong>，TaskProps Encapsulate task information, Logger is installed with custom log information</p>\n</li>\n<li>\n<p>Inherit <strong>AbstractParameters</strong> Custom task parameter entity</p>\n</li>\n<li>\n<p>Rewrite <strong>AbstractTask</strong> of <strong>init</strong> Parsing in method<strong>Custom task parameter entity</strong></p>\n</li>\n<li>\n<p>Rewrite <strong>handle</strong> method，transfer <strong>ShellCommandExecutor</strong> of <strong>run</strong> method，The first parameter is passed in<strong>command</strong>，Pass the second parameter to ProcessDao and set the corresponding <strong>exitStatusCode</strong></p>\n</li>\n</ul>\n<h3>Non-SHELL-based tasks (see SqlTask)</h3>\n<ul>\n<li>Need to be <strong>org.apache.dolphinscheduler.server.worker.task</strong> Down <strong>TaskManager</strong> A custom task</li>\n<li>Need to inherit<strong>org.apache.dolphinscheduler.server.worker.task</strong> Down <strong>AbstractTask</strong></li>\n<li>Inherit <strong>AbstractParameters</strong> Custom task parameter entity</li>\n<li>Constructor or override <strong>AbstractTask</strong> of <strong>init</strong> in the method, parse the custom task parameter entity</li>\n<li>Rewrite <strong>handle</strong> Methods to implement business logic and set the corresponding<strong>exitStatusCode</strong></li>\n</ul>\n",
  "link": "/dist/en-us/docs/1.2.1/user_doc/plugin-development.html",
  "meta": {}
}