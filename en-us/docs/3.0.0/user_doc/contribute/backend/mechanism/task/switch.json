{
  "filename": "switch.md",
  "__html": "<h1>SWITCH Task development</h1>\n<p>Switch task workflow step as follows</p>\n<ul>\n<li>User-defined expressions and branch information are stored in <code>taskParams</code> in <code>taskdefinition</code>. When the switch is executed, it will be formatted as <code>SwitchParameters</code></li>\n<li><code>SwitchTaskExecThread</code> processes the expressions defined in <code>switch</code> from top to bottom, obtains the value of the variable from <code>varPool</code>, and parses the expression through <code>javascript</code>. If the expression returns true, stop checking and record The order of the expression, here we record as resultConditionLocation. The task of SwitchTaskExecThread is over</li>\n<li>After the <code>switch</code> task runs, if there is no error (more commonly, the user-defined expression is out of specification or there is a problem with the parameter name), then <code>MasterExecThread.submitPostNode</code> will obtain the downstream node of the <code>DAG</code> to continue execution.</li>\n<li>If it is found in <code>DagHelper.parsePostNodes</code> that the current node (the node that has just completed the work) is a <code>switch</code> node, the <code>resultConditionLocation</code> will be obtained, and all branches except <code>resultConditionLocation</code> in the SwitchParameters will be skipped. In this way, only the branches that need to be executed are left</li>\n</ul>\n",
  "link": "/dist/en-us/docs/3.0.0/user_doc/contribute/backend/mechanism/task/switch.html",
  "meta": {}
}