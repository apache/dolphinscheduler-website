{
  "filename": "ambari-integration.md",
  "__html": "<h3>Instructions for using the DolphinScheduler's Ambari plug-in</h3>\n<h4>Note</h4>\n<ol>\n<li>This document is intended for users with a basic understanding of Ambari</li>\n<li>This document is a description of adding the DolphinScheduler service to the installed Ambari service</li>\n<li>This document is based on version 2.5.2 of Ambari</li>\n</ol>\n<h4>Installation preparation</h4>\n<ol>\n<li>\n<p>Prepare the RPM packages</p>\n<ul>\n<li>It is generated by executing the command <code>mvn -U clean install -Prpmbuild -Dmaven.test.skip=true -X</code> in the project root directory (In the directory: dolphinscheduler-dist/target/rpm/apache-dolphinscheduler/RPMS/noarch )</li>\n</ul>\n</li>\n<li>\n<p>Create an installation for DS，who have read and write access to the installation directory (/opt/soft)</p>\n</li>\n<li>\n<p>Install with rpm package</p>\n<ul>\n<li>\n<p>Manual installation (recommended）：</p>\n<ul>\n<li>Copy the prepared RPM packages to each node of the cluster.</li>\n<li>Execute with DS installation user: <code>rpm -ivh apache-dolphinscheduler-xxx.noarch.rpm</code></li>\n<li>Mysql-connector-java packaged using the default POM file will not be included.</li>\n<li>The RPM package was packaged in the project with the installation path of /opt/soft.\nIf you use mysql as the database, you need add it manually.</li>\n</ul>\n</li>\n<li>\n<p>Automatic installation with ambari</p>\n<ul>\n<li>Each node of the cluster needs to be configured the local yum source</li>\n<li>Copy the prepared RPM packages to each node local yum source</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Copy plug-in directory</p>\n<ul>\n<li>copy directory ambari_plugin/common-services/DOLPHIN to ambari-server/resources/common-services/</li>\n<li>copy directory ambari_plugin/statcks/DOLPHIN to ambari-server/resources/stacks/HDP/2.6/services/--stack version is selected based on the actual situation</li>\n</ul>\n</li>\n<li>\n<p>Initializes the database information</p>\n<pre><code>-- Create the database for the DolphinScheduler：dolphinscheduler\nCREATE DATABASE dolphinscheduler DEFAULT CHARACTER SET utf8 DEFAULT COLLATE\nutf8_general_ci;\n\n-- Initialize the user and password for the dolphinscheduler database and assign permissions\n-- Replace the {user} in the SQL statement below with the user of the dolphinscheduler database\nGRANT ALL PRIVILEGES ON dolphinscheduler.* TO '{user}'@'%' IDENTIFIED BY '{password}';\nGRANT ALL PRIVILEGES ON dolphinscheduler.* TO '{user}'@'localhost' IDENTIFIED BY\n'{password}';\nflush privileges;\n</code></pre>\n</li>\n</ol>\n<h4>Ambari Install DolphinScheduler</h4>\n<ul>\n<li><strong>NOTE: You have to install zookeeper first</strong></li>\n</ul>\n<ol>\n<li>\n<p>Install DolphinScheduler on ambari web interface</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_001.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Select the nodes for the DolphinScheduler's Master installation</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_002.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Configure the DolphinScheduler's nodes for Worker, Api, Logger, Alert installation</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_003.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Set the installation users of the DolphinScheduler service (created in step 1) and the user groups they belong to</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_004.png\" alt=\"\"></p>\n</li>\n<li>\n<p>System Env Optimization will export some system environment config. Modify according to actual situation</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_020.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Configure the database information (same as in the initialization database in step 1)</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_005.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Configure additional information if needed</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_006.png\" alt=\"\"></p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_007.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Perform the next steps as normal</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_008.png\" alt=\"\"></p>\n</li>\n<li>\n<p>The interface after successful installation</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_009.png\" alt=\"\"></p>\n</li>\n</ol>\n<hr>\n<h4>Add components to the node through Ambari -- for example, add a DS Worker</h4>\n<p><em><strong>NOTE</strong></em>: DS Logger is the installation dependent component of DS Worker in Dolphin's Ambari installation (need to add installation first; Prevent the Job log on the corresponding Worker from being checked)</p>\n<ol>\n<li>\n<p>Locate the component node to add -- for example, node ark3</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_011.png\" alt=\"DS2_AMBARI_011\"></p>\n</li>\n<li>\n<p>Add components -- the drop-down list is all addable</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_012.png\" alt=\"DS2_AMBARI_012\"></p>\n</li>\n<li>\n<p>Confirm component addition</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_013.png\" alt=\"DS2_AMBARI_013\"></p>\n</li>\n<li>\n<p>After adding DS Worker and DS Logger components</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_015.png\" alt=\"DS2_AMBARI_015\"></p>\n</li>\n<li>\n<p>Start the component</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_016.png\" alt=\"DS2_AMBARI_016\"></p>\n</li>\n</ol>\n<h4>Remove the component from the node with Ambari</h4>\n<ol>\n<li>\n<p>Stop the component in the corresponding node</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_018.png\" alt=\"DS2_AMBARI_018\"></p>\n</li>\n<li>\n<p>Remove components</p>\n<p><img src=\"/img/ambari-plugin/DS2_AMBARI_019.png\" alt=\"DS2_AMBARI_019\"></p>\n</li>\n</ol>\n",
  "link": "/dist/en-us/docs/1.3.6/user_doc/ambari-integration.html",
  "meta": {}
}