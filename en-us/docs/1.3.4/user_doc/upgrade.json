{
  "filename": "upgrade.md",
  "__html": "<h1>DolphinScheduler upgrade documentation</h1>\n<h2>1. Back up previous version's files and database.</h2>\n<h2>2. Stop all services of DolphinScheduler.</h2>\n<p><code>sh ./script/stop-all.sh</code></p>\n<h2>3. Download the new version's installation package.</h2>\n<ul>\n<li><a href=\"https://dolphinscheduler.apache.org/en-us/docs/release/download.html\">Download</a> the latest version of the installation packages.</li>\n<li>The following upgrade operations need to be performed in the new version's directory.</li>\n</ul>\n<h2>4. Database upgrade</h2>\n<ul>\n<li>\n<p>Modify the following properties in conf/datasource.properties.</p>\n</li>\n<li>\n<p>If you use MySQL as database to run DolphinScheduler, please comment out PostgreSQL releated configurations, and add mysql connector jar into lib dir, here we download mysql-connector-java-5.1.47.jar, and then correctly config database connect infoformation. You can download mysql connector jar <a href=\"https://downloads.MySQL.com/archives/c-j/\">here</a>. Alternatively if you use Postgres as database, you just need to comment out Mysql related configurations, and correctly config database connect information.</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\">  # postgre</span>\n<span class=\"hljs-comment\">  #spring.datasource.driver-class-name=org.postgresql.Driver</span>\n<span class=\"hljs-comment\">  #spring.datasource.url=jdbc:postgresql://localhost:5432/dolphinscheduler</span>\n<span class=\"hljs-comment\">  # mysql</span>\n  <span class=\"hljs-meta\">spring.datasource.driver-class-name</span>=<span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n  <span class=\"hljs-meta\">spring.datasource.url</span>=<span class=\"hljs-string\">jdbc:mysql://xxx:3306/dolphinscheduler?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true</span>\n  <span class=\"hljs-meta\">spring.datasource.username</span>=<span class=\"hljs-string\">xxx</span>\n  <span class=\"hljs-meta\">spring.datasource.password</span>=<span class=\"hljs-string\">xxx</span>\n</code></pre>\n</li>\n<li>\n<p>Execute database upgrade script</p>\n<p><code>sh ./script/upgrade-dolphinscheduler.sh</code></p>\n</li>\n</ul>\n<h2>5. Backend service upgrade.</h2>\n<h3>5.1 Modify the content in <code>conf/config/install_config.conf</code> file.</h3>\n<ul>\n<li>Standalone Deployment please refer the [6, Modify running arguments] in <a href=\"https://dolphinscheduler.apache.org/en-us/docs/1.3.2/user_doc/standalone-deployment.html\">Standalone-Deployment</a>.</li>\n<li>Cluster Deployment please refer the [6, Modify running arguments] in <a href=\"https://dolphinscheduler.apache.org/en-us/docs/1.3.2/user_doc/cluster-deployment.html\">Cluster-Deployment</a>.</li>\n</ul>\n<h4>Masters need attentions</h4>\n<p>Create worker group in 1.3.1 version has different design:</p>\n<ul>\n<li>Brfore version 1.3.1 worker group can be created through UI interface.</li>\n<li>Since version 1.3.1 worker group can be created by modify the worker configuration.</li>\n</ul>\n<h4>When upgrade from version before 1.3.1 to 1.3.2, below operations are what we need to do to keep worker group config consist with previous.</h4>\n<p>1, Go to the backup database, search records in t_ds_worker_group table, mainly focus id, name and ip these three columns.</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:right\">ip_list</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:center\">service1</td>\n<td style=\"text-align:right\">192.168.xx.10</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:center\">service2</td>\n<td style=\"text-align:right\">192.168.xx.11,192.168.xx.12</td>\n</tr>\n</tbody>\n</table>\n<p>2„ÄÅModify the workers config item in conf/config/install_config.conf file.</p>\n<p>Imaging bellow are the machine worker service to be deployed:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">hostname</th>\n<th style=\"text-align:center\">ip</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ds1</td>\n<td style=\"text-align:center\">192.168.xx.10</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ds2</td>\n<td style=\"text-align:center\">192.168.xx.11</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ds3</td>\n<td style=\"text-align:center\">192.168.xx.12</td>\n</tr>\n</tbody>\n</table>\n<p>To keep worker group config consistant with previous version, we need to modify workers config item as below:</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">worker service is deployed on <span class=\"hljs-built_in\">which</span> machine, and also specify <span class=\"hljs-built_in\">which</span> worker group this worker belong to. </span>\nworkers=\"ds1:service1,ds2:service2,ds3:service2\"\n</code></pre>\n<h4>The worker group has been enhanced in version 1.3.2.</h4>\n<p>Worker in 1.3.1 can't belong to more than one worker group, in 1.3.2 it's supported. So in 1.3.1 it's not supported when workers=&quot;ds1:service1,ds1:service2&quot;, and in 1.3.2 it's supported.</p>\n<h3>5.2 Execute deploy script.</h3>\n<pre><code class=\"language-shell\">`sh install.sh`\n</code></pre>\n",
  "link": "/en-us/docs/1.3.4/user_doc/upgrade.html",
  "meta": {}
}