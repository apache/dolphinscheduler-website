{
  "filename": "docker-deployment.md",
  "__html": "<h1>QuickStart in Docker</h1>\n<h2>Prerequisites</h2>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/install/\">Docker</a> 1.13.1+</li>\n<li><a href=\"https://docs.docker.com/compose/\">Docker Compose</a> 1.11.0+</li>\n</ul>\n<h2>How to use this Docker image</h2>\n<p>Here're 3 ways to quickly install DolphinScheduler</p>\n<h3>The First Way: Start a DolphinScheduler by docker-compose (recommended)</h3>\n<p>In this way, you need to install <a href=\"https://docs.docker.com/compose/\">docker-compose</a> as a prerequisite, please install it yourself according to the rich docker-compose installation guidance on the Internet</p>\n<h4>1. Download the Source Code Package</h4>\n<p>Please download the source code package apache-dolphinscheduler-incubating-1.3.4-src.zip, download address: <a href=\"/en-us/download/download.html\">download</a></p>\n<h4>2. Pull Image and Start the Service</h4>\n<pre><code>$ unzip apache-dolphinscheduler-incubating-1.3.4-src.zip\n$ cd apache-dolphinscheduler-incubating-1.3.4-src-release/docker/docker-swarm\n$ docker pull dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:1.3.4\n$ docker tag apache/dolphinscheduler:1.3.4 apache/dolphinscheduler:latest\n$ docker-compose up -d\n</code></pre>\n<p>The <strong>PostgreSQL</strong> (with username <code>root</code>, password <code>root</code> and database <code>dolphinscheduler</code>) and <strong>ZooKeeper</strong> services will start by default</p>\n<h4>3. Login</h4>\n<p>Visit the Web UI: <a href=\"http://localhost:8888\">http://localhost:8888</a> (The local address is <a href=\"http://localhost:8888\">http://localhost:8888</a>)</p>\n<p>The default username is <code>admin</code> and the default password is <code>dolphinscheduler123</code></p>\n<p align=\"center\">\n  <img src=\"/img/login_en.png\" width=\"60%\" />\n</p>\n<p>Please refer to the <code>Quick Start</code> in the chapter <a href=\"./quick-start.md\">Quick Start</a> to explore how to use DolphinScheduler</p>\n<h3>The Second Way: Start via specifying the existing PostgreSQL and ZooKeeper service</h3>\n<p>In this way, you need to install <a href=\"https://docs.docker.com/engine/install/\">docker</a> as a prerequisite, please install it yourself according to the rich docker installation guidance on the Internet</p>\n<h4>1. Basic Required Software (please install by yourself)</h4>\n<ul>\n<li><a href=\"https://www.postgresql.org/download/\">PostgreSQL</a> (8.2.15+)</li>\n<li><a href=\"https://zookeeper.apache.org/releases.html\">ZooKeeper</a> (3.4.6+)</li>\n<li><a href=\"https://docs.docker.com/engine/install/\">Docker</a> (1.13.1+)</li>\n</ul>\n<h4>2. Please login to the PostgreSQL database and create a database named <code>dolphinscheduler</code></h4>\n<h4>3. Initialize the database, import <code>sql/dolphinscheduler-postgre.sql</code> to create tables and initial data</h4>\n<h4>4. Download the DolphinScheduler Image</h4>\n<p>We have already uploaded user-oriented DolphinScheduler image to the Docker repository so that you can pull the image from the docker repository:</p>\n<pre><code>docker pull dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:1.3.4\n</code></pre>\n<h4>5. Run a DolphinScheduler Instance</h4>\n<pre><code>$ docker run -d --name dolphinscheduler \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\n-e ZOOKEEPER_QUORUM=&quot;192.168.x.x:2181&quot; \\\n-p 8888:8888 \\\napache/dolphinscheduler:1.3.4 all\n</code></pre>\n<p>Note: database username test and password test need to be replaced with your actual PostgreSQL username and password, 192.168.x.x need to be replaced with your relate PostgreSQL and ZooKeeper host IP</p>\n<h4>6. Login</h4>\n<p>Same as above</p>\n<h3>The Third Way: Start a standalone DolphinScheduler server</h3>\n<p>The following services are automatically started when the container starts:</p>\n<pre><code>     MasterServer         ----- master service\n     WorkerServer         ----- worker service\n     LoggerServer         ----- logger service\n     ApiApplicationServer ----- api service\n     AlertServer          ----- alert service\n</code></pre>\n<p>If you just want to run part of the services in the DolphinScheduler</p>\n<p>You can start some services in DolphinScheduler by running the following commands.</p>\n<ul>\n<li>Start a <strong>master server</strong>, For example:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-master \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\n-e ZOOKEEPER_QUORUM=&quot;192.168.x.x:2181&quot; \\\napache/dolphinscheduler:1.3.4 master-server\n</code></pre>\n<ul>\n<li>Start a <strong>worker server</strong> (including <strong>logger server</strong>), For example:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-worker \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\n-e ZOOKEEPER_QUORUM=&quot;192.168.x.x:2181&quot; \\\napache/dolphinscheduler:1.3.4 worker-server\n</code></pre>\n<ul>\n<li>Start a <strong>api server</strong>, For example:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-api \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\n-e ZOOKEEPER_QUORUM=&quot;192.168.x.x:2181&quot; \\\n-p 12345:12345 \\\napache/dolphinscheduler:1.3.4 api-server\n</code></pre>\n<ul>\n<li>Start a <strong>alert server</strong>, For example:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-alert \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\napache/dolphinscheduler:1.3.4 alert-server\n</code></pre>\n<ul>\n<li>Start a <strong>frontend</strong>, For example:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-frontend \\\n-e FRONTEND_API_SERVER_HOST=&quot;192.168.x.x&quot; -e FRONTEND_API_SERVER_PORT=&quot;12345&quot; \\\n-p 8888:8888 \\\napache/dolphinscheduler:1.3.4 frontend\n</code></pre>\n<p><strong>Note</strong>: You must be specify <code>DATABASE_HOST</code>, <code>DATABASE_PORT</code>, <code>DATABASE_DATABASE</code>, <code>DATABASE_USERNAME</code>, <code>DATABASE_PASSWORD</code>, <code>ZOOKEEPER_QUORUM</code> when start a standalone dolphinscheduler server.</p>\n",
  "link": "/dist/en-us/docs/1.3.4/user_doc/docker-deployment.html",
  "meta": {}
}