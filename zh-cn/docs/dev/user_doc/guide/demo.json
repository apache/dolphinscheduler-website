{
  "filename": "demo.md",
  "__html": "<h1>DolphinScheduler 初始化工作流 demo</h1>\n<h2>准备工作</h2>\n<h3>备份上一版本文件和数据库</h3>\n<p>为了防止操作错误导致数据丢失，建议初始化工作流 demo 服务之前备份数据，备份方法请结合你数据库的情况来定</p>\n<h3>下载新版本的安装包</h3>\n<p>在<a href=\"/zh-cn/download/download.html\">下载</a>页面下载最新版本的二进制安装包，并将二进制包放到与当前 dolphinscheduler 服务不一样的路径中，以下服务启动操作都需要在新版本的目录进行。</p>\n<h2>服务启动步骤</h2>\n<h3>开启 dolphinscheduler 服务</h3>\n<p>根据你部署方式开启 dolphinscheduler 的所有服务，如果你是通过 <a href=\"installation/cluster.md\">集群部署</a> 来部署你的 dolphinscheduler 的话，可以通过 <code>sh ./script/start-all.sh</code> 开启全部服务。</p>\n<h3>数据库配置</h3>\n<p>初始化工作流 demo 服务需要使用 MySQL 或 PostgreSQL 等其他数据库作为其元数据存储数据，因此必须更改一些配置。\n请参考<a href=\"howto/datasource-setting.md\">数据源配置</a> <code>Standalone 切换元数据库</code>创建并初始化数据库 ，然后运行 demo 服务启动脚本。</p>\n<h3>租户配置</h3>\n<h4>修改 <code>dolphinscheduler-tools/resources/application.yaml</code> 配置内容</h4>\n<pre><code>demo:\n  tenant-code: default\n  domain-name: localhost\n  api-server-port: 5173\n</code></pre>\n<p>其中 tenant-code 是默认租户 default ，用户可以根据自己操作系统用户名修改，从而代替手动创建租户操作。api-server-port 是 dolphinscheduler 服务的端口号</p>\n<p>然后执行初始化工作流 demo 服务的启动脚本：<code>sh ./tools/bin/create-demo-processes.sh</code> 来启动服务。</p>\n<p>创建 demo 可以参考<a href=\"start/quick-start.md\">快速上手</a></p>\n",
  "link": "/dist/zh-cn/docs/dev/user_doc/guide/demo.html",
  "meta": {}
}