{
  "filename": "hive-cli.md",
  "__html": "<h1>Hive CLI</h1>\n<h2>综述</h2>\n<p>使用<code>Hive Cli任务插件</code>创建<code>Hive Cli</code>类型的任务执行SQL脚本语句或者SQL任务文件。\n执行任务的worker会通过<code>hive -e</code>命令执行hive SQL脚本语句或者通过<code>hive -f</code>命令执行<code>资源中心</code>中的hive SQL文件。</p>\n<h2>Hive CLI任务 VS 连接Hive数据源的SQL任务</h2>\n<p>在DolphinScheduler中，我们有<code>Hive CLI任务插件</code>和<code>使用Hive数据源的SQL插件</code>提供用户在不同场景下使用，您可以根据需要进行选择。</p>\n<ul>\n<li><code>Hive CLI任务插件</code>直接连接<code>HDFS</code>和<code>Hive Metastore</code>来执行hive类型的任务，所以需要能够访问到对应的服务。\n执行任务的worker节点需要有相应的<code>Hive</code> jar包以及<code>Hive</code>和<code>HDFS</code>的配置文件。\n但是在生产调度中，<code>Hive CLI任务插件</code>能够提供更可靠的稳定性。</li>\n<li><code>使用Hive数据源的SQL插件</code>不需要您在worker节点上有相应的<code>Hive</code> jar包以及<code>Hive</code>和<code>HDFS</code>的配置文件，而且支持 <code>Kerberos</code>认证。\n但是在生产调度中，若调度压力很大，使用这种方式可能会遇到<code>HiveServer2</code>服务过载失败等问题。</li>\n</ul>\n<h2>创建任务</h2>\n<ul>\n<li>点击项目管理-项目名称-工作流定义，点击&quot;创建工作流&quot;按钮，进入DAG编辑页面。</li>\n<li>工具栏中拖动 <img src=\"/img/tasks/icons/hivecli.png\" width=\"15\"/> 到画板中，即可完成创建。</li>\n</ul>\n<h2>任务参数</h2>\n<ul>\n<li>前置任务：选择当前任务的前置任务，会将被选择的前置任务设置为当前任务的上游。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>任务参数</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>任务名称</td>\n<td>设置任务的名称。一个工作流定义中的节点名称是唯一的。</td>\n</tr>\n<tr>\n<td>运行标志</td>\n<td>标识这个节点是否需要正常调度，如果不需要执行，可以打开禁止执行开关。</td>\n</tr>\n<tr>\n<td>描述</td>\n<td>描述该节点的功能。</td>\n</tr>\n<tr>\n<td>任务优先级</td>\n<td>worker线程数不足时，根据优先级从高到低依次执行，优先级一样时根据先进先出原则执行。</td>\n</tr>\n<tr>\n<td>Worker分组</td>\n<td>任务分配给worker组的机器机执行，选择Default，会随机选择一台worker机执行。</td>\n</tr>\n<tr>\n<td>任务组名称</td>\n<td>任务资源组，如果没有配置的话就不会生效。</td>\n</tr>\n<tr>\n<td>环境名称</td>\n<td>配置任务执行的环境。</td>\n</tr>\n<tr>\n<td>失败重试次数</td>\n<td>任务失败重新提交的次数，支持下拉和手填。</td>\n</tr>\n<tr>\n<td>失败重试间隔</td>\n<td>任务失败重新提交任务的时间间隔，支持下拉和手填。</td>\n</tr>\n<tr>\n<td>CPU 配额</td>\n<td>为执行的任务分配指定的CPU时间配额，单位百分比，默认-1代表不限制，例如1个核心的CPU满载是100%，16个核心的是1600%。 <a href=\"../../architecture/configuration.md\">task.resource.limit.state</a></td>\n</tr>\n<tr>\n<td>最大内存</td>\n<td>为执行的任务分配指定的内存大小，超过会触发OOM被Kill同时不会进行自动重试，单位MB，默认-1代表不限制。这个功能由 <a href=\"../../architecture/configuration.md\">task.resource.limit.state</a> 控制。</td>\n</tr>\n<tr>\n<td>超时告警</td>\n<td>勾选超时告警、超时失败，当任务超过&quot;超时时长&quot;后，会发送告警邮件并且任务执行失败.这个功能由 <a href=\"../../architecture/configuration.md\">task.resource.limit.state</a> 控制。</td>\n</tr>\n<tr>\n<td>Hive Cli 任务类型</td>\n<td>Hive Cli任务执行方式，可以选择<code>FROM_SCRIPT</code>或者<code>FROM_FILE</code>。</td>\n</tr>\n<tr>\n<td>Hive SQL 脚本</td>\n<td>手动填入您的Hive SQL脚本语句。</td>\n</tr>\n<tr>\n<td>Hive Cli 选项</td>\n<td>Hive Cli的其他选项，如<code>--verbose</code>。</td>\n</tr>\n<tr>\n<td>资源</td>\n<td>如果您选择<code>FROM_FILE</code>作为Hive Cli任务类型，您需要在资源中选择Hive SQL文件。</td>\n</tr>\n</tbody>\n</table>\n<h2>任务样例</h2>\n<h3>Hive CLI任务样例</h3>\n<p>下面的样例演示了如何使用<code>Hive CLI</code>任务节点执行Hive SQL脚本语句：</p>\n<p><img src=\"/img/tasks/demo/hive_cli_from_script.png\" alt=\"demo-hive-cli-from-script\"></p>\n<p>下面的样例演示了如何使用<code>Hive CLI</code>任务节点从资源中心的Hive SQL</p>\n<p><img src=\"/img/tasks/demo/hive_cli_from_file.png\" alt=\"demo-hive-cli-from-file\"></p>\n",
  "link": "/dist/zh-cn/docs/dev/user_doc/guide/task/hive-cli.html",
  "meta": {}
}