{
  "filename": "kubernetes-deployment.md",
  "__html": "<h1>快速试用 Kubernetes 部署</h1>\n<h2>先决条件</h2>\n<ul>\n<li><a href=\"https://helm.sh/\">Helm</a> 3.1.0+</li>\n<li><a href=\"https://kubernetes.io/\">Kubernetes</a> 1.12+</li>\n<li>PV 供应(需要基础设施支持)</li>\n</ul>\n<h2>安装 dolphinscheduler</h2>\n<blockquote>\n<p>注意：您需要在本地更改 <code>Chart.yaml</code> 文件才能使其正常工作。 由于 Bitnami 存储库的更改，<a href=\"https://charts.bitnami.com/bitnami\">https://charts.bitnami.com/bitnami</a> 被截断，\n仅包含最近 6 个月（从 2022 年 1 月起）的条目。 只有这个 url 才包含了：<a href=\"https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami\">https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami</a> 完整的 index.yaml。\n如果您想了解更多细节，请访问：<a href=\"https://github.com/bitnami/charts/issues/10833%E3%80%82\">https://github.com/bitnami/charts/issues/10833。</a></p>\n<p>下载源代码后，更改路径 <code>apache-dolphinscheduler-incubating-1.3.5-src-release/docker/kubernetes/dolphinscheduler</code> 中的 <code>Chart.yaml</code> 文件，需要同时修改两个地方，\n将 <code>repository: https://charts.bitnami.com/bitnami</code> 替换成 <code>repository: https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami</code></p>\n</blockquote>\n<p>请下载源码包 apache-dolphinscheduler-incubating-1.3.5-src.zip，下载地址: <a href=\"/zh-cn/download/download.html\">下载</a></p>\n<p>发布一个名为 <code>dolphinscheduler</code> 的版本(release)，请执行以下命令：</p>\n<pre><code>$ unzip apache-dolphinscheduler-incubating-1.3.5-src.zip\n$ cd apache-dolphinscheduler-incubating-1.3.5-src-release/docker/kubernetes/dolphinscheduler\n$ helm repo add bitnami https://charts.bitnami.com/bitnami\n$ helm dependency update .\n$ helm install dolphinscheduler . --set image.tag=1.3.5\n</code></pre>\n<p>将名为 <code>dolphinscheduler</code> 的版本(release) 发布到 <code>test</code> 的命名空间中：</p>\n<pre><code class=\"language-bash\">$ helm install dolphinscheduler . -n <span class=\"hljs-built_in\">test</span>\n</code></pre>\n<blockquote>\n<p><strong>提示</strong>: 如果名为 <code>test</code> 的命名空间被使用, 选项参数 <code>-n test</code> 需要添加到 <code>helm</code> 和 <code>kubectl</code> 命令中</p>\n</blockquote>\n<p>这些命令以默认配置在 Kubernetes 集群上部署 DolphinScheduler，<a href=\"#configuration\">配置</a>部分列出了可以在安装过程中配置的参数  <!-- markdown-link-check-disable-line --></p>\n<blockquote>\n<p><strong>提示</strong>: 列出所有已发布的版本，使用 <code>helm list</code></p>\n</blockquote>\n<p><strong>PostgreSQL</strong> (用户 <code>root</code>, 密码 <code>root</code>, 数据库 <code>dolphinscheduler</code>) 和 <strong>ZooKeeper</strong> 服务将会默认启动</p>\n<h2>访问 DolphinScheduler 前端页面</h2>\n<p>如果 <code>values.yaml</code> 文件中的 <code>ingress.enabled</code> 被设置为 <code>true</code>, 在浏览器中访问 <code>http://${ingress.host}/dolphinscheduler</code> 即可</p>\n<blockquote>\n<p><strong>提示</strong>: 如果 ingress 访问遇到问题，请联系 Kubernetes 管理员并查看 <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/\">Ingress</a></p>\n</blockquote>\n<p>否则，你需要执行 port-forward 端口转发命令：</p>\n<pre><code class=\"language-bash\">$ kubectl port-forward --address 0.0.0.0 svc/dolphinscheduler-api 12345:12345\n$ kubectl port-forward --address 0.0.0.0 -n <span class=\"hljs-built_in\">test</span> svc/dolphinscheduler-api 12345:12345 <span class=\"hljs-comment\"># 使用 test 命名空间</span>\n</code></pre>\n<blockquote>\n<p><strong>提示</strong>: 如果出现 <code>unable to do port forwarding: socat not found</code> 错误, 需要先安装 <code>socat</code></p>\n</blockquote>\n<p>访问前端页面：<a href=\"http://localhost:12345/dolphinscheduler%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%89%E9%9C%80%E8%A6%81%E8%AF%B7%E4%BF%AE%E6%94%B9%E6%88%90%E5%AF%B9%E5%BA%94%E7%9A%84\">http://localhost:12345/dolphinscheduler，如果有需要请修改成对应的</a> IP 地址</p>\n<p>默认的用户是<code>admin</code>，默认的密码是<code>dolphinscheduler123</code></p>\n<p>请参考用户手册章节的<a href=\"./quick-start.md\">快速上手</a> 查看如何使用DolphinScheduler</p>\n<h2>卸载 dolphinscheduler</h2>\n<p>卸载名为 <code>dolphinscheduler</code> 的版本(release)，请执行：</p>\n<pre><code class=\"language-bash\">$ helm uninstall dolphinscheduler\n</code></pre>\n<p>该命令将删除与 <code>dolphinscheduler</code> 相关的所有 Kubernetes 组件（但PVC除外），并删除版本(release)</p>\n<p>要删除与 <code>dolphinscheduler</code> 相关的PVC，请执行：</p>\n<pre><code class=\"language-bash\">$ kubectl delete pvc -l app.kubernetes.io/instance=dolphinscheduler\n</code></pre>\n<blockquote>\n<p><strong>注意</strong>: 删除PVC也会删除所有数据，请谨慎操作！</p>\n</blockquote>\n<h2>配置</h2>\n<p>配置文件为 <code>values.yaml</code>，<a href=\"https://github.com/apache/dolphinscheduler/blob/1.3.5/docker/kubernetes/dolphinscheduler/README.md#configuration\">DolphinScheduler Kubernetes 配置</a> 列出了 DolphinScheduler 的可配置参数及其默认值</p>\n<h2>FAQ</h2>\n<h3>如何查看一个 pod 容器的日志？</h3>\n<p>列出所有 pods (别名 <code>po</code>):</p>\n<pre><code>kubectl get po\nkubectl get po -n test # with test namespace\n</code></pre>\n<p>查看名为 dolphinscheduler-master-0 的 pod 容器的日志:</p>\n<pre><code>kubectl logs dolphinscheduler-master-0\nkubectl logs -f dolphinscheduler-master-0 # 跟随日志输出\nkubectl logs --tail 10 dolphinscheduler-master-0 -n test # 显示倒数10行日志\n</code></pre>\n<h3>如何在 Kubernetes 上扩缩容 api, master 和 worker？</h3>\n<p>列出所有 deployments (别名 <code>deploy</code>):</p>\n<pre><code>kubectl get deploy\nkubectl get deploy -n test # with test namespace\n</code></pre>\n<p>扩缩容 api 至 3 个副本:</p>\n<pre><code>kubectl scale --replicas=3 deploy dolphinscheduler-api\nkubectl scale --replicas=3 deploy dolphinscheduler-api -n test # with test namespace\n</code></pre>\n<p>列出所有 statefulsets (别名 <code>sts</code>):</p>\n<pre><code>kubectl get sts\nkubectl get sts -n test # with test namespace\n</code></pre>\n<p>扩缩容 master 至 2 个副本:</p>\n<pre><code>kubectl scale --replicas=2 sts dolphinscheduler-master\nkubectl scale --replicas=2 sts dolphinscheduler-master -n test # with test namespace\n</code></pre>\n<p>扩缩容 worker 至 6 个副本:</p>\n<pre><code>kubectl scale --replicas=6 sts dolphinscheduler-worker\nkubectl scale --replicas=6 sts dolphinscheduler-worker -n test # with test namespace\n</code></pre>\n<h3>如何用 MySQL 替代 PostgreSQL 作为 DolphinScheduler 的数据库？</h3>\n<p>尚不支持，1.3.6 版本将支持</p>\n<h3>如何在数据源中心支持 MySQL 数据源？</h3>\n<blockquote>\n<p>由于商业许可证的原因，我们不能直接使用 MySQL 的驱动包.</p>\n<p>如果你要添加 MySQL 数据源, 你可以基于官方镜像 <code>apache/dolphinscheduler</code> 进行构建.</p>\n</blockquote>\n<ol>\n<li>\n<p>下载 MySQL 驱动包 <a href=\"https://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.49/mysql-connector-java-5.1.49.jar\">mysql-connector-java-5.1.49.jar</a> (要求 <code>&gt;=5.1.47</code>)</p>\n</li>\n<li>\n<p>创建一个新的 <code>Dockerfile</code>，用于添加 MySQL 驱动包:</p>\n</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:1.3.5\nCOPY mysql-connector-java-5.1.49.jar /opt/dolphinscheduler/lib\n</code></pre>\n<ol start=\"3\">\n<li>构建一个包含 MySQL 驱动包的新镜像:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:mysql-driver .\n</code></pre>\n<ol start=\"4\">\n<li>\n<p>推送 docker 镜像 <code>apache/dolphinscheduler:mysql-driver</code> 到一个 docker registry 中</p>\n</li>\n<li>\n<p>修改 <code>values.yaml</code> 文件中 image 的 <code>registry</code> 和 <code>repository</code> 字段，并更新 <code>tag</code> 为 <code>mysql-driver</code></p>\n</li>\n<li>\n<p>部署 dolphinscheduler (详见<strong>安装 dolphinscheduler</strong>)</p>\n</li>\n<li>\n<p>在数据源中心添加一个 MySQL 数据源</p>\n</li>\n</ol>\n<h3>如何在数据源中心支持 Oracle 数据源？</h3>\n<blockquote>\n<p>由于商业许可证的原因，我们不能直接使用 Oracle 的驱动包.</p>\n<p>如果你要添加 Oracle 数据源, 你可以基于官方镜像 <code>apache/dolphinscheduler</code> 进行构建.</p>\n</blockquote>\n<ol>\n<li>\n<p>下载 Oracle 驱动包 <a href=\"https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc8/\">ojdbc8.jar</a> (例如 <code>ojdbc8-19.9.0.0.jar</code>)</p>\n</li>\n<li>\n<p>创建一个新的 <code>Dockerfile</code>，用于添加 Oracle 驱动包:</p>\n</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:1.3.5\nCOPY ojdbc8-19.9.0.0.jar /opt/dolphinscheduler/lib\n</code></pre>\n<ol start=\"3\">\n<li>构建一个包含 Oracle 驱动包的新镜像:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:oracle-driver .\n</code></pre>\n<ol start=\"4\">\n<li>\n<p>推送 docker 镜像 <code>apache/dolphinscheduler:oracle-driver</code> 到一个 docker registry 中</p>\n</li>\n<li>\n<p>修改 <code>values.yaml</code> 文件中 image 的 <code>registry</code> 和 <code>repository</code> 字段，并更新 <code>tag</code> 为 <code>oracle-driver</code></p>\n</li>\n<li>\n<p>部署 dolphinscheduler (详见<strong>安装 dolphinscheduler</strong>)</p>\n</li>\n<li>\n<p>在数据源中心添加一个 Oracle 数据源</p>\n</li>\n</ol>\n",
  "link": "/dist/zh-cn/docs/1.3.5/user_doc/kubernetes-deployment.html",
  "meta": {}
}