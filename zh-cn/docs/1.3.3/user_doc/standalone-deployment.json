{
  "filename": "standalone-deployment.md",
  "__html": "<h1>单机部署(Standalone)</h1>\n<h1>1、基础软件安装(必装项请自行安装)</h1>\n<ul>\n<li>PostgreSQL (8.2.15+) or MySQL (5.7系列)  :  两者任选其一即可，<font color=\"#dd0000\">如果使用MySQL，强烈建议，MySQL的版本为5.7或更高</font></li>\n<li><a href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\">JDK</a> (1.8+) :  必装，请安装好后在/etc/profile下配置 JAVA_HOME 及 PATH 变量</li>\n<li>ZooKeeper (3.4.6+) ：必装</li>\n<li>Hadoop (2.6+) or MinIO ：选装， 如果需要用到资源上传功能，针对单机可以选择本地文件目录作为上传文件夹(此操作不需要部署Hadoop)；当然也可以选择上传到Hadoop or MinIO集群上</li>\n</ul>\n<pre><code class=\"language-markdown\"> 注意：DolphinScheduler本身不依赖Hadoop、Hive、Spark,仅是会调用他们的Client，用于对应任务的运行。\n</code></pre>\n<h1>2、下载二进制tar.gz包</h1>\n<ul>\n<li>请下载最新版本的后端安装包至服务器部署目录,比如创建 /opt/dolphinscheduler 做为安装部署目录，下载地址： <a href=\"https://dolphinscheduler.apache.org/zh-cn/docs/release/download.html\">下载</a>，下载后上传tar包到该目录中，并进行解压</li>\n</ul>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 创建部署目录,部署目录请不要创建在/root、/home等高权限目录 </span>\nmkdir -p /opt/dolphinscheduler;\ncd /opt/dolphinscheduler;\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 解压缩</span>\ntar -zxvf apache-dolphinscheduler-incubating-1.3.3-dolphinscheduler-bin.tar.gz -C /opt/dolphinscheduler;\n \nmv apache-dolphinscheduler-incubating-1.3.3-dolphinscheduler-bin  dolphinscheduler-bin\n</code></pre>\n<h1>3、创建部署用户并赋予目录操作权限</h1>\n<ul>\n<li>创建部署用户，并且一定要配置sudo免密。以创建dolphinscheduler用户为例</li>\n</ul>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 创建用户需使用root登录</span>\nuseradd dolphinscheduler;\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 添加密码</span>\necho \"dolphinscheduler\" | passwd --stdin dolphinscheduler\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 配置sudo免密 [1]</span>\nsed -i '$adolphinscheduler  ALL=(ALL)  NOPASSWD: NOPASSWD: ALL' /etc/sudoers\nsed -i 's/Defaults    requirett/#Defaults    requirett/g' /etc/sudoers\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 修改目录权限，使得部署用户对dolphinscheduler-bin目录有操作权限</span>\nchown -R dolphinscheduler:dolphinscheduler dolphinscheduler-bin\n</code></pre>\n<pre><code> 注意：\n - 因为任务执行服务是以 sudo -u {linux-user} 切换不同linux用户的方式来实现多租户运行作业，所以部署用户需要有 sudo 权限，而且是免密的。初学习者不理解的话，完全可以暂时忽略这一点\n - 如果发现/etc/sudoers文件中有&quot;Default requiretty&quot;这行，也请注释掉\n - 如果用到资源上传的话，还需要给该部署用户分配操作`本地文件系统或者HDFS或者MinIO`的权限\n</code></pre>\n<h1>4、ssh免密配置</h1>\n<ul>\n<li>切换到部署用户并配置ssh本机免密登录</li>\n</ul>\n<pre><code class=\"language-shell\">su dolphinscheduler;\n\nssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa\ncat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n</code></pre>\n<p>注意：<em>正常设置后，dolphinscheduler用户在执行命令<code>ssh localhost</code> 是不需要再输入密码的</em></p>\n<h1>5、数据库初始化</h1>\n<ul>\n<li>进入数据库，默认数据库是PostgreSQL，如选择MySQL的话，后续需要添加mysql-connector-java驱动包到DolphinScheduler的lib目录下</li>\n</ul>\n<pre><code>mysql -uroot -p\n</code></pre>\n<ul>\n<li>\n<p>进入数据库命令行窗口后，执行数据库初始化命令，设置访问账号和密码。<strong>注: {user} 和 {password} 需要替换为具体的数据库用户名和密码</strong></p>\n<pre><code class=\"language-mysql\">mysql&gt; CREATE DATABASE dolphinscheduler DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;\nmysql&gt; GRANT ALL PRIVILEGES ON dolphinscheduler.* TO '{user}'@'%' IDENTIFIED BY '{password}';\nmysql&gt; GRANT ALL PRIVILEGES ON dolphinscheduler.* TO '{user}'@'localhost' IDENTIFIED BY '{password}';\nmysql&gt; flush privileges;\n</code></pre>\n</li>\n<li>\n<p>创建表和导入基础数据</p>\n<ul>\n<li>\n<p>修改 conf 目录下 datasource.properties 中的下列配置</p>\n<ul>\n<li>\n<pre><code class=\"language-shell\">vi conf/datasource.properties\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>如果选择 MySQL，请注释掉 PostgreSQL 相关配置(反之同理), 还需要手动添加 [<a href=\"https://downloads.MySQL.com/archives/c-j/\"> mysql-connector-java 驱动 jar </a>] 包到 lib 目录下，这里下载的是mysql-connector-java-5.1.47.jar，然后正确配置数据库连接相关信息</p>\n</li>\n</ul>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\">  # postgre</span>\n<span class=\"hljs-comment\">  #spring.datasource.driver-class-name=org.postgresql.Driver</span>\n<span class=\"hljs-comment\">  #spring.datasource.url=jdbc:postgresql://localhost:5432/dolphinscheduler</span>\n<span class=\"hljs-comment\">  # mysql</span>\n  <span class=\"hljs-meta\">spring.datasource.driver-class-name</span>=<span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n  <span class=\"hljs-meta\">spring.datasource.url</span>=<span class=\"hljs-string\">jdbc:mysql://xxx:3306/dolphinscheduler?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true     需要修改ip，本机localhost即可</span>\n  <span class=\"hljs-meta\">spring.datasource.username</span>=<span class=\"hljs-string\">xxx\t\t\t\t\t\t需要修改为上面的{user}值</span>\n  <span class=\"hljs-meta\">spring.datasource.password</span>=<span class=\"hljs-string\">xxx\t\t\t\t\t\t需要修改为上面的{password}值</span>\n</code></pre>\n<ul>\n<li>修改并保存完后，执行 script 目录下的创建表及导入基础数据脚本</li>\n</ul>\n<pre><code class=\"language-shell\">sh script/create-dolphinscheduler.sh\n</code></pre>\n</li>\n</ul>\n<p>​       <em>注意: 如果执行上述脚本报 ”/bin/java: No such file or directory“ 错误，请在/etc/profile下配置  JAVA_HOME 及 PATH 变量</em></p>\n<h1>6、修改运行参数</h1>\n<ul>\n<li>\n<p>修改 conf/env 目录下的 <code>dolphinscheduler_env.sh</code> 环境变量(以相关用到的软件都安装在/opt/soft下为例)</p>\n<pre><code class=\"language-shell\">export HADOOP_HOME=/opt/soft/hadoop\nexport HADOOP_CONF_DIR=/opt/soft/hadoop/etc/hadoop\n<span class=\"hljs-meta\">#</span><span class=\"bash\"><span class=\"hljs-built_in\">export</span> SPARK_HOME1=/opt/soft/spark1</span>\nexport SPARK_HOME2=/opt/soft/spark2\nexport PYTHON_HOME=/opt/soft/python\nexport JAVA_HOME=/opt/soft/java\nexport HIVE_HOME=/opt/soft/hive\nexport FLINK_HOME=/opt/soft/flink\nexport DATAX_HOME=/opt/soft/datax/bin/datax.py\nexport PATH=$HADOOP_HOME/bin:$SPARK_HOME2/bin:$PYTHON_HOME:$JAVA_HOME/bin:$HIVE_HOME/bin:$PATH:$FLINK_HOME/bin:$DATAX_HOME:$PATH\n</code></pre>\n<p><code>注: 这一步非常重要,例如 JAVA_HOME 和 PATH 是必须要配置的，没有用到的可以忽略或者注释掉；如果找不到dolphinscheduler_env.sh, 请运行 ls -a</code></p>\n</li>\n<li>\n<p>将jdk软链到/usr/bin/java下(仍以 JAVA_HOME=/opt/soft/java 为例)</p>\n<pre><code class=\"language-shell\">sudo ln -s /opt/soft/java/bin/java /usr/bin/java\n</code></pre>\n</li>\n<li>\n<p>修改一键部署配置文件 <code>conf/config/install_config.conf</code>中的各参数，特别注意以下参数的配置</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 这里填 mysql or postgresql</span>\ndbtype=\"mysql\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 数据库连接地址</span>\ndbhost=\"localhost:3306\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 数据库名</span>\ndbname=\"dolphinscheduler\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 数据库用户名，此处需要修改为上面设置的{user}具体值</span>\nusername=\"xxx\"    \n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 数据库密码, 如果有特殊字符，请使用\\转义，需要修改为上面设置的{password}具体值</span>\npassword=\"xxx\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">Zookeeper地址，单机本机是localhost:2181，记得把2181端口带上</span>\nzkQuorum=\"localhost:2181\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">将DS安装到哪个目录，如: /opt/soft/dolphinscheduler，不同于现在的目录</span>\ninstallPath=\"/opt/soft/dolphinscheduler\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">使用哪个用户部署，使用第3节创建的用户</span>\ndeployUser=\"dolphinscheduler\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 邮件配置，以qq邮箱为例</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 邮件协议</span>\nmailProtocol=\"SMTP\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 邮件服务地址</span>\nmailServerHost=\"smtp.qq.com\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 邮件服务端口</span>\nmailServerPort=\"25\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> mailSender和mailUser配置成一样即可</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 发送者</span>\nmailSender=\"xxx@qq.com\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 发送用户</span>\nmailUser=\"xxx@qq.com\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 邮箱密码</span>\nmailPassword=\"xxx\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> TLS协议的邮箱设置为<span class=\"hljs-literal\">true</span>，否则设置为<span class=\"hljs-literal\">false</span></span>\nstarttlsEnable=\"true\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 开启SSL协议的邮箱配置为<span class=\"hljs-literal\">true</span>，否则为<span class=\"hljs-literal\">false</span>。注意: starttlsEnable和sslEnable不能同时为<span class=\"hljs-literal\">true</span></span>\nsslEnable=\"false\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 邮件服务地址值，参考上面 mailServerHost</span>\nsslTrust=\"smtp.qq.com\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 业务用到的比如sql等资源文件上传到哪里，可以设置：HDFS,S3,NONE，单机如果想使用本地文件系统，请配置为HDFS，因为HDFS支持本地文件系统；如果不需要资源上传功能请选择NONE。强调一点：使用本地文件系统不需要部署hadoop</span>\nresourceStorageType=\"HDFS\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 这里以保存到本地文件系统为例</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\">注：但是如果你想上传到HDFS的话，NameNode启用了HA，则需要将hadoop的配置文件core-site.xml和hdfs-site.xml放到conf目录下，本例即是放到/opt/dolphinscheduler/conf下面，并配置namenode cluster名称；如果NameNode不是HA,则修改为具体的ip或者主机名即可</span>\ndefaultFS=\"file:///data/dolphinscheduler\"    #hdfs://{具体的ip/主机名}:8020\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 如果没有使用到Yarn,保持以下默认值即可；如果ResourceManager是HA，则配置为ResourceManager节点的主备ip或者hostname,比如<span class=\"hljs-string\">\"192.168.xx.xx,192.168.xx.xx\"</span>;如果是单ResourceManager请配置yarnHaIps=<span class=\"hljs-string\">\"\"</span>即可</span>\nyarnHaIps=\"192.168.xx.xx,192.168.xx.xx\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 如果ResourceManager是HA或者没有使用到Yarn保持默认值即可；如果是单ResourceManager，请配置真实的ResourceManager主机名或者ip</span>\nsingleYarnIp=\"yarnIp1\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 资源上传根路径,支持HDFS和S3,由于hdfs支持本地文件系统，需要确保本地文件夹存在且有读写权限</span>\nresourceUploadPath=\"/data/dolphinscheduler\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 具备权限创建resourceUploadPath的用户</span>\nhdfsRootUser=\"hdfs\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">在哪些机器上部署DS服务，本机选localhost</span>\nips=\"localhost\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">ssh端口,默认22</span>\nsshPort=\"22\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">master服务部署在哪台机器上</span>\nmasters=\"localhost\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">worker服务部署在哪台机器上,并指定此worker属于哪一个worker组,下面示例的default即为组名</span>\nworkers=\"localhost:default\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">报警服务部署在哪台机器上</span>\nalertServer=\"localhost\"\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\">后端api服务部署在在哪台机器上</span>\napiServers=\"localhost\"\n\n</code></pre>\n<p><em>注：如果打算用到<code>资源中心</code>功能，请执行以下命令：</em></p>\n<pre><code class=\"language-shell\">sudo mkdir /data/dolphinscheduler\nsudo chown -R dolphinscheduler:dolphinscheduler /data/dolphinscheduler\n</code></pre>\n</li>\n</ul>\n<h1>7、一键部署</h1>\n<ul>\n<li>\n<p>切换到部署用户，执行一键部署脚本</p>\n<p><code>sh install.sh</code></p>\n<pre><code>注意：\n第一次部署的话，在运行中第3步`3,stop server`出现5次以下信息，此信息可以忽略\nsh: bin/dolphinscheduler-daemon.sh: No such file or directory\n</code></pre>\n</li>\n<li>\n<p>脚本完成后，会启动以下5个服务，使用<code>jps</code>命令查看服务是否启动(<code>jps</code>为<code>java JDK</code>自带)</p>\n</li>\n</ul>\n<pre><code class=\"language-aidl\">    MasterServer         ----- master服务\n    WorkerServer         ----- worker服务\n    LoggerServer         ----- logger服务\n    ApiApplicationServer ----- api服务\n    AlertServer          ----- alert服务\n</code></pre>\n<p>如果以上服务都正常启动，说明自动部署成功</p>\n<p>部署成功后，可以进行日志查看，日志统一存放于logs文件夹内</p>\n<pre><code class=\"language-日志路径\"> logs/\n    ├── dolphinscheduler-alert-server.log\n    ├── dolphinscheduler-master-server.log\n    |—— dolphinscheduler-worker-server.log\n    |—— dolphinscheduler-api-server.log\n    |—— dolphinscheduler-logger-server.log\n</code></pre>\n<h1>8、登录系统</h1>\n<ul>\n<li>\n<p>访问前端页面地址,接口ip(自行修改)\n<a href=\"http://192.168.xx.xx:12345/dolphinscheduler\">http://192.168.xx.xx:12345/dolphinscheduler</a></p>\n <p align=\"center\">\n   <img src=\"/img/login.png\" width=\"60%\" />\n </p>\n</li>\n</ul>\n<h1>9、启停服务</h1>\n<ul>\n<li>\n<p>一键停止集群所有服务</p>\n<p><code>sh ./bin/stop-all.sh</code></p>\n</li>\n<li>\n<p>一键开启集群所有服务</p>\n<p><code>sh ./bin/start-all.sh</code></p>\n</li>\n<li>\n<p>启停Master</p>\n</li>\n</ul>\n<pre><code class=\"language-shell\">sh ./bin/dolphinscheduler-daemon.sh start master-server\nsh ./bin/dolphinscheduler-daemon.sh stop master-server\n</code></pre>\n<ul>\n<li>启停Worker</li>\n</ul>\n<pre><code class=\"language-shell\">sh ./bin/dolphinscheduler-daemon.sh start worker-server\nsh ./bin/dolphinscheduler-daemon.sh stop worker-server\n</code></pre>\n<ul>\n<li>启停Api</li>\n</ul>\n<pre><code class=\"language-shell\">sh ./bin/dolphinscheduler-daemon.sh start api-server\nsh ./bin/dolphinscheduler-daemon.sh stop api-server\n</code></pre>\n<ul>\n<li>启停Logger</li>\n</ul>\n<pre><code class=\"language-shell\">sh ./bin/dolphinscheduler-daemon.sh start logger-server\nsh ./bin/dolphinscheduler-daemon.sh stop logger-server\n</code></pre>\n<ul>\n<li>启停Alert</li>\n</ul>\n<pre><code class=\"language-shell\">sh ./bin/dolphinscheduler-daemon.sh start alert-server\nsh ./bin/dolphinscheduler-daemon.sh stop alert-server\n</code></pre>\n<p><code>注：服务用途请具体参见《系统架构设计》小节</code></p>\n<hr>\n<h3>附录：</h3>\n<ul>\n<li>\n<p><font color=red >[1]</font>配置sudo免密，用于解决默认配置sudo权限过大或不能申请root权限的使用问题</p>\n<p>配置dolphinscheduler OS账号的sudo权限为部分普通用户范围内的一个普通用户管理者，限制指定用户在指定主机上运行某些命令，详细配置请看sudo权限管理。\n例如sudo权限管理配置dolphinscheduler OS账号只能操作用户userA,userB,userC的权限（其中用户userA,userB,userC用于多租户向大数据集群提交作业）</p>\n<pre><code class=\"language-shell\">echo 'dolphinscheduler  ALL=(userA,userB,userC)  NOPASSWD: NOPASSWD: ALL' &gt;&gt; /etc/sudoers\nsed -i 's/Defaults    requirett/#Defaults    requirett/g' /etc/sudoers\n</code></pre>\n</li>\n</ul>\n",
  "link": "/zh-cn/docs/1.3.3/user_doc/standalone-deployment.html",
  "meta": {}
}