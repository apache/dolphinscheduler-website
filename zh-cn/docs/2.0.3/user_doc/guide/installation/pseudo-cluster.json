{
  "filename": "pseudo-cluster.md",
  "__html": "<h1>伪集群部署</h1>\n<p>伪集群部署目的是在单台机器部署 DolphinScheduler 服务，该模式下master、worker、api server、logger server都在同一台机器上</p>\n<p>如果你是新手，想要体验 DolphinScheduler 的功能，推荐使用<a href=\"standalone.md\">Standalone</a>方式体检。如果你想体验更完整的功能，或者更大的任务量，推荐使用<a href=\"pseudo-cluster.md\">伪集群部署</a>。如果你是在生产中使用，推荐使用<a href=\"cluster.md\">集群部署</a>或者<a href=\"kubernetes.md\">kubernetes</a></p>\n<h2>前置准备工作</h2>\n<p>伪分布式部署 DolphinScheduler 需要有外部软件的支持</p>\n<ul>\n<li>JDK：下载<a href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\">JDK</a> (1.8+)，并将 JAVA_HOME 配置到以及 PATH 变量中。如果你的环境中已存在，可以跳过这步。</li>\n<li>二进制包：在<a href=\"https://dolphinscheduler.apache.org/zh-cn/download/download.html\">下载页面</a>下载 DolphinScheduler 二进制包</li>\n<li>数据库：<a href=\"https://www.postgresql.org/download/\">PostgreSQL</a> (8.2.15+) 或者 <a href=\"https://dev.mysql.com/downloads/mysql/\">MySQL</a> (5.7+)，两者任选其一即可，如 MySQL 则需要 JDBC Driver 8.0.16</li>\n<li>注册中心：<a href=\"https://zookeeper.apache.org/releases.html\">ZooKeeper</a> (3.4.6+)，<a href=\"https://zookeeper.apache.org/releases.html\">下载地址</a></li>\n<li>进程树分析\n<ul>\n<li>macOS安装<code>pstree</code></li>\n<li>Fedora/Red/Hat/CentOS/Ubuntu/Debian安装<code>psmisc</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><strong><em>注意:</em></strong> DolphinScheduler 本身不依赖 Hadoop、Hive、Spark，但如果你运行的任务需要依赖他们，就需要有对应的环境支持</p>\n</blockquote>\n<h2>准备 DolphinScheduler 启动环境</h2>\n<h3>配置用户免密及权限</h3>\n<p>创建部署用户，并且一定要配置 <code>sudo</code> 免密。以创建 dolphinscheduler 用户为例</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 创建用户需使用 root 登录</span>\nuseradd dolphinscheduler\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 添加密码</span>\necho &quot;dolphinscheduler&quot; | passwd --stdin dolphinscheduler\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 配置 sudo 免密</span>\nsed -i &#x27;$adolphinscheduler  ALL=(ALL)  NOPASSWD: NOPASSWD: ALL&#x27; /etc/sudoers\nsed -i &#x27;s/Defaults    requirett/#Defaults    requirett/g&#x27; /etc/sudoers\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 修改目录权限，使得部署用户对二进制包解压后的 apache-dolphinscheduler-*-bin 目录有操作权限</span>\nchown -R dolphinscheduler:dolphinscheduler apache-dolphinscheduler-*-bin\n</code></pre>\n<blockquote>\n<p><strong><em>注意:</em></strong></p>\n<ul>\n<li>因为任务执行服务是以 <code>sudo -u {linux-user}</code> 切换不同 linux 用户的方式来实现多租户运行作业，所以部署用户需要有 sudo 权限，而且是免密的。初学习者不理解的话，完全可以暂时忽略这一点</li>\n<li>如果发现 <code>/etc/sudoers</code> 文件中有 &quot;Defaults requirett&quot; 这行，也请注释掉</li>\n</ul>\n</blockquote>\n<h3>配置机器SSH免密登陆</h3>\n<p>由于安装的时候需要向不同机器发送资源，所以要求各台机器间能实现SSH免密登陆。配置免密登陆的步骤如下</p>\n<pre><code class=\"language-shell\">su dolphinscheduler\n\nssh-keygen -t rsa -P &#x27;&#x27; -f ~/.ssh/id_rsa\ncat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n</code></pre>\n<blockquote>\n<p><strong><em>注意:</em></strong> 配置完成后，可以通过运行命令 <code>ssh localhost</code> 判断是否成功，如果不需要输入密码就能ssh登陆则证明成功</p>\n</blockquote>\n<h3>启动zookeeper</h3>\n<p>进入 zookeeper 的安装目录，将 <code>zoo_sample.cfg</code> 配置文件复制到 <code>conf/zoo.cfg</code>，并将 <code>conf/zoo.cfg</code> 中 dataDir 中的值改成 <code>dataDir=./tmp/zookeeper</code></p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 启动 zookeeper</span>\n./bin/zkServer.sh start\n</code></pre>\n<h2>修改相关配置</h2>\n<p>完成了基础环境的准备后，在运行部署命令前，还需要根据环境修改配置文件。配置文件在路径在<code>conf/config/install_config.conf</code>下，一般部署只需要修改<strong>INSTALL MACHINE、DolphinScheduler ENV、Database、Registry Server</strong>部分即可完成部署，下面对必须修改参数进行说明</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> ---------------------------------------------------------</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> INSTALL MACHINE</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> ---------------------------------------------------------</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 因为是在单节点上部署master、worker、API server，所以服务器的IP均为机器IP或者localhost</span>\nips=&quot;localhost&quot;\nmasters=&quot;localhost&quot;\nworkers=&quot;localhost:default&quot;\nalertServer=&quot;localhost&quot;\napiServers=&quot;localhost&quot;\npythonGatewayServers=&quot;localhost&quot;\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> DolphinScheduler安装路径，如果不存在会创建</span>\ninstallPath=&quot;~/dolphinscheduler&quot;\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 部署用户，填写在 **配置用户免密及权限** 中创建的用户</span>\ndeployUser=&quot;dolphinscheduler&quot;\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> ---------------------------------------------------------</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> DolphinScheduler ENV</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> ---------------------------------------------------------</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> JAVA_HOME 的路径，是在 **前置准备工作** 安装的JDK中 JAVA_HOME 所在的位置</span>\njavaHome=&quot;/your/java/home/here&quot;\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> ---------------------------------------------------------</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> Database</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> ---------------------------------------------------------</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 数据库的类型，用户名，密码，IP，端口，元数据库db。其中 DATABASE_TYPE 目前支持 mysql, postgresql, H2</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 请确保配置的值使用双引号引用，否则配置可能不生效</span>\nDATABASE_TYPE=&quot;mysql&quot;\nSPRING_DATASOURCE_URL=&quot;jdbc:mysql://ds1:3306/ds_201_doc?useUnicode=true&amp;characterEncoding=UTF-8&quot;\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 如果你不是以 dolphinscheduler/dolphinscheduler 作为用户名和密码的，需要进行修改</span>\nSPRING_DATASOURCE_USERNAME=&quot;dolphinscheduler&quot;\nSPRING_DATASOURCE_PASSWORD=&quot;dolphinscheduler&quot;\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> ---------------------------------------------------------</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> Registry Server</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> ---------------------------------------------------------</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 注册中心地址，zookeeper服务的地址</span>\nregistryServers=&quot;localhost:2181&quot;\n</code></pre>\n<h2>初始化数据库</h2>\n<p>DolphinScheduler 元数据存储在关系型数据库中，目前支持 PostgreSQL 和 MySQL，如果使用 MySQL 则需要手动下载 <a href=\"https://downloads.MySQL.com/archives/c-j/\">mysql-connector-java 驱动</a> (8.0.16) 并移动到 DolphinScheduler 的 lib目录下。下面以 MySQL 为例，说明如何初始化数据库</p>\n<pre><code class=\"language-shell\">mysql -uroot -p\n<span class=\"hljs-meta\">\nmysql&gt;</span><span class=\"bash\"> CREATE DATABASE dolphinscheduler DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;</span>\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 修改 {user} 和 {password} 为你希望的用户名和密码</span>\n<span class=\"hljs-meta\">mysql&gt;</span><span class=\"bash\"> GRANT ALL PRIVILEGES ON dolphinscheduler.* TO <span class=\"hljs-string\">&#x27;{user}&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED BY <span class=\"hljs-string\">&#x27;{password}&#x27;</span>;</span>\n<span class=\"hljs-meta\">mysql&gt;</span><span class=\"bash\"> GRANT ALL PRIVILEGES ON dolphinscheduler.* TO <span class=\"hljs-string\">&#x27;{user}&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"hljs-string\">&#x27;{password}&#x27;</span>;</span>\n<span class=\"hljs-meta\">\nmysql&gt;</span><span class=\"bash\"> flush privileges;</span>\n</code></pre>\n<p>完成上述步骤后，您已经为 DolphinScheduler 创建一个新数据库，现在你可以通过快速的 Shell 脚本来初始化数据库</p>\n<pre><code class=\"language-shell\">sh script/create-dolphinscheduler.sh\n</code></pre>\n<h2>启动 DolphinScheduler</h2>\n<p>使用上面创建的<strong>部署用户</strong>运行以下命令完成部署，部署后的运行日志将存放在 logs 文件夹内</p>\n<pre><code class=\"language-shell\">sh install.sh\n</code></pre>\n<blockquote>\n<p><strong><em>注意:</em></strong> 第一次部署的话，可能出现 5 次<code>sh: bin/dolphinscheduler-daemon.sh: No such file or directory</code>相关信息，次为非重要信息直接忽略即可</p>\n</blockquote>\n<h2>登录 DolphinScheduler</h2>\n<p>浏览器访问地址 <a href=\"http://localhost:12345/dolphinscheduler\">http://localhost:12345/dolphinscheduler</a> 即可登录系统UI。默认的用户名和密码是 <strong>admin/dolphinscheduler123</strong></p>\n<h2>启停服务</h2>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 一键停止集群所有服务</span>\nsh ./bin/stop-all.sh\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 一键开启集群所有服务</span>\nsh ./bin/start-all.sh\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 启停 Master</span>\nsh ./bin/dolphinscheduler-daemon.sh stop master-server\nsh ./bin/dolphinscheduler-daemon.sh start master-server\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 启停 Worker</span>\nsh ./bin/dolphinscheduler-daemon.sh start worker-server\nsh ./bin/dolphinscheduler-daemon.sh stop worker-server\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 启停 Api</span>\nsh ./bin/dolphinscheduler-daemon.sh start api-server\nsh ./bin/dolphinscheduler-daemon.sh stop api-server\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 启停 Logger</span>\nsh ./bin/dolphinscheduler-daemon.sh start logger-server\nsh ./bin/dolphinscheduler-daemon.sh stop logger-server\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 启停 Alert</span>\nsh ./bin/dolphinscheduler-daemon.sh start alert-server\nsh ./bin/dolphinscheduler-daemon.sh stop alert-server\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 启停 Python Gateway</span>\nsh ./bin/dolphinscheduler-daemon.sh start python-gateway-server\nsh ./bin/dolphinscheduler-daemon.sh stop python-gateway-server\n</code></pre>\n<blockquote>\n<p><strong><em>注意:</em></strong>：服务用途请具体参见《系统架构设计》小节</p>\n</blockquote>\n",
  "link": "/dist/zh-cn/docs/2.0.3/user_doc/guide/installation/pseudo-cluster.html",
  "meta": {}
}