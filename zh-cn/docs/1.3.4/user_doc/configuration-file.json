{
  "filename": "configuration-file.md",
  "__html": "<h1>前言</h1>\n<p>本文档为dolphinscheduler配置文件说明文档,针对版本为 dolphinscheduler-1.3.x 版本.</p>\n<h1>目录结构</h1>\n<p>目前dolphinscheduler 所有的配置文件都在 [conf ] 目录中.\n为了更直观的了解[conf]目录所在的位置以及包含的配置文件,请查看下面dolphinscheduler安装目录的简化说明.\n本文主要讲述dolphinscheduler的配置文件.其他部分先不做赘述.</p>\n<p>[注:以下 dolphinscheduler 简称为DS.]</p>\n<pre><code>\n├─bin                               DS命令存放目录\n│  ├─dolphinscheduler-daemon.sh         启动/关闭DS服务脚本\n│  ├─start-all.sh                       根据配置文件启动所有DS服务\n│  ├─stop-all.sh                        根据配置文件关闭所有DS服务\n├─conf                              配置文件目录\n│  ├─application-api.properties         api服务配置文件\n│  ├─datasource.properties              数据库配置文件\n│  ├─zookeeper.properties               zookeeper配置文件\n│  ├─master.properties                  master服务配置文件\n│  ├─worker.properties                  worker服务配置文件\n│  ├─quartz.properties                  quartz服务配置文件\n│  ├─common.properties                  公共服务[存储]配置文件\n│  ├─alert.properties                   alert服务配置文件\n│  ├─config                             环境变量配置文件夹\n│      ├─install_config.conf                DS环境变量配置脚本[用于DS安装/启动]\n│  ├─env                                运行脚本环境变量配置目录\n│      ├─dolphinscheduler_env.sh            运行脚本加载环境变量配置文件[如: JAVA_HOME,HADOOP_HOME, HIVE_HOME ...]\n│  ├─org                                mybatis mapper文件目录\n│  ├─i18n                               i18n配置文件目录\n│  ├─logback-api.xml                    api服务日志配置文件\n│  ├─logback-master.xml                 master服务日志配置文件\n│  ├─logback-worker.xml                 worker服务日志配置文件\n│  ├─logback-alert.xml                  alert服务日志配置文件\n├─sql                               DS的元数据创建升级sql文件\n│  ├─create                             创建SQL脚本目录\n│  ├─upgrade                            升级SQL脚本目录\n│  ├─dolphinscheduler-postgre.sql       postgre数据库初始化脚本\n│  ├─dolphinscheduler_mysql.sql         mysql数据库初始化版本\n│  ├─soft_version                       当前DS版本标识文件\n├─script                            DS服务部署,数据库创建/升级脚本目录\n│  ├─create-dolphinscheduler.sh         DS数据库初始化脚本      \n│  ├─upgrade-dolphinscheduler.sh        DS数据库升级脚本                \n│  ├─monitor-server.sh                  DS服务监控启动脚本               \n│  ├─scp-hosts.sh                       安装文件传输脚本                                                    \n│  ├─remove-zk-node.sh                  清理zookeeper缓存文件脚本       \n├─ui                                前端WEB资源目录\n├─lib                               DS依赖的jar存放目录\n├─install.sh                        自动安装DS服务脚本\n\n\n</code></pre>\n<h1>配置文件详解</h1>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>服务分类</th>\n<th>配置文件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>启动/关闭DS服务脚本</td>\n<td><a href=\"http://dolphinscheduler-daemon.sh\">dolphinscheduler-daemon.sh</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>数据库连接配置</td>\n<td>datasource.properties</td>\n</tr>\n<tr>\n<td>3</td>\n<td>zookeeper连接配置</td>\n<td>zookeeper.properties</td>\n</tr>\n<tr>\n<td>4</td>\n<td>公共[存储]配置</td>\n<td>common.properties</td>\n</tr>\n<tr>\n<td>5</td>\n<td>API服务配置</td>\n<td>application-api.properties</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Master服务配置</td>\n<td>master.properties</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Worker服务配置</td>\n<td>worker.properties</td>\n</tr>\n<tr>\n<td>8</td>\n<td>Alert 服务配置</td>\n<td>alert.properties</td>\n</tr>\n<tr>\n<td>9</td>\n<td>Quartz配置</td>\n<td>quartz.properties</td>\n</tr>\n<tr>\n<td>10</td>\n<td>DS环境变量配置脚本[用于DS安装/启动]</td>\n<td>install_config.conf</td>\n</tr>\n<tr>\n<td>11</td>\n<td>运行脚本加载环境变量配置文件 <br />[如: JAVA_HOME,HADOOP_HOME, HIVE_HOME ...</td>\n<td>dolphinscheduler_env.sh</td>\n</tr>\n<tr>\n<td>12</td>\n<td>各服务日志配置文件</td>\n<td>api服务日志配置文件 : logback-api.xml  <br /> master服务日志配置文件  : logback-master.xml    <br /> worker服务日志配置文件 : logback-worker.xml  <br /> alert服务日志配置文件 : logback-alert.xml</td>\n</tr>\n</tbody>\n</table>\n<h2><a href=\"http://1.dolphinscheduler-daemon.sh\">1.dolphinscheduler-daemon.sh</a> [启动/关闭DS服务脚本]</h2>\n<p>dolphinscheduler-daemon.sh脚本负责DS的启动&amp;关闭.\n<a href=\"http://start-all.sh/stop-all.sh%E6%9C%80%E7%BB%88%E4%B9%9F%E6%98%AF%E9%80%9A%E8%BF%87dolphinscheduler-daemon.sh%E5%AF%B9%E9%9B%86%E7%BE%A4%E8%BF%9B%E8%A1%8C%E5%90%AF%E5%8A%A8/%E5%85%B3%E9%97%AD%E6%93%8D%E4%BD%9C\">start-all.sh/stop-all.sh最终也是通过dolphinscheduler-daemon.sh对集群进行启动/关闭操作</a>.\n目前DS只是做了一个基本的设置,JVM参数请根据各自资源的实际情况自行设置.</p>\n<p>默认简化参数如下:</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-built_in\">export</span> DOLPHINSCHEDULER_OPTS=<span class=\"hljs-string\">\"\n-server \n-Xmx16g \n-Xms1g \n-Xss512k \n-XX:+UseConcMarkSweepGC \n-XX:+CMSParallelRemarkEnabled \n-XX:+UseFastAccessorMethods \n-XX:+UseCMSInitiatingOccupancyOnly \n-XX:CMSInitiatingOccupancyFraction=70\n\"</span>\n</code></pre>\n<blockquote>\n<p>不建议设置&quot;-XX:DisableExplicitGC&quot; , DS使用Netty进行通讯,设置该参数,可能会导致内存泄漏.</p>\n</blockquote>\n<h2>2.datasource.properties [数据库连接]</h2>\n<p>在DS中使用Druid对数据库连接进行管理,默认简化配置如下.</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>spring.datasource.driver-class-name</td>\n<td></td>\n<td>数据库驱动</td>\n</tr>\n<tr>\n<td>spring.datasource.url</td>\n<td></td>\n<td>数据库连接地址</td>\n</tr>\n<tr>\n<td>spring.datasource.username</td>\n<td></td>\n<td>数据库用户名</td>\n</tr>\n<tr>\n<td>spring.datasource.password</td>\n<td></td>\n<td>数据库密码</td>\n</tr>\n<tr>\n<td>spring.datasource.initialSize</td>\n<td>5</td>\n<td>初始连接池数量</td>\n</tr>\n<tr>\n<td>spring.datasource.minIdle</td>\n<td>5</td>\n<td>最小连接池数量</td>\n</tr>\n<tr>\n<td>spring.datasource.maxActive</td>\n<td>5</td>\n<td>最大连接池数量</td>\n</tr>\n<tr>\n<td>spring.datasource.maxWait</td>\n<td>60000</td>\n<td>最大等待时长</td>\n</tr>\n<tr>\n<td>spring.datasource.timeBetweenEvictionRunsMillis</td>\n<td>60000</td>\n<td>连接检测周期</td>\n</tr>\n<tr>\n<td>spring.datasource.timeBetweenConnectErrorMillis</td>\n<td>60000</td>\n<td>重试间隔</td>\n</tr>\n<tr>\n<td>spring.datasource.minEvictableIdleTimeMillis</td>\n<td>300000</td>\n<td>连接保持空闲而不被驱逐的最小时间</td>\n</tr>\n<tr>\n<td>spring.datasource.validationQuery</td>\n<td>SELECT 1</td>\n<td>检测连接是否有效的sql</td>\n</tr>\n<tr>\n<td>spring.datasource.validationQueryTimeout</td>\n<td>3</td>\n<td>检测连接是否有效的超时时间[seconds]</td>\n</tr>\n<tr>\n<td>spring.datasource.testWhileIdle</td>\n<td>true</td>\n<td>申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。</td>\n</tr>\n<tr>\n<td>spring.datasource.testOnBorrow</td>\n<td>true</td>\n<td>申请连接时执行validationQuery检测连接是否有效</td>\n</tr>\n<tr>\n<td>spring.datasource.testOnReturn</td>\n<td>false</td>\n<td>归还连接时执行validationQuery检测连接是否有效</td>\n</tr>\n<tr>\n<td>spring.datasource.defaultAutoCommit</td>\n<td>true</td>\n<td>是否开启自动提交</td>\n</tr>\n<tr>\n<td>spring.datasource.keepAlive</td>\n<td>true</td>\n<td>连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。</td>\n</tr>\n<tr>\n<td>spring.datasource.poolPreparedStatements</td>\n<td>true</td>\n<td>开启PSCache</td>\n</tr>\n<tr>\n<td>spring.datasource.maxPoolPreparedStatementPerConnectionSize</td>\n<td>20</td>\n<td>要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。</td>\n</tr>\n</tbody>\n</table>\n<h2>3.zookeeper.properties [zookeeper连接配置]</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>zookeeper.quorum</td>\n<td>localhost:2181</td>\n<td>zk集群连接信息</td>\n</tr>\n<tr>\n<td>zookeeper.dolphinscheduler.root</td>\n<td>/dolphinscheduler</td>\n<td>DS在zookeeper存储根目录</td>\n</tr>\n<tr>\n<td>zookeeper.session.timeout</td>\n<td>60000</td>\n<td>session 超时</td>\n</tr>\n<tr>\n<td>zookeeper.connection.timeout</td>\n<td>30000</td>\n<td>连接超时</td>\n</tr>\n<tr>\n<td>zookeeper.retry.base.sleep</td>\n<td>100</td>\n<td>基本重试时间差</td>\n</tr>\n<tr>\n<td>zookeeper.retry.max.sleep</td>\n<td>30000</td>\n<td>最大重试时间</td>\n</tr>\n<tr>\n<td>zookeeper.retry.maxtime</td>\n<td>10</td>\n<td>最大重试次数</td>\n</tr>\n</tbody>\n</table>\n<h2>4.common.properties [hadoop、s3、yarn配置]</h2>\n<p>common.properties配置文件目前主要是配置hadoop/s3a相关的配置.</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>resource.storage.type</td>\n<td>NONE</td>\n<td>资源文件存储类型: HDFS,S3,NONE</td>\n</tr>\n<tr>\n<td>resource.upload.path</td>\n<td>/dolphinscheduler</td>\n<td>资源文件存储路径</td>\n</tr>\n<tr>\n<td>data.basedir.path</td>\n<td>/tmp/dolphinscheduler</td>\n<td>本地工作目录,用于存放临时文件</td>\n</tr>\n<tr>\n<td>hadoop.security.authentication.startup.state</td>\n<td>false</td>\n<td>hadoop是否开启kerberos权限</td>\n</tr>\n<tr>\n<td>java.security.krb5.conf.path</td>\n<td>/opt/krb5.conf</td>\n<td>kerberos配置目录</td>\n</tr>\n<tr>\n<td>login.user.keytab.username</td>\n<td><a href=\"mailto:hdfs-mycluster@ESZ.COM\">hdfs-mycluster@ESZ.COM</a></td>\n<td>kerberos登录用户</td>\n</tr>\n<tr>\n<td>login.user.keytab.path</td>\n<td>/opt/hdfs.headless.keytab</td>\n<td>kerberos登录用户keytab</td>\n</tr>\n<tr>\n<td>resource.view.suffixs</td>\n<td>txt,log,sh,conf,cfg,py,java,sql,hql,xml,properties</td>\n<td>资源中心支持的文件格式</td>\n</tr>\n<tr>\n<td>hdfs.root.user</td>\n<td>hdfs</td>\n<td>如果存储类型为HDFS,需要配置拥有对应操作权限的用户</td>\n</tr>\n<tr>\n<td>fs.defaultFS</td>\n<td>hdfs://mycluster:8020</td>\n<td>请求地址如果resource.storage.type=S3 ,该值类似为: s3a://dolphinscheduler. 如果resource.storage.type=HDFS, 如果 hadoop 配置了 HA ,需要复制core-site.xml 和 hdfs-site.xml 文件到conf目录</td>\n</tr>\n<tr>\n<td>fs.s3a.endpoint</td>\n<td></td>\n<td>s3 endpoint地址</td>\n</tr>\n<tr>\n<td>fs.s3a.access.key</td>\n<td></td>\n<td>s3 access key</td>\n</tr>\n<tr>\n<td>fs.s3a.secret.key</td>\n<td></td>\n<td>s3 secret key</td>\n</tr>\n<tr>\n<td>yarn.resourcemanager.ha.rm.ids</td>\n<td></td>\n<td>yarn resourcemanager 地址, 如果resourcemanager开启了HA, 输入HA的IP地址(以逗号分隔),如果resourcemanager为单节点, 该值为空即可.</td>\n</tr>\n<tr>\n<td>yarn.application.status.address</td>\n<td><a href=\"http://ds1:8088/ws/v1/cluster/apps/%25s\">http://ds1:8088/ws/v1/cluster/apps/%s</a></td>\n<td>如果resourcemanager开启了HA或者没有使用resourcemanager,保持默认值即可. 如果resourcemanager为单节点,你需要将ds1 配置为resourcemanager对应的hostname</td>\n</tr>\n<tr>\n<td>dolphinscheduler.env.path</td>\n<td>env/dolphinscheduler_env.sh</td>\n<td>运行脚本加载环境变量配置文件[如: JAVA_HOME,HADOOP_HOME, HIVE_HOME ...]</td>\n</tr>\n<tr>\n<td>development.state</td>\n<td>false</td>\n<td>是否处于开发模式</td>\n</tr>\n<tr>\n<td>kerberos.expire.time</td>\n<td>7</td>\n<td>kerberos过期时间 [小时]</td>\n</tr>\n</tbody>\n</table>\n<h2>5.application-api.properties [API服务配置]</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>server.port</td>\n<td>12345</td>\n<td>api服务通讯端口</td>\n</tr>\n<tr>\n<td>server.servlet.session.timeout</td>\n<td>7200</td>\n<td>session超时时间</td>\n</tr>\n<tr>\n<td>server.servlet.context-path</td>\n<td>/dolphinscheduler</td>\n<td>请求路径</td>\n</tr>\n<tr>\n<td>spring.servlet.multipart.max-file-size</td>\n<td>1024MB</td>\n<td>最大上传文件大小</td>\n</tr>\n<tr>\n<td>spring.servlet.multipart.max-request-size</td>\n<td>1024MB</td>\n<td>最大请求大小</td>\n</tr>\n<tr>\n<td>server.jetty.max-http-post-size</td>\n<td>5000000</td>\n<td>jetty服务最大发送请求大小</td>\n</tr>\n<tr>\n<td>spring.messages.encoding</td>\n<td>UTF-8</td>\n<td>请求编码</td>\n</tr>\n<tr>\n<td>spring.jackson.time-zone</td>\n<td>GMT+8</td>\n<td>设置时区</td>\n</tr>\n<tr>\n<td>spring.messages.basename</td>\n<td>i18n/messages</td>\n<td>i18n配置</td>\n</tr>\n<tr>\n<td>security.authentication.type</td>\n<td>PASSWORD</td>\n<td>权限校验类型</td>\n</tr>\n</tbody>\n</table>\n<h2>6.master.properties [Master服务配置]</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>master.listen.port</td>\n<td>5678</td>\n<td>master通讯端口</td>\n</tr>\n<tr>\n<td>master.exec.threads</td>\n<td>100</td>\n<td>工作线程数量</td>\n</tr>\n<tr>\n<td>master.exec.task.num</td>\n<td>20</td>\n<td>并行任务数量</td>\n</tr>\n<tr>\n<td>master.dispatch.task.num</td>\n<td>3</td>\n<td>分发任务数量</td>\n</tr>\n<tr>\n<td>master.heartbeat.interval</td>\n<td>10</td>\n<td>心跳间隔</td>\n</tr>\n<tr>\n<td>master.task.commit.retryTimes</td>\n<td>5</td>\n<td>任务重试次数</td>\n</tr>\n<tr>\n<td>master.task.commit.interval</td>\n<td>1000</td>\n<td>任务提交间隔</td>\n</tr>\n<tr>\n<td>master.max.cpuload.avg</td>\n<td>-1</td>\n<td>cpu小于该配置时,master 服务才能工作.默认值为-1 :  cpu cores * 2</td>\n</tr>\n<tr>\n<td>master.reserved.memory</td>\n<td>0.3</td>\n<td>内存阈值限制,可用内存大于该值,master 服务才能工作.</td>\n</tr>\n</tbody>\n</table>\n<h2>7.worker.properties [Worker服务配置]</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>worker.listen.port</td>\n<td>1234</td>\n<td>worker通讯端口</td>\n</tr>\n<tr>\n<td>worker.exec.threads</td>\n<td>100</td>\n<td>工作线程数量</td>\n</tr>\n<tr>\n<td>worker.heartbeat.interval</td>\n<td>10</td>\n<td>心跳间隔</td>\n</tr>\n<tr>\n<td>worker.max.cpuload.avg</td>\n<td>-1</td>\n<td>cpu小于该配置时,worker 服务才能工作. 默认值为-1 :  cpu cores * 2</td>\n</tr>\n<tr>\n<td>worker.reserved.memory</td>\n<td>0.3</td>\n<td>内存阈值限制,可用内存大于该值,worker 服务才能工作.</td>\n</tr>\n<tr>\n<td>worker.group</td>\n<td>default</td>\n<td>workgroup分组配置. <br> worker启动时会根据该配置自动加入对应的分组.</td>\n</tr>\n</tbody>\n</table>\n<h2>8.alert.properties [Alert 告警服务配置]</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>alert.type</td>\n<td>EMAIL</td>\n<td>告警类型</td>\n</tr>\n<tr>\n<td>mail.protocol</td>\n<td>SMTP</td>\n<td>邮件服务器协议</td>\n</tr>\n<tr>\n<td>mail.server.host</td>\n<td><a href=\"http://xxx.xxx.com\">xxx.xxx.com</a></td>\n<td>邮件服务器地址</td>\n</tr>\n<tr>\n<td>mail.server.port</td>\n<td>25</td>\n<td>邮件服务器端口</td>\n</tr>\n<tr>\n<td>mail.sender</td>\n<td><a href=\"mailto:xxx@xxx.com\">xxx@xxx.com</a></td>\n<td>发送人邮箱</td>\n</tr>\n<tr>\n<td>mail.user</td>\n<td><a href=\"mailto:xxx@xxx.com\">xxx@xxx.com</a></td>\n<td>发送人邮箱名称</td>\n</tr>\n<tr>\n<td>mail.passwd</td>\n<td>111111</td>\n<td>发送人邮箱密码</td>\n</tr>\n<tr>\n<td>mail.smtp.starttls.enable</td>\n<td>true</td>\n<td>邮箱是否开启tls</td>\n</tr>\n<tr>\n<td>mail.smtp.ssl.enable</td>\n<td>false</td>\n<td>邮箱是否开启ssl</td>\n</tr>\n<tr>\n<td>mail.smtp.ssl.trust</td>\n<td><a href=\"http://xxx.xxx.com\">xxx.xxx.com</a></td>\n<td>邮箱ssl白名单</td>\n</tr>\n<tr>\n<td>xls.file.path</td>\n<td>/tmp/xls</td>\n<td>邮箱附件临时工作目录</td>\n</tr>\n<tr>\n<td></td>\n<td>以下为企业微信配置[选填]</td>\n<td></td>\n</tr>\n<tr>\n<td>enterprise.wechat.enable</td>\n<td>false</td>\n<td>企业微信是否启用</td>\n</tr>\n<tr>\n<td><a href=\"http://enterprise.wechat.corp.id\">enterprise.wechat.corp.id</a></td>\n<td>xxxxxxx</td>\n<td></td>\n</tr>\n<tr>\n<td>enterprise.wechat.secret</td>\n<td>xxxxxxx</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"http://enterprise.wechat.agent.id\">enterprise.wechat.agent.id</a></td>\n<td>xxxxxxx</td>\n<td></td>\n</tr>\n<tr>\n<td>enterprise.wechat.users</td>\n<td>xxxxxxx</td>\n<td></td>\n</tr>\n<tr>\n<td>enterprise.wechat.token.url</td>\n<td><a href=\"https://qyapi.weixin.qq.com/cgi-bin/gettoken\">https://qyapi.weixin.qq.com/cgi-bin/gettoken</a>?  <br /> corpid=corpId&corpsecret=secret</td>\n<td></td>\n</tr>\n<tr>\n<td>enterprise.wechat.push.url</td>\n<td><a href=\"https://qyapi.weixin.qq.com/cgi-bin/message/send\">https://qyapi.weixin.qq.com/cgi-bin/message/send</a>?  <br /> access_token=$token</td>\n<td></td>\n</tr>\n<tr>\n<td>enterprise.wechat.user.send.msg</td>\n<td></td>\n<td>发送消息格式</td>\n</tr>\n<tr>\n<td>enterprise.wechat.team.send.msg</td>\n<td></td>\n<td>群发消息格式</td>\n</tr>\n<tr>\n<td>plugin.dir</td>\n<td>/Users/xx/your/path/to/plugin/dir</td>\n<td>插件目录</td>\n</tr>\n</tbody>\n</table>\n<h2>9.quartz.properties [Quartz配置]</h2>\n<p>这里面主要是quartz配置,请结合实际业务场景&amp;资源进行配置,本文暂时不做展开.</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>org.quartz.jobStore.driverDelegateClass</td>\n<td>org.quartz.impl.jdbcjobstore.StdJDBCDelegate</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.driverDelegateClass</td>\n<td>org.quartz.impl.jdbcjobstore.PostgreSQLDelegate</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.scheduler.instanceName</td>\n<td>DolphinScheduler</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.scheduler.instanceId</td>\n<td>AUTO</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.scheduler.makeSchedulerThreadDaemon</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.useProperties</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.threadPool.class</td>\n<td>org.quartz.simpl.SimpleThreadPool</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.threadPool.makeThreadsDaemons</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.threadPool.threadCount</td>\n<td>25</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.threadPool.threadPriority</td>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.class</td>\n<td>org.quartz.impl.jdbcjobstore.JobStoreTX</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.tablePrefix</td>\n<td>QRTZ_</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.isClustered</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.misfireThreshold</td>\n<td>60000</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.clusterCheckinInterval</td>\n<td>5000</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.acquireTriggersWithinLock</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.jobStore.dataSource</td>\n<td>myDs</td>\n<td></td>\n</tr>\n<tr>\n<td>org.quartz.dataSource.myDs.connectionProvider.class</td>\n<td>org.apache.dolphinscheduler.service.quartz.DruidConnectionProvider</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>10.install_config.conf [DS环境变量配置脚本[用于DS安装/启动]]</h2>\n<p>install_config.conf这个配置文件比较繁琐,这个文件主要有两个地方会用到.</p>\n<ul>\n<li>1.DS集群的自动安装.</li>\n</ul>\n<blockquote>\n<p>调用install.sh脚本会自动加载该文件中的配置.并根据该文件中的内容自动配置上述的配置文件中的内容.\n比如:dolphinscheduler-daemon.sh、datasource.properties、zookeeper.properties、common.properties、application-api.properties、master.properties、worker.properties、alert.properties、quartz.properties 等文件.</p>\n</blockquote>\n<ul>\n<li>2.DS集群的启动&amp;关闭.</li>\n</ul>\n<blockquote>\n<p>DS集群在启动&amp;关闭的时候,会加载该配置文件中的masters,workers,alertServer,apiServers等参数,启动/关闭DS集群.</p>\n</blockquote>\n<p>文件内容如下:</p>\n<pre><code class=\"language-bash\">\n<span class=\"hljs-comment\"># 注意: 该配置文件中如果包含特殊字符,如: `.*[]^${}\\+?|()@#&amp;`, 请转义,</span>\n<span class=\"hljs-comment\">#      示例: `[` 转义为 `\\[`</span>\n\n<span class=\"hljs-comment\"># 数据库类型, 目前仅支持 postgresql 或者 mysql</span>\ndbtype=<span class=\"hljs-string\">\"mysql\"</span>\n\n<span class=\"hljs-comment\"># 数据库 地址 &amp; 端口</span>\ndbhost=<span class=\"hljs-string\">\"192.168.xx.xx:3306\"</span>\n\n<span class=\"hljs-comment\"># 数据库 名称</span>\ndbname=<span class=\"hljs-string\">\"dolphinscheduler\"</span>\n\n\n<span class=\"hljs-comment\"># 数据库 用户名</span>\nusername=<span class=\"hljs-string\">\"xx\"</span>\n\n<span class=\"hljs-comment\"># 数据库 密码</span>\npassword=<span class=\"hljs-string\">\"xx\"</span>\n\n<span class=\"hljs-comment\"># Zookeeper地址</span>\nzkQuorum=<span class=\"hljs-string\">\"192.168.xx.xx:2181,192.168.xx.xx:2181,192.168.xx.xx:2181\"</span>\n\n<span class=\"hljs-comment\"># 将DS安装到哪个目录，如: /data1_1T/dolphinscheduler，</span>\ninstallPath=<span class=\"hljs-string\">\"/data1_1T/dolphinscheduler\"</span>\n\n<span class=\"hljs-comment\"># 使用哪个用户部署</span>\n<span class=\"hljs-comment\"># 注意: 部署用户需要sudo 权限, 并且可以操作 hdfs .</span>\n<span class=\"hljs-comment\">#     如果使用hdfs的话,根目录必须使用该用户进行创建.否则会有权限相关的问题.</span>\ndeployUser=<span class=\"hljs-string\">\"dolphinscheduler\"</span>\n\n\n<span class=\"hljs-comment\"># 以下为告警服务配置</span>\n<span class=\"hljs-comment\"># 邮件服务器地址</span>\nmailServerHost=<span class=\"hljs-string\">\"smtp.exmail.qq.com\"</span>\n\n<span class=\"hljs-comment\"># 邮件服务器 端口</span>\nmailServerPort=<span class=\"hljs-string\">\"25\"</span>\n\n<span class=\"hljs-comment\"># 发送者</span>\nmailSender=<span class=\"hljs-string\">\"xxxxxxxxxx\"</span>\n\n<span class=\"hljs-comment\"># 发送用户</span>\nmailUser=<span class=\"hljs-string\">\"xxxxxxxxxx\"</span>\n\n<span class=\"hljs-comment\"># 邮箱密码</span>\nmailPassword=<span class=\"hljs-string\">\"xxxxxxxxxx\"</span>\n\n<span class=\"hljs-comment\"># TLS协议的邮箱设置为true，否则设置为false</span>\nstarttlsEnable=<span class=\"hljs-string\">\"true\"</span>\n\n<span class=\"hljs-comment\"># 开启SSL协议的邮箱配置为true，否则为false。注意: starttlsEnable和sslEnable不能同时为true</span>\nsslEnable=<span class=\"hljs-string\">\"false\"</span>\n\n<span class=\"hljs-comment\"># 邮件服务地址值，同 mailServerHost</span>\nsslTrust=<span class=\"hljs-string\">\"smtp.exmail.qq.com\"</span>\n\n<span class=\"hljs-comment\">#业务用到的比如sql等资源文件上传到哪里，可以设置：HDFS,S3,NONE。如果想上传到HDFS，请配置为HDFS；如果不需要资源上传功能请选择NONE。</span>\nresourceStorageType=<span class=\"hljs-string\">\"NONE\"</span>\n\n<span class=\"hljs-comment\"># if S3，write S3 address，HA，for example ：s3a://dolphinscheduler，</span>\n<span class=\"hljs-comment\"># Note，s3 be sure to create the root directory /dolphinscheduler</span>\ndefaultFS=<span class=\"hljs-string\">\"hdfs://mycluster:8020\"</span>\n\n<span class=\"hljs-comment\"># 如果resourceStorageType 为S3 需要配置的参数如下:</span>\ns3Endpoint=<span class=\"hljs-string\">\"http://192.168.xx.xx:9010\"</span>\ns3AccessKey=<span class=\"hljs-string\">\"xxxxxxxxxx\"</span>\ns3SecretKey=<span class=\"hljs-string\">\"xxxxxxxxxx\"</span>\n\n<span class=\"hljs-comment\"># 如果ResourceManager是HA，则配置为ResourceManager节点的主备ip或者hostname,比如\"192.168.xx.xx,192.168.xx.xx\"，否则如果是单ResourceManager或者根本没用到yarn,请配置yarnHaIps=\"\"即可，如果没用到yarn，配置为\"\"</span>\nyarnHaIps=<span class=\"hljs-string\">\"192.168.xx.xx,192.168.xx.xx\"</span>\n\n<span class=\"hljs-comment\"># 如果是单ResourceManager，则配置为ResourceManager节点ip或主机名，否则保持默认值即可。</span>\nsingleYarnIp=<span class=\"hljs-string\">\"yarnIp1\"</span>\n\n<span class=\"hljs-comment\"># 资源文件在 HDFS/S3  存储路径</span>\nresourceUploadPath=<span class=\"hljs-string\">\"/dolphinscheduler\"</span>\n\n\n<span class=\"hljs-comment\"># HDFS/S3  操作用户</span>\nhdfsRootUser=<span class=\"hljs-string\">\"hdfs\"</span>\n\n<span class=\"hljs-comment\"># 以下为 kerberos 配置</span>\n\n<span class=\"hljs-comment\"># kerberos是否开启</span>\nkerberosStartUp=<span class=\"hljs-string\">\"false\"</span>\n<span class=\"hljs-comment\"># kdc krb5 config file path</span>\nkrb5ConfPath=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$installPath</span>/conf/krb5.conf\"</span>\n<span class=\"hljs-comment\"># keytab username</span>\nkeytabUserName=<span class=\"hljs-string\">\"hdfs-mycluster@ESZ.COM\"</span>\n<span class=\"hljs-comment\"># username keytab path</span>\nkeytabPath=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$installPath</span>/conf/hdfs.headless.keytab\"</span>\n\n\n<span class=\"hljs-comment\"># api 服务端口</span>\napiServerPort=<span class=\"hljs-string\">\"12345\"</span>\n\n\n<span class=\"hljs-comment\"># 部署DS的所有主机hostname</span>\nips=<span class=\"hljs-string\">\"ds1,ds2,ds3,ds4,ds5\"</span>\n\n<span class=\"hljs-comment\"># ssh 端口 , 默认 22</span>\nsshPort=<span class=\"hljs-string\">\"22\"</span>\n\n<span class=\"hljs-comment\"># 部署master服务主机</span>\nmasters=<span class=\"hljs-string\">\"ds1,ds2\"</span>\n\n<span class=\"hljs-comment\"># 部署 worker服务的主机</span>\n<span class=\"hljs-comment\"># 注意: 每一个worker都需要设置一个worker 分组的名称,默认值为 \"default\"</span>\nworkers=<span class=\"hljs-string\">\"ds1:default,ds2:default,ds3:default,ds4:default,ds5:default\"</span>\n\n<span class=\"hljs-comment\">#  部署alert服务主机</span>\nalertServer=<span class=\"hljs-string\">\"ds3\"</span>\n\n<span class=\"hljs-comment\"># 部署api服务主机 </span>\napiServers=<span class=\"hljs-string\">\"ds1\"</span>\n</code></pre>\n<h2>11.dolphinscheduler_env.sh [环境变量配置]</h2>\n<p>通过类似shell方式提交任务的的时候,会加载该配置文件中的环境变量到主机中.\n涉及到的任务类型有: Shell任务、Python任务、Spark任务、Flink任务、Datax任务等等</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-built_in\">export</span> HADOOP_HOME=/opt/soft/hadoop\n<span class=\"hljs-built_in\">export</span> HADOOP_CONF_DIR=/opt/soft/hadoop/etc/hadoop\n<span class=\"hljs-built_in\">export</span> SPARK_HOME1=/opt/soft/spark1\n<span class=\"hljs-built_in\">export</span> SPARK_HOME2=/opt/soft/spark2\n<span class=\"hljs-built_in\">export</span> PYTHON_HOME=/opt/soft/python\n<span class=\"hljs-built_in\">export</span> JAVA_HOME=/opt/soft/java\n<span class=\"hljs-built_in\">export</span> HIVE_HOME=/opt/soft/hive\n<span class=\"hljs-built_in\">export</span> FLINK_HOME=/opt/soft/flink\n<span class=\"hljs-built_in\">export</span> DATAX_HOME=/opt/soft/datax/bin/datax.py\n\n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$HADOOP_HOME</span>/bin:<span class=\"hljs-variable\">$SPARK_HOME1</span>/bin:<span class=\"hljs-variable\">$SPARK_HOME2</span>/bin:<span class=\"hljs-variable\">$PYTHON_HOME</span>:<span class=\"hljs-variable\">$JAVA_HOME</span>/bin:<span class=\"hljs-variable\">$HIVE_HOME</span>/bin:<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$FLINK_HOME</span>/bin:<span class=\"hljs-variable\">$DATAX_HOME</span>:<span class=\"hljs-variable\">$PATH</span>\n\n</code></pre>\n<h2>12.各服务日志配置文件</h2>\n<table>\n<thead>\n<tr>\n<th>对应服务服务名成</th>\n<th>日志文件名</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api服务日志配置文件</td>\n<td>logback-api.xml</td>\n</tr>\n<tr>\n<td>master服务日志配置文件</td>\n<td>logback-master.xml</td>\n</tr>\n<tr>\n<td>worker服务日志配置文件</td>\n<td>logback-worker.xml</td>\n</tr>\n<tr>\n<td>alert服务日志配置文件</td>\n<td>logback-alert.xml</td>\n</tr>\n</tbody>\n</table>\n",
  "link": "/zh-cn/docs/1.3.4/user_doc/configuration-file.html",
  "meta": {}
}