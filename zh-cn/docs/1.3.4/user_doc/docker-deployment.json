{
  "filename": "docker-deployment.md",
  "__html": "<h1>快速试用 Docker 部署</h1>\n<h2>先决条件</h2>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/install/\">Docker</a> 1.13.1+</li>\n<li><a href=\"https://docs.docker.com/compose/\">Docker Compose</a> 1.11.0+</li>\n</ul>\n<h2>如何使用 Docker 镜像</h2>\n<p>有 3 种方式可以快速试用 DolphinScheduler</p>\n<h3>一、以 docker-compose 的方式启动 DolphinScheduler (推荐)</h3>\n<p>这种方式需要先安装 <a href=\"https://docs.docker.com/compose/\">docker-compose</a>, docker-compose 的安装网上已经有非常多的资料，请自行安装即可</p>\n<h4>1、下载源码包</h4>\n<p>请下载源码包 apache-dolphinscheduler-incubating-1.3.4-src.zip，下载地址: <a href=\"/zh-cn/download/download.html\">下载</a></p>\n<h4>2、拉取镜像并启动服务</h4>\n<pre><code>$ unzip apache-dolphinscheduler-incubating-1.3.4-src.zip\n$ cd apache-dolphinscheduler-incubating-1.3.4-src-release/docker/docker-swarm\n$ docker pull dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:1.3.4\n$ docker tag apache/dolphinscheduler:1.3.4 apache/dolphinscheduler:latest\n$ docker-compose up -d\n</code></pre>\n<p><strong>PostgreSQL</strong> (用户 <code>root</code>, 密码 <code>root</code>, 数据库 <code>dolphinscheduler</code>) 和 <strong>ZooKeeper</strong> 服务将会默认启动</p>\n<h4>3、登录系统</h4>\n<p>访问前端页面：<a href=\"http://localhost:8888\">http://localhost:8888</a>，如果你是特定服务器修改，请将 localhost 修改成对应的地址</p>\n<p>默认的用户是<code>admin</code>，默认的密码是<code>dolphinscheduler123</code></p>\n<p align=\"center\">\n  <img src=\"/img/login.png\" width=\"60%\" />\n</p>\n<p>请参考用户手册章节的<a href=\"./quick-start.md\">快速上手</a> 查看如何使用DolphinScheduler</p>\n<h3>二、通过指定已存在的 PostgreSQL 和 ZooKeeper 服务</h3>\n<p>这种方式需要先安装 <a href=\"https://docs.docker.com/engine/install/\">docker</a>, docker 的安装网上已经有非常多的资料，请自行安装即可</p>\n<h4>1、基础软件安装 (请自行安装)</h4>\n<ul>\n<li><a href=\"https://www.postgresql.org/download/\">PostgreSQL</a> (8.2.15+)</li>\n<li><a href=\"https://zookeeper.apache.org/releases.html\">ZooKeeper</a> (3.4.6+)</li>\n<li><a href=\"https://docs.docker.com/engine/install/\">Docker</a> (1.13.1+)</li>\n</ul>\n<h4>2、请登录 PostgreSQL 数据库，创建名为 <code>dolphinscheduler</code> 数据库</h4>\n<h4>3、初始化数据库，导入 <code>sql/dolphinscheduler-postgre.sql</code> 进行创建表及基础数据导入</h4>\n<h4>4、下载 DolphinScheduler 镜像</h4>\n<p>我们已将面向用户的 DolphinScheduler 镜像上传至 docker 仓库，用户无需在本地构建镜像，直接执行以下命令从 docker 仓库 pull 镜像：</p>\n<pre><code>docker pull dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:1.3.4\n</code></pre>\n<h4>5、运行一个 DolphinScheduler 实例</h4>\n<pre><code>$ docker run -d --name dolphinscheduler \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\n-e ZOOKEEPER_QUORUM=&quot;192.168.x.x:2181&quot; \\\n-p 8888:8888 \\\napache/dolphinscheduler:1.3.4 all\n</code></pre>\n<p>注：数据库用户 test 和密码 test 需要替换为实际的 PostgreSQL 用户和密码，192.168.x.x 需要替换为 PostgreSQL 和 ZooKeeper 的主机 IP</p>\n<h4>6、登录系统</h4>\n<p>同上</p>\n<h3>三、运行 DolphinScheduler 中的独立服务</h3>\n<p>在容器启动时，会自动启动以下服务：</p>\n<pre><code>    MasterServer         ----- master服务\n    WorkerServer         ----- worker服务\n    LoggerServer         ----- logger服务\n    ApiApplicationServer ----- api服务\n    AlertServer          ----- alert服务\n</code></pre>\n<p>如果你只是想运行 dolphinscheduler 中的部分服务</p>\n<p>你可以够通执行以下命令来运行dolphinscheduler中的部分服务</p>\n<ul>\n<li>启动一个 <strong>master server</strong>, 如下:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-master \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\n-e ZOOKEEPER_QUORUM=&quot;192.168.x.x:2181&quot; \\\napache/dolphinscheduler:1.3.4 master-server\n</code></pre>\n<ul>\n<li>启动一个 <strong>worker server</strong> (包括 <strong>logger server</strong>), 如下:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-worker \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\n-e ZOOKEEPER_QUORUM=&quot;192.168.x.x:2181&quot; \\\napache/dolphinscheduler:1.3.4 worker-server\n</code></pre>\n<ul>\n<li>启动一个 <strong>api server</strong>, 如下:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-api \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\n-e ZOOKEEPER_QUORUM=&quot;192.168.x.x:2181&quot; \\\n-p 12345:12345 \\\napache/dolphinscheduler:1.3.4 api-server\n</code></pre>\n<ul>\n<li>启动一个 <strong>alert server</strong>, 如下:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-alert \\\n-e DATABASE_HOST=&quot;192.168.x.x&quot; -e DATABASE_PORT=&quot;5432&quot; -e DATABASE_DATABASE=&quot;dolphinscheduler&quot; \\\n-e DATABASE_USERNAME=&quot;test&quot; -e DATABASE_PASSWORD=&quot;test&quot; \\\napache/dolphinscheduler:1.3.4 alert-server\n</code></pre>\n<ul>\n<li>启动一个 <strong>frontend</strong>, 如下:</li>\n</ul>\n<pre><code>$ docker run -d --name dolphinscheduler-frontend \\\n-e FRONTEND_API_SERVER_HOST=&quot;192.168.x.x&quot; -e FRONTEND_API_SERVER_PORT=&quot;12345&quot; \\\n-p 8888:8888 \\\napache/dolphinscheduler:1.3.4 frontend\n</code></pre>\n<p><strong>注意</strong>: 当你运行dolphinscheduler中的部分服务时，你必须指定这些环境变量 <code>DATABASE_HOST</code>, <code>DATABASE_PORT</code>, <code>DATABASE_DATABASE</code>, <code>DATABASE_USERNAME</code>, <code>DATABASE_PASSWORD</code>, <code>ZOOKEEPER_QUORUM</code>。</p>\n",
  "link": "/dist/zh-cn/docs/1.3.4/user_doc/docker-deployment.html",
  "meta": {}
}