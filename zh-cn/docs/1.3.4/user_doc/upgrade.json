{
  "filename": "upgrade.md",
  "__html": "<h1>DolphinScheduler升级文档</h1>\n<h2>1. 备份上一版本文件和数据库</h2>\n<h2>2. 停止dolphinscheduler所有服务</h2>\n<p><code>sh ./script/stop-all.sh</code></p>\n<h2>3. 下载新版本的安装包</h2>\n<ul>\n<li><a href=\"https://dolphinscheduler.apache.org/en-us/docs/user_doc/download.html\">下载</a>, 下载最新版本的二进制安装包</li>\n<li>以下升级操作都需要在新版本的目录进行</li>\n</ul>\n<h2>4. 数据库升级</h2>\n<ul>\n<li>\n<p>修改conf/datasource.properties中的下列属性</p>\n</li>\n<li>\n<p>如果选择 MySQL，请注释掉 PostgreSQL 相关配置(反之同理), 还需要手动添加 [<a href=\"https://downloads.MySQL.com/archives/c-j/\"> mysql-connector-java 驱动 jar </a>] 包到 lib 目录下，这里下载的是mysql-connector-java-5.1.47.jar，然后正确配置数据库连接相关信息</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\">  # postgre</span>\n<span class=\"hljs-comment\">  #spring.datasource.driver-class-name=org.postgresql.Driver</span>\n<span class=\"hljs-comment\">  #spring.datasource.url=jdbc:postgresql://localhost:5432/dolphinscheduler</span>\n<span class=\"hljs-comment\">  # mysql</span>\n  <span class=\"hljs-meta\">spring.datasource.driver-class-name</span>=<span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n  <span class=\"hljs-meta\">spring.datasource.url</span>=<span class=\"hljs-string\">jdbc:mysql://xxx:3306/dolphinscheduler?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true     需要修改ip，本机localhost即可</span>\n  <span class=\"hljs-meta\">spring.datasource.username</span>=<span class=\"hljs-string\">xxx\t\t\t\t\t\t需要修改为上面的{user}值</span>\n  <span class=\"hljs-meta\">spring.datasource.password</span>=<span class=\"hljs-string\">xxx\t\t\t\t\t\t需要修改为上面的{password}值</span>\n</code></pre>\n</li>\n<li>\n<p>执行数据库升级脚本</p>\n</li>\n</ul>\n<p><code>sh ./script/upgrade-dolphinscheduler.sh</code></p>\n<h2>5. 服务升级</h2>\n<h3>5.1 修改<code>conf/config/install_config.conf</code>配置内容</h3>\n<p>单机部署请参照<a href=\"https://dolphinscheduler.apache.org/zh-cn/docs/1.3.1/user_doc/standalone-deployment.html\">单机部署(Standalone)</a>中的<code>6.修改运行参数部分</code>\n集群部署请参照<a href=\"https://dolphinscheduler.apache.org/zh-cn/docs/1.3.1/user_doc/cluster-deployment.html\">集群部署(Cluster)</a>中的<code>6.修改运行参数部分</code></p>\n<h3>注意事项</h3>\n<p>创建worker分组在1.3.1版本和之前版本有了不同的设计</p>\n<ul>\n<li>worker分组在1.3.1版本之前是通过UI界面创建</li>\n<li>worker分组在1.3.1版本是修改worker配置指定</li>\n</ul>\n<h3>1.3.1之前的版本升级1.3.2时如何设置worker分组与之前一致</h3>\n<p>1、查询已备份的数据库,查看t_ds_worker_group表记录，重点看下id、name和ip_list三个字段</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:right\">ip_list</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:center\">service1</td>\n<td style=\"text-align:right\">192.168.xx.10</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:center\">service2</td>\n<td style=\"text-align:right\">192.168.xx.11,192.168.xx.12</td>\n</tr>\n</tbody>\n</table>\n<p>2、修改conf/config/install_config.conf中的workers参数</p>\n<p>假设以下为要部署的worker主机名和ip的对应关系</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">主机名</th>\n<th style=\"text-align:center\">ip</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ds1</td>\n<td style=\"text-align:center\">192.168.xx.10</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ds2</td>\n<td style=\"text-align:center\">192.168.xx.11</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ds3</td>\n<td style=\"text-align:center\">192.168.xx.12</td>\n</tr>\n</tbody>\n</table>\n<p>那么为了保持与之前版本worker分组一致，则需要把workers参数改为如下</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">worker服务部署在哪台机器上,并指定此worker属于哪一个worker组</span>\nworkers=\"ds1:service1,ds2:service2,ds3:service2\"\n</code></pre>\n<h3>1.3.2的worker分组进行了增强</h3>\n<p>1.3.1版本的worker不能同时属于多个worker分组，1.3.2是可以支持的\n所以在1.3.1里面的workers=&quot;ds1:service1,ds1:service2&quot;是不支持的，\n在1.3.2可以设置workers=&quot;ds1:service1,ds1:service2&quot;</p>\n<h3>5.2 执行部署脚本</h3>\n<pre><code class=\"language-shell\">`sh install.sh`\n</code></pre>\n",
  "link": "/zh-cn/docs/1.3.4/user_doc/upgrade.html",
  "meta": {}
}