{
  "filename": "backend-deployment.md",
  "__html": "<h1>后端部署文档</h1>\n<p>后端有2种部署方式，分别为自动化部署和编译源码部署</p>\n<h2>1、准备工作</h2>\n<p>请下载最新版本的安装包，下载地址： <a href=\"https://github.com/apache/incubator-dolphinscheduler/releases\">github下载</a></p>\n<h4>准备一: 基础软件安装(必装项请自行安装)</h4>\n<ul>\n<li>Mysql (5.5+) :  必装</li>\n<li><a href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\">JDK</a> (1.8+) :  必装</li>\n<li>ZooKeeper (3.4.6+) ：必装</li>\n<li>Hadoop (2.6+) ：选装， 如果需要使用到资源上传功能，MapReduce任务提交则需要配置Hadoop(上传的资源文件目前保存在Hdfs上)</li>\n<li><a href=\"https://staroon.pro/2017/12/09/HiveInstall/\">Hive</a>(1.2.1) :  选装，hive任务提交需要安装</li>\n<li>Spark (1.x,2.x) : 选装，Spark任务提交需要安装</li>\n<li>PostgreSQL (8.2.15+) : 选装，PostgreSQL PostgreSQL存储过程需要安装</li>\n</ul>\n<pre><code> 注意：DolphinScheduler本身不依赖Hadoop、Hive、Spark、PostgreSQL,仅是会调用他们的Client，用于对应任务的运行。\n</code></pre>\n<h4>准备二: 创建部署用户</h4>\n<ul>\n<li>在所有需要部署调度的机器上创建部署用户，因为worker服务是以 sudo -u {linux-user} 方式来执行作业，所以部署用户需要有 sudo 权限，而且是免密的。</li>\n</ul>\n<pre><code class=\"language-部署账号\">vi /etc/sudoers\n\n# 例如部署用户是dolphinscheduler账号\ndolphinscheduler  ALL=(ALL)       NOPASSWD: NOPASSWD: ALL\n\n# 并且需要注释掉 Default requiretty 一行\n#Default requiretty\n</code></pre>\n<h4>准备三: ssh免密配置</h4>\n<p>在部署机器和其他安装机器上配置ssh免密登录，如果要在部署机上安装调度，需要配置本机免密登录自己</p>\n<ul>\n<li>将 <strong>主机器</strong> 和各个其它机器SSH免密打通</li>\n</ul>\n<h4>准备四：数据库初始化</h4>\n<ul>\n<li>\n<p>创建database和账号</p>\n<p>执行以下命令创建database和账号</p>\n<pre><code class=\"language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">DATABASE</span> dolphinscheduler <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-built_in\">CHARACTER</span> <span class=\"hljs-keyword\">SET</span> utf8 <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">COLLATE</span> utf8_general_ci;\n<span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">ALL</span> <span class=\"hljs-keyword\">PRIVILEGES</span> <span class=\"hljs-keyword\">ON</span> dolphinscheduler.* <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">'{user}'</span>@<span class=\"hljs-string\">'%'</span> <span class=\"hljs-keyword\">IDENTIFIED</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">'{password}'</span>;\n<span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">ALL</span> <span class=\"hljs-keyword\">PRIVILEGES</span> <span class=\"hljs-keyword\">ON</span> dolphinscheduler.* <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">'{user}'</span>@<span class=\"hljs-string\">'localhost'</span> <span class=\"hljs-keyword\">IDENTIFIED</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">'{password}'</span>;\n<span class=\"hljs-keyword\">flush</span> <span class=\"hljs-keyword\">privileges</span>;\n</code></pre>\n</li>\n<li>\n<p>创建表和导入基础数据\n修改./conf/dao/data_source.properties中的下列属性</p>\n<pre><code>    spring.datasource.url\n    spring.datasource.username\n    spring.datasource.password\n</code></pre>\n<p>执行创建表和导入基础数据脚本</p>\n<pre><code>sh ./script/create-dolphinscheduler.sh\n</code></pre>\n</li>\n</ul>\n<h4>准备五: 修改部署目录权限及运行参数</h4>\n<pre><code>dophinscheduler-backend目录介绍\n</code></pre>\n<pre><code>bin : 基础服务启动脚本\nconf : 项目配置文件\nlib : 项目依赖jar包，包括各个模块jar和第三方jar\nscript : 集群启动、停止和服务监控启停脚本\nsql : 项目依赖sql文件\ninstall.sh : 一键部署脚本\n</code></pre>\n<ul>\n<li>\n<p>修改权限(请将'deployUser'字段修改为对应部署用户)，使得部署用户对dolphinscheduler-backend目录有操作权限</p>\n<p><code>sudo chown -R deployUser:deployUser dolphinscheduler-backend</code></p>\n</li>\n<li>\n<p>修改conf/env/目录下的 <code>.dolphinscheduler_env.sh</code> 环境变量</p>\n</li>\n<li>\n<p>修改部署参数(根据自己服务器及业务情况):</p>\n</li>\n<li>\n<p>修改 <strong><a href=\"http://install.sh\">install.sh</a></strong>中的各参数，替换成自身业务所需的值</p>\n<ul>\n<li>\n<p>monitorServerState 开关变量,在1.0.3版本中增加，控制是否启动自启动脚本(监控master,worker状态,如果掉线会自动启动)\n默认值为&quot;false&quot;表示不启动自启动脚本,如果需要启动改为&quot;true&quot;</p>\n</li>\n<li>\n<p>hdfsStartupSate 开关变量，控制是否启动hdfs\n默认值为&quot;false&quot;表示不启动hdfs\n如果需要启动改为&quot;true&quot;,启动hdfs需要自行创建hdfs根路径，也就是install.sh中的 hdfsPath</p>\n</li>\n</ul>\n</li>\n<li>\n<p>如果使用hdfs相关功能，需要拷贝<strong>hdfs-site.xml</strong>和<strong>core-site.xml</strong>到conf目录下</p>\n</li>\n</ul>\n<h2>2、部署</h2>\n<p>推荐自动化部署，有经验的小伙伴也可以使用源码部署</p>\n<h3>2.1 自动部署</h3>\n<ul>\n<li>\n<p>安装zookeeper工具</p>\n<p><code>pip install kazoo</code></p>\n</li>\n<li>\n<p>切换到部署用户，一键部署</p>\n<p><code>sh install.sh</code></p>\n</li>\n<li>\n<p>使用<code>jps</code>命令查看服务是否启动(<code>jps</code>为<code>java JDK</code>自带)</p>\n</li>\n</ul>\n<pre><code class=\"language-aidl\">    MasterServer         ----- master服务\n    WorkerServer         ----- worker服务\n    LoggerServer         ----- logger服务\n    ApiApplicationServer ----- api服务\n    AlertServer          ----- alert服务\n</code></pre>\n<p>如果以上服务都正常启动，说明自动部署成功</p>\n<p>部署成功后，可以进行日志查看，日志统一存放于指定文件夹内</p>\n<pre><code class=\"language-日志路径\"> logs/\n    ├── dolphinscheduler-alert-server.log\n    ├── dolphinscheduler-master-server.log\n    |—— dolphinscheduler-worker-server.log\n    |—— dolphinscheduler-api-server.log\n    |—— dolphinscheduler-logger-server.log\n</code></pre>\n<h3>2.2 编译源码来部署</h3>\n<p>将源码包release版本下载后，解压进入根目录</p>\n<ul>\n<li>执行编译命令：</li>\n</ul>\n<pre><code> mvn -U clean package assembly:assembly -Dmaven.test.skip=true\n</code></pre>\n<ul>\n<li>查看目录</li>\n</ul>\n<p>正常编译完后，会在当前目录生成 <code>./target/dolphinscheduler-{version}/</code></p>\n<pre><code class=\"language-查看目录\"> ../\n    ├── bin\n    ├── conf\n    |—— install.sh\n    |—— lib\n    |—— logs\n    |—— script\n    |—— sql\n</code></pre>\n<h3>2.3 系统常用启停服务(服务用途请具体参见《系统架构设计》小节)</h3>\n<ul>\n<li>\n<p>一键停止集群所有服务</p>\n<p><code>sh ./bin/stop-all.sh</code></p>\n</li>\n<li>\n<p>一键开启集群所有服务</p>\n<p><code>sh ./bin/start-all.sh</code></p>\n</li>\n<li>\n<p>启停Master</p>\n</li>\n</ul>\n<pre><code class=\"language-启动master\">sh ./bin/dolphinscheduler-daemon.sh start master-server\nsh ./bin/dolphinscheduler-daemon.sh stop master-server\n</code></pre>\n<ul>\n<li>启停Worker</li>\n</ul>\n<pre><code>sh ./bin/dolphinscheduler-daemon.sh start worker-server\nsh ./bin/dolphinscheduler-daemon.sh stop worker-server\n</code></pre>\n<ul>\n<li>启停Api</li>\n</ul>\n<pre><code>sh ./bin/dolphinscheduler-daemon.sh start api-server\nsh ./bin/dolphinscheduler-daemon.sh stop api-server\n</code></pre>\n<ul>\n<li>启停Logger</li>\n</ul>\n<pre><code>sh ./bin/dolphinscheduler-daemon.sh start logger-server\nsh ./bin/dolphinscheduler-daemon.sh stop logger-server\n</code></pre>\n<ul>\n<li>启停Alert</li>\n</ul>\n<pre><code>sh ./bin/dolphinscheduler-daemon.sh start alert-server\nsh ./bin/dolphinscheduler-daemon.sh stop alert-server\n</code></pre>\n<h2>3、数据库升级</h2>\n<p>数据库升级是在1.0.2版本增加的功能,执行以下命令即可自动升级数据库</p>\n<pre><code>sh ./script/upgrade-dolphinscheduler.sh\n</code></pre>\n",
  "link": "/zh-cn/docs/user_doc/backend-deployment.html",
  "meta": {}
}