{
  "filename": "configuration.md",
  "__html": "<h1>资源中心配置详情</h1>\n<p>资源中心通常用于上传文件、 UDF 函数，以及任务组管理等操作。针对单机环境可以选择本地文件目录作为上传文件夹（此操作不需要部署 Hadoop）。当然也可以选择上传到 Hadoop or MinIO 集群上，此时则需要有 Hadoop（2.6+）或者 MinIOn 等相关环境。</p>\n<h2>本地资源配置</h2>\n<p>在单机环境下，可以选择使用本地文件目录作为上传文件夹（无需部署Hadoop），此时需要进行如下配置：</p>\n<h3>配置 <code>common.properties</code> 文件</h3>\n<p>对以下路径的文件进行配置：<code>api-server/conf/common.properties</code> 和 <code>worker-server/conf/common.properties</code></p>\n<ul>\n<li>将 <code>data.basedir.path</code> 改为本地存储路径，请确保部署 DolphinScheduler 的用户拥有读写权限，例如：<code>data.basedir.path=/tmp/dolphinscheduler</code>。当路径不存在时会自动创建文件夹</li>\n<li>修改下列两个参数，分别是 <code>resource.storage.type=HDFS</code> 和 <code>fs.defaultFS=file:///</code>。</li>\n</ul>\n<h2>HDFS 资源配置</h2>\n<p>当需要使用资源中心进行相关文件的创建或者上传操作时，所有的文件和资源都会被存储在 HDFS 上。所以需要进行以下配置：</p>\n<h3>配置 common.properties 文件</h3>\n<p>在 3.0.0-alpha 版本之后，如果需要使用到资源中心的 HDFS 或 S3 上传资源，我们需要对以下路径的进行配置：<code>api-server/conf/common.properties</code> 和 <code>worker-server/conf/common.properties</code>。可参考如下：</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Licensed to the Apache Software Foundation (ASF) under one or more</span>\n<span class=\"hljs-comment\"># contributor license agreements.  See the NOTICE file distributed with</span>\n<span class=\"hljs-comment\"># this work for additional information regarding copyright ownership.</span>\n<span class=\"hljs-comment\"># The ASF licenses this file to You under the Apache License, Version 2.0</span>\n<span class=\"hljs-comment\"># (the &quot;License&quot;); you may not use this file except in compliance with</span>\n<span class=\"hljs-comment\"># the License.  You may obtain a copy of the License at</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\">#     http://www.apache.org/licenses/LICENSE-2.0</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Unless required by applicable law or agreed to in writing, software</span>\n<span class=\"hljs-comment\"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>\n<span class=\"hljs-comment\"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>\n<span class=\"hljs-comment\"># See the License for the specific language governing permissions and</span>\n<span class=\"hljs-comment\"># limitations under the License.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\">\n# user data local directory path, please make sure the directory exists and have read write permissions</span>\n<span class=\"hljs-meta\">data.basedir.path</span>=<span class=\"hljs-string\">/tmp/dolphinscheduler</span>\n<span class=\"hljs-comment\">\n# resource storage type: HDFS, S3, NONE</span>\n<span class=\"hljs-meta\">resource.storage.type</span>=<span class=\"hljs-string\">HDFS</span>\n<span class=\"hljs-comment\">\n# resource store on HDFS/S3 path, resource file will store to this hadoop hdfs path, self configuration,</span>\n<span class=\"hljs-comment\"># please make sure the directory exists on hdfs and have read write permissions. &quot;/dolphinscheduler&quot; is recommended</span>\n<span class=\"hljs-meta\">resource.upload.path</span>=<span class=\"hljs-string\">/tmp/dolphinscheduler</span>\n<span class=\"hljs-comment\">\n# whether to startup kerberos</span>\n<span class=\"hljs-meta\">hadoop.security.authentication.startup.state</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# java.security.krb5.conf path</span>\n<span class=\"hljs-meta\">java.security.krb5.conf.path</span>=<span class=\"hljs-string\">/opt/krb5.conf</span>\n<span class=\"hljs-comment\">\n# login user from keytab username</span>\n<span class=\"hljs-meta\">login.user.keytab.username</span>=<span class=\"hljs-string\">hdfs-mycluster@ESZ.COM</span>\n<span class=\"hljs-comment\">\n# login user from keytab path</span>\n<span class=\"hljs-meta\">login.user.keytab.path</span>=<span class=\"hljs-string\">/opt/hdfs.headless.keytab</span>\n<span class=\"hljs-comment\">\n# kerberos expire time, the unit is hour</span>\n<span class=\"hljs-meta\">kerberos.expire.time</span>=<span class=\"hljs-string\">2</span>\n<span class=\"hljs-comment\"># resource view suffixs</span>\n<span class=\"hljs-comment\">#resource.view.suffixs=txt,log,sh,bat,conf,cfg,py,java,sql,xml,hql,properties,json,yml,yaml,ini,js</span>\n<span class=\"hljs-comment\"># if resource.storage.type=HDFS, the user must have the permission to create directories under the HDFS root path</span>\n<span class=\"hljs-meta\">hdfs.root.user</span>=<span class=\"hljs-string\">root</span>\n<span class=\"hljs-comment\"># if resource.storage.type=S3, the value like: s3a://dolphinscheduler;</span>\n<span class=\"hljs-comment\"># if resource.storage.type=HDFS and namenode HA is enabled, you need to copy core-site.xml and hdfs-site.xml to conf dir</span>\n<span class=\"hljs-meta\">fs.defaultFS</span>=<span class=\"hljs-string\">hdfs://localhost:8020</span>\n<span class=\"hljs-meta\">aws.access.key.id</span>=<span class=\"hljs-string\">minioadmin</span>\n<span class=\"hljs-meta\">aws.secret.access.key</span>=<span class=\"hljs-string\">minioadmin</span>\n<span class=\"hljs-meta\">aws.region</span>=<span class=\"hljs-string\">us-east-1</span>\n<span class=\"hljs-meta\">aws.endpoint</span>=<span class=\"hljs-string\">http://localhost:9000</span>\n<span class=\"hljs-comment\"># resourcemanager port, the default value is 8088 if not specified</span>\n<span class=\"hljs-meta\">resource.manager.httpaddress.port</span>=<span class=\"hljs-string\">8088</span>\n<span class=\"hljs-comment\"># if resourcemanager HA is enabled, please set the HA IPs; if resourcemanager is single, keep this value empty</span>\n<span class=\"hljs-meta\">yarn.resourcemanager.ha.rm.ids</span>=<span class=\"hljs-string\">192.168.xx.xx,192.168.xx.xx</span>\n<span class=\"hljs-comment\"># if resourcemanager HA is enabled or not use resourcemanager, please keep the default value;</span>\n<span class=\"hljs-comment\"># If resourcemanager is single, you only need to replace ds1 to actual resourcemanager hostname</span>\n<span class=\"hljs-meta\">yarn.application.status.address</span>=<span class=\"hljs-string\">http://localhost:%s/ds/v1/cluster/apps/%s</span>\n<span class=\"hljs-comment\"># job history status url when application number threshold is reached(default 10000, maybe it was set to 1000)</span>\n<span class=\"hljs-meta\">yarn.job.history.status.address</span>=<span class=\"hljs-string\">http://localhost:19888/ds/v1/history/mapreduce/jobs/%s</span>\n<span class=\"hljs-comment\">\n# datasource encryption enable</span>\n<span class=\"hljs-meta\">datasource.encryption.enable</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# datasource encryption salt</span>\n<span class=\"hljs-meta\">datasource.encryption.salt</span>=<span class=\"hljs-string\">!@#$%^&amp;*</span>\n<span class=\"hljs-comment\">\n# data quality option</span>\n<span class=\"hljs-meta\">data-quality.jar.name</span>=<span class=\"hljs-string\">dolphinscheduler-data-quality-dev-SNAPSHOT.jar</span>\n<span class=\"hljs-comment\">\n#data-quality.error.output.path=/tmp/data-quality-error-data</span>\n<span class=\"hljs-comment\">\n# Network IP gets priority, default inner outer</span>\n<span class=\"hljs-comment\">\n# Whether hive SQL is executed in the same session</span>\n<span class=\"hljs-meta\">support.hive.oneSession</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# use sudo or not, if set true, executing user is tenant user and deploy user needs sudo permissions;</span>\n<span class=\"hljs-comment\"># if set false, executing user is the deploy user and doesn&#x27;t need sudo permissions</span>\n<span class=\"hljs-meta\">sudo.enable</span>=<span class=\"hljs-string\">true</span>\n<span class=\"hljs-comment\">\n# network interface preferred like eth0, default: empty</span>\n<span class=\"hljs-comment\">#dolphin.scheduler.network.interface.preferred=</span>\n<span class=\"hljs-comment\">\n# network IP gets priority, default: inner outer</span>\n<span class=\"hljs-comment\">#dolphin.scheduler.network.priority.strategy=default</span>\n<span class=\"hljs-comment\">\n# system env path</span>\n<span class=\"hljs-comment\">#dolphinscheduler.env.path=env/dolphinscheduler_env.sh</span>\n<span class=\"hljs-comment\">\n# development state</span>\n<span class=\"hljs-meta\">development.state</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# rpc port</span>\n<span class=\"hljs-meta\">alert.rpc.port</span>=<span class=\"hljs-string\">50052</span>\n</code></pre>\n<blockquote>\n<p><strong>注意</strong>：</p>\n<ul>\n<li>如果只配置了 <code>api-server/conf/common.properties</code> 的文件，则只是开启了资源上传的操作，并不能满足正常使用。如果想要在工作流中执行相关文件则需要额外配置 <code>worker-server/conf/common.properties</code>。</li>\n<li>如果用到资源上传的功能，那么<a href=\"../installation/standalone.md\">安装部署</a>中，部署用户需要有这部分的操作权限。</li>\n<li>如果 Hadoop 集群的 NameNode 配置了 HA 的话，需要开启 HDFS 类型的资源上传，同时需要将 Hadoop 集群下的 <code>core-site.xml</code> 和 <code>hdfs-site.xml</code> 复制到 <code>/opt/dolphinscheduler/conf</code>，非 NameNode HA 跳过次步骤。</li>\n</ul>\n</blockquote>\n",
  "link": "/dist/zh-cn/docs/3.0.0/user_doc/guide/resource/configuration.html",
  "meta": {}
}