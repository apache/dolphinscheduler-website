{
  "filename": "seatunnel.md",
  "__html": "<h1>Apache SeaTunnel</h1>\n<h2>综述</h2>\n<p><code>SeaTunnel</code> 任务类型，用于创建并执行 <code>SeaTunnel</code> 类型任务。worker 执行该任务的时候，会通过 <code>start-seatunnel-spark.sh</code> 或 <code>start-seatunnel-flink.sh</code> 命令解析 config 文件。\n点击 <a href=\"https://seatunnel.apache.org/\">这里</a> 获取更多关于 <code>Apache SeaTunnel</code> 的信息。</p>\n<h2>创建任务</h2>\n<ul>\n<li>点击项目管理 -&gt; 项目名称 -&gt; 工作流定义，点击“创建工作流”按钮，进入 DAG 编辑页面；</li>\n<li>拖动工具栏的<img src=\"/img/tasks/icons/seatunnel.png\" width=\"15\"/> 任务节点到画板中。</li>\n</ul>\n<h2>任务参数</h2>\n<ul>\n<li>节点名称：设置任务节点的名称。一个工作流定义中的节点名称是唯一的。</li>\n<li>运行标志：标识这个结点是否能正常调度，如果不需要执行，可以打开禁止执行开关。</li>\n<li>描述：描述该节点的功能。</li>\n<li>任务优先级：worker 线程数不足时，根据优先级从高到低依次执行，优先级一样时根据先进先出原则执行。</li>\n<li>Worker 分组：任务分配给 worker 组的机器执行，选择 Default ，会随机选择一台 worker 机执行。</li>\n<li>环境名称：配置运行脚本的环境。</li>\n<li>失败重试次数：任务失败重新提交的次数。</li>\n<li>失败重试间隔：任务失败重新提交任务的时间间隔，以分为单位。</li>\n<li>Cpu 配额: 为执行的任务分配指定的CPU时间配额，单位百分比，默认-1代表不限制，例如1个核心的CPU满载是100%，16个核心的是1600%。这个功能由 <a href=\"../../architecture/configuration.md\">task.resource.limit.state</a> 控制</li>\n<li>最大内存：为执行的任务分配指定的内存大小，超过会触发OOM被Kill同时不会进行自动重试，单位MB，默认-1代表不限制。这个功能由 <a href=\"../../architecture/configuration.md\">task.resource.limit.state</a> 控制</li>\n<li>延时执行时间：任务延迟执行的时间，以分为单位。</li>\n<li>超时警告：勾选超时警告、超时失败，当任务超过“超时时长”后，会发送告警邮件并且任务执行失败。</li>\n<li>引擎：支持 FLINK 和 SPARK\n<ul>\n<li>FLINK\n<ul>\n<li>运行模型：支持 <code>run</code> 和 <code>run-application</code> 两种模式</li>\n<li>选项参数：用于添加 Flink 引擎本身参数，例如 <code>-m yarn-cluster -ynm seatunnel</code></li>\n</ul>\n</li>\n<li>SPARK\n<ul>\n<li>部署方式：指定部署模式，<code>cluster</code> <code>client</code> <code>local</code></li>\n<li>Master：指定 <code>Master</code> 模型，<code>yarn</code> <code>local</code> <code>spark</code> <code>mesos</code>，其中 <code>spark</code> 和 <code>mesos</code> 需要指定 <code>Master</code> 服务地址，例如：127.0.0.1:7077</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>点击 <a href=\"https://seatunnel.apache.org/docs/2.1.2/command/usage\">这里</a> 获取更多关于<code>Apache SeaTunnel command</code> 使用的信息</p>\n</blockquote>\n</li>\n<li>自定义配置：支持自定义配置或从资源中心选择配置文件\n<blockquote>\n<p>点击 <a href=\"https://seatunnel.apache.org/docs/2.1.2/concept/config\">这里</a> 获取更多关于<code>Apache SeaTunnel config</code> 文件介绍</p>\n</blockquote>\n</li>\n<li>脚本：在任务节点那自定义配置信息，包括四部分：<code>env</code> <code>source</code> <code>transform</code> <code>sink</code></li>\n<li>资源文件：在任务节点引用资源中心的配置文件，只可以引用一个配置文件。</li>\n<li>前置任务：选择当前任务的前置任务，会将被选择的前置任务设置为当前任务的上游。</li>\n</ul>\n<h2>任务样例</h2>\n<p>该样例演示为使用 Flink 引擎从 Fake 源读取数据打印到控制台。</p>\n<h3>在 DolphinScheduler 中配置 SeaTunnel 环境</h3>\n<p>若生产环境中要是使用到 SeaTunnel 任务类型，则需要先配置好所需的环境，配置文件如下：<code>/dolphinscheduler/conf/env/dolphinscheduler_env.sh</code>。</p>\n<p><img src=\"/img/tasks/demo/seatunnel_task01.png\" alt=\"seatunnel_task01\"></p>\n<h3>配置 SeaTunnel 任务节点</h3>\n<p>根据上述参数说明，配置所需的内容即可。</p>\n<p><img src=\"/img/tasks/demo/seatunnel_task02.png\" alt=\"seatunnel_task02\"></p>\n<h3>Config 样例</h3>\n<pre><code class=\"language-Config\">\nenv {\n  execution.parallelism = 1\n}\n\nsource {\n  FakeSource {\n    result_table_name = &quot;fake&quot;\n    field_name = &quot;name,age&quot;\n  }\n}\n\ntransform {\n  sql {\n    sql = &quot;select name,age from fake&quot;\n  }\n}\n\nsink {\n  ConsoleSink {}\n}\n\n</code></pre>\n",
  "link": "/dist/zh-cn/docs/3.0.0/user_doc/guide/task/seatunnel.html",
  "meta": {}
}