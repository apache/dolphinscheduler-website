{
  "__html": "<h1>背景</h1>\n<p>看到Apache DolphinScheduler社区群有很多用户反馈和讨论这块问题，针对不兼容的问题，不仅需要自己重新编译各一个新包，而且因为默认是使用zk-3.8的配置，所以会出现不兼容问题。使用zk-3.4配置即可适配3.4.x</p>\n<h3>解决办法（一）</h3>\n<p>#切换到项目源码的根路径中执行</p>\n<pre><code>mvn clean package -T 1C -Prelease '-Dmaven.test.skip=true' '-Dcheckstyle.skip=true' '-Dmaven.javadoc.skip=true' '-Dzk-3.4'\n</code></pre>\n<p><strong>上述命令解释</strong></p>\n<pre><code>mvn clean package  依次执行了clean、resources、compile、testResources、testCompile、test、jar(打包)等７个阶段。\n</code></pre>\n<p>指定多线程编译，可以增加~</p>\n<p><strong>拓展</strong></p>\n<pre><code>-Dmaven.compile.fork=true 表示开启多线程\nmvn -T 4 install -- will use 4 threads\nmvn -T 1C install -- will use 1 thread per available CPU core\nmvn clean package -T 1C -Dmaven.compile.fork=true\n-Prelease 是 Maven Release Plugin 的配置\n</code></pre>\n<p><strong>Maven中-DskipTests和-Dmaven.test.skip=true的区别</strong></p>\n<p>在使用mvn package进行编译、打包时，Maven会执行src/test/java中的JUnit测试用例，有时为了编译过程中跳过测试步骤，会使用参数-DskipTests和-Dmaven.test.skip=true，这两个参数的主要区别是：</p>\n<pre><code>-DskipTests，不执行测试用例，但编译测试用例类生成相应的class文件至target/test-classes下。\n-Dmaven.test.skip=true，不执行测试用例，也不编译测试用例类。\n-D参数\n如果参数不存在于 pom.xml 文件中，它将被设置。如果参数已经存在 pom.xml 文件中，其值将被作为参数传递的值覆盖。\n</code></pre>\n<h3>解决办法(二）</h3>\n<p>修改源码中的pom.xml配置文件</p>\n<h4>1、从github下载源码</h4>\n<p>直接访问<a href=\"https://github.com/\">https://github.com/</a>，登陆之后搜索Apache DolphinScheduler！</p>\n<p><img src=\"/img/2024-02-18/1.png\" alt=\"\"></p>\n<p><strong>在百度直接搜：</strong></p>\n<p><img src=\"/img/2024-02-18/2.png\" alt=\"\"></p>\n<p><img src=\"/img/2024-02-18/3.png\" alt=\"\"></p>\n<p><img src=\"/img/2024-02-18/4.png\" alt=\"\"></p>\n<p>官网网址：\n<a href=\"https://github.com/apache/dolphinscheduler\">https://github.com/apache/dolphinscheduler</a></p>\n<p>选择 release版本</p>\n<p><img src=\"/img/2024-02-18/5.png\" alt=\"\"></p>\n<p><img src=\"/img/2024-02-18/6.png\" alt=\"\"></p>\n<h4>2、将下载好的zip包解压出来，并导入IDEA工具中</h4>\n<p><img src=\"/img/2024-02-18/7.png\" alt=\"\"></p>\n<p><img src=\"/img/2024-02-18/8.png\" alt=\"\"></p>\n<h4>3、修改maven和jdk配置</h4>\n<p><img src=\"/img/2024-02-18/9.png\" alt=\"\"></p>\n<p><img src=\"/img/2024-02-18/10.png\" alt=\"\"></p>\n<h4>4、MVN命令操作</h4>\n<p><strong>根目录执行</strong></p>\n<p>mvn clean package -T 1C -Prelease '-Dmaven.test.skip=true' '-Dcheckstyle.skip=true' '-Dmaven.javadoc.skip=true' '-Dzk-3.4'</p>\n<p><strong>报错如下</strong></p>\n<p>Failed to execute goal com.diffplug.spotless:spotless-maven-plugin:2.27.2:check (default) on project dolphinscheduler: The following files had format violations:</p>\n<p><img src=\"/img/2024-02-18/11.png\" alt=\"\"></p>\n<p>这个是问题没有因为没有<a href=\"https://so.csdn.net/so/search?q=%E6%A0%BC%E5%BC%8F%E5%8C%96&amp;spm=1001.2101.3001.7020\">格式化</a>代码，所以在校验的时候不通过</p>\n<p>根据上面的提示只需要执行下命令：<code>mvn spotless:apply </code>就可以了</p>\n<p><img src=\"/img/2024-02-18/12.png\" alt=\"\"></p>\n<p><strong>随后会刷屏，过一会就会出现如下图，完事了</strong></p>\n<p><img src=\"/img/2024-02-18/13.png\" alt=\"\"></p>\n<p><strong>再次根目录执行</strong></p>\n<p>mvn clean package -T 1C -Prelease '-Dmaven.test.skip=true' '-Dcheckstyle.skip=true' '-Dmaven.javadoc.skip=true' '-Dzk-3.4'</p>\n<p><strong>报错如下</strong></p>\n<p><img src=\"/img/2024-02-18/14.png\" alt=\"\"></p>\n<p>从提示中可以看出来，<code>com.github.eirslett：frontend-maven-plugin</code>这个插件有问题</p>\n<p>首先看看本地的maven仓库中，有没有把这个插件通过依赖下载出来</p>\n<p><img src=\"/img/2024-02-18/15.png\" alt=\"\"></p>\n<p><strong>在<strong><strong>d:\\IdeaProjects\\dolphinscheduler-3.2.0-release\\dolphinscheduler-ui\\pom.xml</strong></strong>文件中</strong></p>\n<p>把<goals>标签全都删除掉，防止构建时用npm的方式下载插件。</p>\n<p><img src=\"/img/2024-02-18/16.png\" alt=\"\"></p>\n<p><strong>再次根目录执行</strong></p>\n<p>mvn clean package -T 1C -Prelease '-Dmaven.test.skip=true' '-Dcheckstyle.skip=true' '-Dmaven.javadoc.skip=true' '-Dzk-3.4'</p>\n<p><img src=\"/img/2024-02-18/17.png\" alt=\"\"></p>\n<p>可以看到，已经编译成功了。找到打好包生成的目标文件，位置是：项目源码目录\\dolphinscheduler-dist\\target</p>\n<p>我的位置是 D:\\IdeaProjects\\dolphinscheduler-3.2.0-release\\dolphinscheduler-dist\\target</p>\n<p><img src=\"/img/2024-02-18/18.png\" alt=\"\"></p>\n<h4>5、修改源码中的依赖配置</h4>\n<p>我不知道配置文件的指定的位置，在IDEA开发工具中按ctrl+shift+f组合键， 在项目所有文件中搜索：zookeeper.version</p>\n<p><img src=\"/img/2024-02-18/19.png\" alt=\"\"></p>\n<p>在<code>d:\\\\IdeaProjects\\\\dolphinscheduler-3.2.0-release\\\\dolphinscheduler-bom\\\\pom.xml</code>文件中找到</p>\n<p><img src=\"/img/2024-02-18/20.png\" alt=\"\"></p>\n<p>修改一下源码，修改后如下图所示</p>\n<p><img src=\"/img/2024-02-18/21.png\" alt=\"\"></p>\n<p>根目录执行</p>\n<pre><code>mvn clean package -T 1C -Prelease '-Dmaven.test.skip=true' '-Dcheckstyle.skip=true' '-Dmaven.javadoc.skip=true'\n</code></pre>\n<p><img src=\"/img/2024-02-18/22.png\" alt=\"\"></p>\n<p>可以看到，已经编译成功了。希望本文能帮助更多用户解决问题，如果您对这个话题感兴趣，欢迎来社区交流！</p>\n",
  "time": "2024-02-18",
  "author": "Niko Zeng",
  "title": "Apache DolphinScheduler 中 ZooKeeper与CDH 不兼容问题的解决方案",
  "type": "user",
  "label": "用户案例"
}