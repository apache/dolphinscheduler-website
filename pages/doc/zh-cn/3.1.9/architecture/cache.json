{
  "__html": "<h3 id=\"缓存\">缓存</h3>\n<h4 id=\"缓存目的\">缓存目的</h4>\n<p>由于在master-server调度过程中，会产生大量的数据库读取操作，如tenant，user，processDefinition等，一方面对DB产生很大的读压力，另一方面则会使整个核心调度流程变得缓慢；</p>\n<p>考虑到这部分业务数据是读多写少的场景，故引入了缓存模块，以减少DB读压力，加快核心调度流程；</p>\n<h4 id=\"缓存设置\">缓存设置</h4>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">cache:</span>\n    <span class=\"hljs-comment\"># default enable cache, you can disable by `type: none`</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">none</span>\n    <span class=\"hljs-attr\">cache-names:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">tenant</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">user</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">processDefinition</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">processTaskRelation</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">taskDefinition</span>\n    <span class=\"hljs-attr\">caffeine:</span>\n      <span class=\"hljs-attr\">spec:</span> <span class=\"hljs-string\">maximumSize=100,expireAfterWrite=300s,recordStats</span>\n</code></pre>\n<p>缓存模块采用<a href=\"https://spring.io/guides/gs/caching/\">spring-cache</a>机制，可直接在spring配置文件中配置是否开启缓存（默认<code>none</code>关闭）, 缓存类型；</p>\n<p>目前采用<a href=\"https://github.com/ben-manes/caffeine\">caffeine</a>进行缓存管理，可自由设置缓存相关配置，如缓存大小、过期时间等；</p>\n<h4 id=\"缓存读取\">缓存读取</h4>\n<p>缓存采用spring-cache的注解，配置在相关的mapper层，可参考如：<code>TenantMapper</code>.</p>\n<h4 id=\"缓存更新\">缓存更新</h4>\n<p>业务数据的更新来自于api-server, 而缓存端在master-server, 故需要对api-server的数据更新做监听(aspect切面拦截<code>@CacheEvict</code>)，当需要进行缓存驱逐时会通知master-server，master-server接收到cacheEvictCommand后进行缓存驱逐；</p>\n<p>需要注意的是：缓存更新的兜底策略来自于用户在caffeine中的过期策略配置，请结合业务进行配置；</p>\n<p>时序图如下图所示：</p>\n<img src=\"/img/cache-evict.png\" alt=\"cache-evict\" style=\"zoom: 67%;\" />\n",
  "location": [
    "架构设计",
    "缓存"
  ],
  "time": "2023-12-25",
  "structure": [
    {
      "title": "缓存",
      "children": [
        {
          "title": "缓存目的",
          "children": [],
          "anchor": "缓存目的"
        },
        {
          "title": "缓存设置",
          "children": [],
          "anchor": "缓存设置"
        },
        {
          "title": "缓存读取",
          "children": [],
          "anchor": "缓存读取"
        },
        {
          "title": "缓存更新",
          "children": [],
          "anchor": "缓存更新"
        }
      ],
      "anchor": "缓存"
    }
  ],
  "title": "缓存",
  "link": "/architecture/cache"
}