{
  "__html": "<h1 id=\"resource-center-configuration\">Resource Center Configuration</h1>\n<ul>\n<li>You could use <code>Resource Center</code> to upload text files, UDFs and other task-related files.</li>\n<li>You could configure <code>Resource Center</code> to use distributed file system like <a href=\"https://hadoop.apache.org/docs/r2.7.0/\">Hadoop</a> (2.6+), <a href=\"https://github.com/minio/minio\">MinIO</a> cluster or remote storage products like <a href=\"https://aws.amazon.com/s3/\">AWS S3</a>, <a href=\"https://www.aliyun.com/product/oss\">Alibaba Cloud OSS</a>, <a href=\"https://support.huaweicloud.com/obs/index.html\">Huawei Cloud OBS</a> etc.</li>\n<li>You could configure <code>Resource Center</code> to use local file system. If you deploy <code>DolphinScheduler</code> in <code>Standalone</code> mode, you could configure it to use local file system for <code>Resouce Center</code> without the need of an external <code>HDFS</code> system or <code>S3</code>.</li>\n<li>Furthermore, if you deploy <code>DolphinScheduler</code> in <code>Cluster</code> mode, you could use <a href=\"https://github.com/s3fs-fuse/s3fs-fuse\">S3FS-FUSE</a> to mount <code>S3</code> or <a href=\"https://help.aliyun.com/document_detail/187410.html\">JINDO-FUSE</a> to mount <code>OSS</code> to your machines and use the local file system for <code>Resouce Center</code>. In this way, you could operate remote files as if on your local machines.</li>\n</ul>\n<h2 id=\"use-local-file-system\">Use Local File System</h2>\n<h3 id=\"configure-<code>common.properties</code>\">Configure <code>common.properties</code></h3>\n<p>DolphinScheduler Resource Center uses local file system by default, and does not require any additional configuration.\nBut please make sure to change the following configuration at the same time when you need to modify the default value.</p>\n<ul>\n<li>If you deploy DolphinScheduler in <code>Cluster</code> or <code>Pseudo-Cluster</code> mode, you need to configure <code>api-server/conf/common.properties</code> and <code>worker-server/conf/common.properties</code>.</li>\n<li>If you deploy DolphinScheduler in <code>Standalone</code> mode, you only need to configure <code>standalone-server/conf/common.properties</code> as follows:</li>\n</ul>\n<p>The configuration you may need to change:</p>\n<ul>\n<li>Change <code>resource.storage.upload.base.path</code> to your local directory path. Please make sure the <code>tenant resource.hdfs.root.user</code> has read and write permissions for <code>resource.storage.upload.base.path</code>, e,g. <code>/tmp/dolphinscheduler</code>. <code>DolphinScheduler</code> will create the directory you configure if it does not exist.</li>\n</ul>\n<blockquote>\n<p>NOTE:</p>\n<ol>\n<li>LOCAL mode does not support reading and writing in distributed mode, which mean you can only use your resource in one machine, unless use shared file mount point</li>\n<li>Please modify the value of <code>resource.storage.upload.base.path</code> if you do not want to use the default value as the base path.</li>\n<li>The local config is <code>resource.storage.type=LOCAL</code> it has actually configured two setting, <code>resource.storage.type=HDFS</code>\nand <code>resource.hdfs.fs.defaultFS=file:///</code>, The configuration of <code>resource.storage.type=LOCAL</code> is for user-friendly, and enables\nthe local resource center to be enabled by default</li>\n</ol>\n</blockquote>\n<h2 id=\"connect-aws-s3\">connect AWS S3</h2>\n<p>if you want to upload resources to <code>Resource Center</code> connected to <code>S3</code>, you need to configure <code>api-server/conf/common.properties</code> and <code>worker-server/conf/common.properties</code>. You can refer to the following:</p>\n<p>config the following fields</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-attr\">......</span>\n\n<span class=\"hljs-attr\">resource.storage.type</span>=<span class=\"hljs-string\">S3</span>\n\n<span class=\"hljs-attr\">......</span>\n\n<span class=\"hljs-attr\">resource.aws.access.key.id</span>=<span class=\"hljs-string\">aws_access_key_id</span>\n<span class=\"hljs-comment\"># The AWS secret access key. if resource.storage.type=S3 or use EMR-Task, This configuration is required</span>\n<span class=\"hljs-attr\">resource.aws.secret.access.key</span>=<span class=\"hljs-string\">aws_secret_access_key</span>\n<span class=\"hljs-comment\"># The AWS Region to use. if resource.storage.type=S3 or use EMR-Task, This configuration is required</span>\n<span class=\"hljs-attr\">resource.aws.region</span>=<span class=\"hljs-string\">us-west-2</span>\n<span class=\"hljs-comment\"># The name of the bucket. You need to create them by yourself. Otherwise, the system cannot start. All buckets in Amazon S3 share a single namespace; ensure the bucket is given a unique name.</span>\n<span class=\"hljs-attr\">resource.aws.s3.bucket.name</span>=<span class=\"hljs-string\">dolphinscheduler</span>\n<span class=\"hljs-comment\"># You need to set this parameter when private cloud s4. If S3 uses public cloud, you only need to set resource.aws.region or set to the endpoint of a public cloud such as S3.cn-north-1.amazonaws.com.cn</span>\n<span class=\"hljs-attr\">resource.aws.s3.endpoint</span>=<span class=\"hljs-string\"></span>\n\n<span class=\"hljs-attr\">......</span>\n</code></pre>\n<h2 id=\"use-hdfs-or-remote-object-storage\">Use HDFS or Remote Object Storage</h2>\n<p>After version 3.0.0-alpha, if you want to upload resources to <code>Resource Center</code> connected to <code>HDFS</code>, you need to configure <code>api-server/conf/common.properties</code> and <code>worker-server/conf/common.properties</code>.</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Licensed to the Apache Software Foundation (ASF) under one or more</span>\n<span class=\"hljs-comment\"># contributor license agreements.  See the NOTICE file distributed with</span>\n<span class=\"hljs-comment\"># this work for additional information regarding copyright ownership.</span>\n<span class=\"hljs-comment\"># The ASF licenses this file to You under the Apache License, Version 2.0</span>\n<span class=\"hljs-comment\"># (the &quot;License&quot;); you may not use this file except in compliance with</span>\n<span class=\"hljs-comment\"># the License.  You may obtain a copy of the License at</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\">#     http://www.apache.org/licenses/LICENSE-2.0</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Unless required by applicable law or agreed to in writing, software</span>\n<span class=\"hljs-comment\"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>\n<span class=\"hljs-comment\"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>\n<span class=\"hljs-comment\"># See the License for the specific language governing permissions and</span>\n<span class=\"hljs-comment\"># limitations under the License.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\">\n# user data local directory path, please make sure the directory exists and have read write permissions</span>\n<span class=\"hljs-attr\">data.basedir.path</span>=<span class=\"hljs-string\">/tmp/dolphinscheduler</span>\n<span class=\"hljs-comment\">\n# resource view suffixs</span>\n<span class=\"hljs-comment\">#resource.view.suffixs=txt,log,sh,bat,conf,cfg,py,java,sql,xml,hql,properties,json,yml,yaml,ini,js</span>\n<span class=\"hljs-comment\">\n# resource storage type: LOCAL, HDFS, S3, OSS, GCS, ABS, OBS</span>\n<span class=\"hljs-attr\">resource.storage.type</span>=<span class=\"hljs-string\">LOCAL</span>\n<span class=\"hljs-comment\"># resource store on HDFS/S3/OSS path, resource file will store to this base path, self configuration, please make sure the directory exists on hdfs and have read write permissions. &quot;/dolphinscheduler&quot; is recommended</span>\n<span class=\"hljs-attr\">resource.storage.upload.base.path</span>=<span class=\"hljs-string\">/tmp/dolphinscheduler</span>\n<span class=\"hljs-comment\">\n# The AWS access key. if resource.storage.type=S3 or use EMR-Task, This configuration is required</span>\n<span class=\"hljs-attr\">resource.aws.access.key.id</span>=<span class=\"hljs-string\">minioadmin</span>\n<span class=\"hljs-comment\"># The AWS secret access key. if resource.storage.type=S3 or use EMR-Task, This configuration is required</span>\n<span class=\"hljs-attr\">resource.aws.secret.access.key</span>=<span class=\"hljs-string\">minioadmin</span>\n<span class=\"hljs-comment\"># The AWS Region to use. if resource.storage.type=S3 or use EMR-Task, This configuration is required</span>\n<span class=\"hljs-attr\">resource.aws.region</span>=<span class=\"hljs-string\">cn-north-1</span>\n<span class=\"hljs-comment\"># The name of the bucket. You need to create them by yourself. Otherwise, the system cannot start. All buckets in Amazon S3 share a single namespace; ensure the bucket is given a unique name.</span>\n<span class=\"hljs-attr\">resource.aws.s3.bucket.name</span>=<span class=\"hljs-string\">dolphinscheduler</span>\n<span class=\"hljs-comment\"># You need to set this parameter when private cloud s3. If S3 uses public cloud, you only need to set resource.aws.region or set to the endpoint of a public cloud such as S3.cn-north-1.amazonaws.com.cn</span>\n<span class=\"hljs-attr\">resource.aws.s3.endpoint</span>=<span class=\"hljs-string\">http://localhost:9000</span>\n<span class=\"hljs-comment\">\n# alibaba cloud access key id, required if you set resource.storage.type=OSS </span>\n<span class=\"hljs-attr\">resource.alibaba.cloud.access.key.id</span>=<span class=\"hljs-string\">&lt;your-access-key-id&gt;</span>\n<span class=\"hljs-comment\"># alibaba cloud access key secret, required if you set resource.storage.type=OSS</span>\n<span class=\"hljs-attr\">resource.alibaba.cloud.access.key.secret</span>=<span class=\"hljs-string\">&lt;your-access-key-secret&gt;</span>\n<span class=\"hljs-comment\"># alibaba cloud region, required if you set resource.storage.type=OSS</span>\n<span class=\"hljs-attr\">resource.alibaba.cloud.region</span>=<span class=\"hljs-string\">cn-hangzhou</span>\n<span class=\"hljs-comment\"># oss bucket name, required if you set resource.storage.type=OSS</span>\n<span class=\"hljs-attr\">resource.alibaba.cloud.oss.bucket.name</span>=<span class=\"hljs-string\">dolphinscheduler</span>\n<span class=\"hljs-comment\"># oss bucket endpoint, required if you set resource.storage.type=OSS</span>\n<span class=\"hljs-attr\">resource.alibaba.cloud.oss.endpoint</span>=<span class=\"hljs-string\">https://oss-cn-hangzhou.aliyuncs.com</span>\n<span class=\"hljs-comment\">\n# alibaba cloud access key id, required if you set resource.storage.type=OBS</span>\n<span class=\"hljs-attr\">resource.huawei.cloud.access.key.id</span>=<span class=\"hljs-string\">&lt;your-access-key-id&gt;</span>\n<span class=\"hljs-comment\"># alibaba cloud access key secret, required if you set resource.storage.type=OBS</span>\n<span class=\"hljs-attr\">resource.huawei.cloud.access.key.secret</span>=<span class=\"hljs-string\">&lt;your-access-key-secret&gt;</span>\n<span class=\"hljs-comment\"># oss bucket name, required if you set resource.storage.type=OBS</span>\n<span class=\"hljs-attr\">resource.huawei.cloud.obs.bucket.name</span>=<span class=\"hljs-string\">dolphinscheduler</span>\n<span class=\"hljs-comment\"># oss bucket endpoint, required if you set resource.storage.type=OBS</span>\n<span class=\"hljs-attr\">resource.huawei.cloud.obs.endpoint</span>=<span class=\"hljs-string\">obs.cn-southwest-2.huaweicloud.com</span>\n<span class=\"hljs-comment\">\n# if resource.storage.type=HDFS, the user must have the permission to create directories under the HDFS root path</span>\n<span class=\"hljs-attr\">resource.hdfs.root.user</span>=<span class=\"hljs-string\">hdfs</span>\n<span class=\"hljs-comment\"># if resource.storage.type=S3, the value like: s3a://dolphinscheduler; if resource.storage.type=HDFS and namenode HA is enabled, you need to copy core-site.xml and hdfs-site.xml to conf dir</span>\n<span class=\"hljs-attr\">resource.hdfs.fs.defaultFS</span>=<span class=\"hljs-string\">hdfs://mycluster:8020</span>\n<span class=\"hljs-comment\">\n# whether to startup kerberos</span>\n<span class=\"hljs-attr\">hadoop.security.authentication.startup.state</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# java.security.krb5.conf path</span>\n<span class=\"hljs-attr\">java.security.krb5.conf.path</span>=<span class=\"hljs-string\">/opt/krb5.conf</span>\n<span class=\"hljs-comment\">\n# login user from keytab username</span>\n<span class=\"hljs-attr\">login.user.keytab.username</span>=<span class=\"hljs-string\">hdfs-mycluster@ESZ.COM</span>\n<span class=\"hljs-comment\">\n# login user from keytab path</span>\n<span class=\"hljs-attr\">login.user.keytab.path</span>=<span class=\"hljs-string\">/opt/hdfs.headless.keytab</span>\n<span class=\"hljs-comment\">\n# kerberos expire time, the unit is hour</span>\n<span class=\"hljs-attr\">kerberos.expire.time</span>=<span class=\"hljs-string\">2</span>\n<span class=\"hljs-comment\">\n\n# resourcemanager port, the default value is 8088 if not specified</span>\n<span class=\"hljs-attr\">resource.manager.httpaddress.port</span>=<span class=\"hljs-string\">8088</span>\n<span class=\"hljs-comment\"># if resourcemanager HA is enabled, please set the HA IPs; if resourcemanager is single, keep this value empty</span>\n<span class=\"hljs-attr\">yarn.resourcemanager.ha.rm.ids</span>=<span class=\"hljs-string\">192.168.xx.xx,192.168.xx.xx</span>\n<span class=\"hljs-comment\"># if resourcemanager HA is enabled or not use resourcemanager, please keep the default value; If resourcemanager is single, you only need to replace ds1 to actual resourcemanager hostname</span>\n<span class=\"hljs-attr\">yarn.application.status.address</span>=<span class=\"hljs-string\">http://ds1:%s/ws/v1/cluster/apps/%s</span>\n<span class=\"hljs-comment\"># job history status url when application number threshold is reached(default 10000, maybe it was set to 1000)</span>\n<span class=\"hljs-attr\">yarn.job.history.status.address</span>=<span class=\"hljs-string\">http://ds1:19888/ws/v1/history/mapreduce/jobs/%s</span>\n<span class=\"hljs-comment\">\n# datasource encryption enable</span>\n<span class=\"hljs-attr\">datasource.encryption.enable</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# datasource encryption salt</span>\n<span class=\"hljs-attr\">datasource.encryption.salt</span>=<span class=\"hljs-string\">!@#$%^&amp;*</span>\n<span class=\"hljs-comment\">\n# data quality jar directory path, it would auto discovery data quality jar from this given dir. You should keep it empty if you do not change anything in</span>\n<span class=\"hljs-comment\"># data-quality, it will auto discovery by dolphinscheduler itself. Change it only if you want to use your own data-quality jar and it is not in worker-server</span>\n<span class=\"hljs-comment\"># libs directory(but may sure your jar name start with `dolphinscheduler-data-quality`).</span>\n<span class=\"hljs-attr\">data-quality.jar.dir</span>=<span class=\"hljs-string\"></span>\n<span class=\"hljs-comment\">\n#data-quality.error.output.path=/tmp/data-quality-error-data</span>\n<span class=\"hljs-comment\">\n# Network IP gets priority, default inner outer</span>\n<span class=\"hljs-comment\">\n# Whether hive SQL is executed in the same session</span>\n<span class=\"hljs-attr\">support.hive.oneSession</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# use sudo or not, if set true, executing user is tenant user and deploy user needs sudo permissions; if set false, executing user is the deploy user and doesn&#x27;t need sudo permissions</span>\n<span class=\"hljs-attr\">sudo.enable</span>=<span class=\"hljs-string\">true</span>\n<span class=\"hljs-comment\">\n# network interface preferred like eth0, default: empty</span>\n<span class=\"hljs-comment\">#dolphin.scheduler.network.interface.preferred=</span>\n<span class=\"hljs-comment\">\n# network IP gets priority, default: inner outer</span>\n<span class=\"hljs-comment\">#dolphin.scheduler.network.priority.strategy=default</span>\n<span class=\"hljs-comment\">\n# system env path</span>\n<span class=\"hljs-comment\">#dolphinscheduler.env.path=dolphinscheduler_env.sh</span>\n<span class=\"hljs-comment\">\n# development state</span>\n<span class=\"hljs-attr\">development.state</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# rpc port</span>\n<span class=\"hljs-attr\">alert.rpc.port</span>=<span class=\"hljs-string\">50052</span>\n<span class=\"hljs-comment\">\n# set path of conda.sh</span>\n<span class=\"hljs-attr\">conda.path</span>=<span class=\"hljs-string\">/opt/anaconda3/etc/profile.d/conda.sh</span>\n<span class=\"hljs-comment\">\n# Task resource limit state</span>\n<span class=\"hljs-attr\">task.resource.limit.state</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-comment\">\n# way to collect applicationId: log(original regex match), aop</span>\n<span class=\"hljs-attr\">appId.collect</span>: <span class=\"hljs-string\">log</span>\n</code></pre>\n<blockquote>\n<p><strong>Note:</strong></p>\n<ul>\n<li>If only the <code>api-server/conf/common.properties</code> file is configured, then resource uploading is enabled, but you can not use resources in task. If you want to use or execute the files in the workflow you need to configure <code>worker-server/conf/common.properties</code> too.</li>\n<li>If you want to use the resource upload function, the deployment user in <a href=\"../installation//en-us/docs/3.2.1/guide/installation/standalone\">installation and deployment</a> must have relevant operation authority.</li>\n<li>If you using a Hadoop cluster with HA, you need to enable HDFS resource upload, and you need to copy the <code>core-site.xml</code> and <code>hdfs-site.xml</code> under the Hadoop cluster to <code>worker-server/conf</code> and <code>api-server/conf</code>, otherwise skip this copy step.</li>\n</ul>\n</blockquote>\n",
  "location": [
    "Introduction to Functions",
    "Resource",
    "Configuration"
  ],
  "time": "2024-2-11",
  "structure": [
    {
      "title": "Use Local File System",
      "children": [
        {
          "title": "Configure common.properties",
          "children": [],
          "anchor": "configure-common.properties"
        }
      ],
      "anchor": "use-local-file-system"
    },
    {
      "title": "connect AWS S3",
      "children": [
        {
          "title": "Configure common.properties",
          "children": [],
          "anchor": "configure-common.properties"
        }
      ],
      "anchor": "connect-aws-s3"
    },
    {
      "title": "Use HDFS or Remote Object Storage",
      "children": [
        {
          "title": "Configure common.properties",
          "children": [],
          "anchor": "configure-common.properties"
        }
      ],
      "anchor": "use-hdfs-or-remote-object-storage"
    }
  ],
  "title": "Resource Center Configuration",
  "link": "/guide/resource/configuration"
}