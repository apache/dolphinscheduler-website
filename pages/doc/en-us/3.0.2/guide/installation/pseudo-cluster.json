{
  "__html": "<h1 id=\"pseudo-cluster-deployment\">Pseudo-Cluster Deployment</h1>\n<p>The purpose of the pseudo-cluster deployment is to deploy the DolphinScheduler service on a single machine. In this mode, DolphinScheduler's master, worker, API server, are all on the same machine.</p>\n<p>If you are a new hand and want to experience DolphinScheduler functions, we recommend you install follow <a href=\"/en-us/docs/3.0.2/guide/installation/standalone\">Standalone deployment</a>. If you want to experience more complete functions and schedule massive tasks, we recommend you install follow[pseudo-cluster deployment. If you want to deploy DolphinScheduler in production, we recommend you follow <a href=\"/en-us/docs/3.0.2/guide/installation/cluster\">cluster deployment</a> or <a href=\"/en-us/docs/3.0.2/guide/installation/kubernetes\">Kubernetes deployment</a>.</p>\n<h2 id=\"preparation\">Preparation</h2>\n<p>Pseudo-cluster deployment of DolphinScheduler requires external software support:</p>\n<ul>\n<li>JDK：download <a href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\">JDK</a> (1.8+), install and configure environment variable <code>JAVA_HOME</code> and append <code>bin</code> dir (included in <code>JAVA_HOME</code>) to <code>PATH</code> variable. You can skip this step if it already exists in your environment.</li>\n<li>Binary package: Download the DolphinScheduler binary package at <a href=\"/en-us/download\">download page</a></li>\n<li>Database: <a href=\"https://www.postgresql.org/download/\">PostgreSQL</a> (8.2.15+) or <a href=\"https://dev.mysql.com/downloads/mysql/\">MySQL</a> (5.7+), you can choose one of the two, such as MySQL requires JDBC Driver 8.0.16</li>\n<li>Registry Center: <a href=\"https://zookeeper.apache.org/releases.html\">ZooKeeper</a> (3.8.0+)，<a href=\"https://zookeeper.apache.org/releases.html\">download link</a></li>\n<li>Process tree analysis\n<ul>\n<li><code>pstree</code> for macOS</li>\n<li><code>psmisc</code> for Fedora/Red/Hat/CentOS/Ubuntu/Debian</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><strong><em>Note:</em></strong> DolphinScheduler itself does not depend on Hadoop, Hive, Spark, but if you need to run tasks that depend on them, you need to have the corresponding environment support.</p>\n</blockquote>\n<h2 id=\"dolphinscheduler-startup-environment\">DolphinScheduler Startup Environment</h2>\n<h3 id=\"configure-user-exemption-and-permissions\">Configure User Exemption and Permissions</h3>\n<p>Create a deployment user, and make sure to configure <code>sudo</code> without password. Here make an example to create user <code>dolphinscheduler</code>:</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">To create a user, login as root</span>\nuseradd dolphinscheduler\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Add password</span>\necho &quot;dolphinscheduler&quot; | passwd --stdin dolphinscheduler\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Configure sudo without password</span>\nsed -i &#x27;$adolphinscheduler  ALL=(ALL)  NOPASSWD: NOPASSWD: ALL&#x27; /etc/sudoers\nsed -i &#x27;s/Defaults    requirett/#Defaults    requirett/g&#x27; /etc/sudoers\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Modify directory permissions and grant permissions <span class=\"hljs-keyword\">for</span> user you created above</span>\nchown -R dolphinscheduler:dolphinscheduler apache-dolphinscheduler-*-bin\nchmod -R 755 apache-dolphinscheduler-*-bin\n</code></pre>\n<blockquote>\n<p><strong><em>NOTICE:</em></strong></p>\n<ul>\n<li>Due to DolphinScheduler's multi-tenant task switch user using command <code>sudo -u {linux-user}</code>, the deployment user needs to have <code>sudo</code> privileges and be password-free. If novice learners don’t understand, you can ignore this point for now.</li>\n<li>If you find the line &quot;Defaults requirett&quot; in the <code>/etc/sudoers</code> file, please comment the content.</li>\n</ul>\n</blockquote>\n<h3 id=\"configure-machine-ssh-password-free-login\">Configure Machine SSH Password-Free Login</h3>\n<p>Since resources need to be sent to different machines during installation, SSH password-free login is required between each machine. The following shows the steps to configure password-free login:</p>\n<pre><code class=\"language-shell\">su dolphinscheduler\n\nssh-keygen -t rsa -P &#x27;&#x27; -f ~/.ssh/id_rsa\ncat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n</code></pre>\n<blockquote>\n<p><strong><em>Notice:</em></strong> After the configuration is complete, you can run the command <code>ssh localhost</code> to test works or not. If you can login with ssh without password stands for successful.</p>\n</blockquote>\n<h3 id=\"start-zookeeper\">Start ZooKeeper</h3>\n<p>Go to the ZooKeeper installation directory, copy configure file <code>zoo_sample.cfg</code> to <code>conf/zoo.cfg</code>, and change value of dataDir in <code>conf/zoo.cfg</code> to <code>dataDir=./tmp/zookeeper</code>.</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Start ZooKeeper</span>\n./bin/zkServer.sh start\n</code></pre>\n<h2 id=\"modify-configuration\">Modify Configuration</h2>\n<p>After completing the preparation of the basic environment, you need to modify the configuration file according to the\nenvironment you used. Change the environment configurations via <code>export &lt;ENV_NAME&gt;=&lt;VALUE&gt;</code>. The configuration files are located in directory <code>bin/env</code> as <code>install_env.sh</code> and <code>dolphinscheduler_env.sh</code>.</p>\n<h3 id=\"modify-<code>install_env.sh</code>\">Modify <code>install_env.sh</code></h3>\n<p>File <code>install_env.sh</code> describes which machines will be installed DolphinScheduler and what server will be installed on\neach machine. You could find this file in the path <code>bin/env/install_env.sh</code> and the detail of the configuration as below.</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">---------------------------------------------------------</span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">INSTALL MACHINE</span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">---------------------------------------------------------</span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Due to the master, worker, and API server being deployed on a single node, the IP of the server is the machine IP or localhost</span>\nips=&quot;localhost&quot;\nsshPort=&quot;22&quot;\nmasters=&quot;localhost&quot;\nworkers=&quot;localhost:default&quot;\nalertServer=&quot;localhost&quot;\napiServers=&quot;localhost&quot;\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">DolphinScheduler installation path, it will auto-create <span class=\"hljs-keyword\">if</span> not exists</span>\ninstallPath=~/dolphinscheduler\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Deploy user, use the user you create <span class=\"hljs-keyword\">in</span> section **Configure machine SSH password-free login**</span>\ndeployUser=&quot;dolphinscheduler&quot;\n</code></pre>\n<h3 id=\"modify-<code>dolphinscheduler_env.sh</code>\">Modify <code>dolphinscheduler_env.sh</code></h3>\n<p>File  <code>./bin/env/dolphinscheduler_env.sh</code> describes the following configurations:</p>\n<ul>\n<li>Database configuration of DolphinScheduler, see <a href=\"#initialize-the-database\">Initialize the Database</a> for detailed instructions.</li>\n<li>Some tasks which need external dependencies or libraries such as <code>JAVA_HOME</code> and <code>SPARK_HOME</code>.</li>\n<li>Registry center <code>zookeeper</code>.</li>\n<li>Server related configuration, such as cache type, timezone, etc.</li>\n</ul>\n<p>You could ignore the task external dependencies if you do not use those tasks, but you have to change <code>JAVA_HOME</code>, registry center and database\nrelated configurations based on your environment.</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">JAVA_HOME, will use it to start DolphinScheduler server</span>\nexport JAVA_HOME=${JAVA_HOME:-/opt/soft/java}\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Database related configuration, <span class=\"hljs-built_in\">set</span> database <span class=\"hljs-built_in\">type</span>, username and password</span>\nexport DATABASE=${DATABASE:-postgresql}\nexport SPRING_PROFILES_ACTIVE=${DATABASE}\nexport SPRING_DATASOURCE_URL=&quot;jdbc:postgresql://127.0.0.1:5432/dolphinscheduler&quot;\nexport SPRING_DATASOURCE_USERNAME={user}\nexport SPRING_DATASOURCE_PASSWORD={password}\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">DolphinScheduler server related configuration</span>\nexport SPRING_CACHE_TYPE=${SPRING_CACHE_TYPE:-none}\nexport SPRING_JACKSON_TIME_ZONE=${SPRING_JACKSON_TIME_ZONE:-UTC}\nexport MASTER_FETCH_COMMAND_NUM=${MASTER_FETCH_COMMAND_NUM:-10}\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Registry center configuration, determines the <span class=\"hljs-built_in\">type</span> and <span class=\"hljs-built_in\">link</span> of the registry center</span>\nexport REGISTRY_TYPE=${REGISTRY_TYPE:-zookeeper}\nexport REGISTRY_ZOOKEEPER_CONNECT_STRING=${REGISTRY_ZOOKEEPER_CONNECT_STRING:-localhost:2181}\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Tasks related configurations, need to change the configuration <span class=\"hljs-keyword\">if</span> you use the related tasks.</span>\nexport HADOOP_HOME=${HADOOP_HOME:-/opt/soft/hadoop}\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-/opt/soft/hadoop/etc/hadoop}\nexport SPARK_HOME1=${SPARK_HOME1:-/opt/soft/spark1}\nexport SPARK_HOME2=${SPARK_HOME2:-/opt/soft/spark2}\nexport PYTHON_HOME=${PYTHON_HOME:-/opt/soft/python}\nexport HIVE_HOME=${HIVE_HOME:-/opt/soft/hive}\nexport FLINK_HOME=${FLINK_HOME:-/opt/soft/flink}\nexport DATAX_HOME=${DATAX_HOME:-/opt/soft/datax}\n\nexport PATH=$HADOOP_HOME/bin:$SPARK_HOME1/bin:$SPARK_HOME2/bin:$PYTHON_HOME/bin:$JAVA_HOME/bin:$HIVE_HOME/bin:$FLINK_HOME/bin:$DATAX_HOME/bin:$PATH\n</code></pre>\n<h2 id=\"initialize-the-database\">Initialize the Database</h2>\n<p>Follow the instructions in <a href=\"https://github.com/apache/dolphinscheduler/blob/3.0.2-release/docs/docs/en/guide/howto/datasource-setting.md\">datasource-setting</a> <code>Pseudo-Cluster/Cluster Initialize the Database</code> section to create and initialize database</p>\n<h2 id=\"start-dolphinscheduler\">Start DolphinScheduler</h2>\n<p>Use <strong>deployment user</strong> you created above, running the following command to complete the deployment, and the server log will be stored in the logs folder.</p>\n<pre><code class=\"language-shell\">bash ./bin/install.sh\n</code></pre>\n<blockquote>\n<p><strong><em>Note:</em></strong> For the first time deployment, there maybe occur five times of <code>sh: bin/dolphinscheduler-daemon.sh: No such file or directory</code> in the terminal,\nthis is non-important information that you can ignore.</p>\n</blockquote>\n<h2 id=\"login-dolphinscheduler\">Login DolphinScheduler</h2>\n<p>Access address <code>http://localhost:12345/dolphinscheduler/ui</code> and login DolphinScheduler UI. The default username and password are <strong>admin/dolphinscheduler123</strong></p>\n<h2 id=\"start-or-stop-server\">Start or Stop Server</h2>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Stop all DolphinScheduler server</span>\nbash ./bin/stop-all.sh\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Start all DolphinScheduler server</span>\nbash ./bin/start-all.sh\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Start or stop DolphinScheduler Master</span>\nbash ./bin/dolphinscheduler-daemon.sh stop master-server\nbash ./bin/dolphinscheduler-daemon.sh start master-server\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Start or stop DolphinScheduler Worker</span>\nbash ./bin/dolphinscheduler-daemon.sh start worker-server\nbash ./bin/dolphinscheduler-daemon.sh stop worker-server\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Start or stop DolphinScheduler Api</span>\nbash ./bin/dolphinscheduler-daemon.sh start api-server\nbash ./bin/dolphinscheduler-daemon.sh stop api-server\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\">Start or stop Alert</span>\nbash ./bin/dolphinscheduler-daemon.sh start alert-server\nbash ./bin/dolphinscheduler-daemon.sh stop alert-server\n</code></pre>\n<blockquote>\n<p><strong><em>Note1:</em></strong>: Each server have <code>dolphinscheduler_env.sh</code> file in path <code>&lt;service&gt;/conf/dolphinscheduler_env.sh</code> which\nfor micro-services need. It means that you could start all servers by command <code>&lt;service&gt;/bin/start.sh</code> with different\nenvironment variable from <code>&lt;service&gt;/conf/dolphinscheduler_env.sh</code>. But it will use file <code>bin/env/dolphinscheduler_env.sh</code> overwrite\n<code>&lt;service&gt;/conf/dolphinscheduler_env.sh</code> if you start server with command <code>/bin/dolphinscheduler-daemon.sh start &lt;service&gt;</code>.</p>\n</blockquote>\n<blockquote>\n<p><strong><em>Note2:</em></strong>: Please refer to the section of &quot;System Architecture Design&quot; for service usage. Python gateway service is\nstarted along with the api-server, and if you do not want to start Python gateway service please disabled it by changing\nthe yaml config <code>python-gateway.enabled : false</code> in api-server's configuration path <code>api-server/conf/application.yaml</code></p>\n</blockquote>\n",
  "location": [
    "Installation",
    "Pseudo Cluster Deployment"
  ],
  "time": "2022-11-21",
  "structure": [
    {
      "title": "Preparation",
      "children": [
        {
          "title": "Configure User Exemption and Permissions",
          "children": [],
          "anchor": "configure-user-exemption-and-permissions"
        },
        {
          "title": "Configure Machine SSH Password-Free Login",
          "children": [],
          "anchor": "configure-machine-ssh-password-free-login"
        },
        {
          "title": "Start ZooKeeper",
          "children": [],
          "anchor": "start-zookeeper"
        },
        {
          "title": "Modify install_env.sh",
          "children": [],
          "anchor": "modify-install_env.sh"
        },
        {
          "title": "Modify dolphinscheduler_env.sh",
          "children": [],
          "anchor": "modify-dolphinscheduler_env.sh"
        }
      ],
      "anchor": "preparation"
    },
    {
      "title": "DolphinScheduler Startup Environment",
      "children": [
        {
          "title": "Configure User Exemption and Permissions",
          "children": [],
          "anchor": "configure-user-exemption-and-permissions"
        },
        {
          "title": "Configure Machine SSH Password-Free Login",
          "children": [],
          "anchor": "configure-machine-ssh-password-free-login"
        },
        {
          "title": "Start ZooKeeper",
          "children": [],
          "anchor": "start-zookeeper"
        },
        {
          "title": "Modify install_env.sh",
          "children": [],
          "anchor": "modify-install_env.sh"
        },
        {
          "title": "Modify dolphinscheduler_env.sh",
          "children": [],
          "anchor": "modify-dolphinscheduler_env.sh"
        }
      ],
      "anchor": "dolphinscheduler-startup-environment"
    },
    {
      "title": "Modify Configuration",
      "children": [
        {
          "title": "Configure User Exemption and Permissions",
          "children": [],
          "anchor": "configure-user-exemption-and-permissions"
        },
        {
          "title": "Configure Machine SSH Password-Free Login",
          "children": [],
          "anchor": "configure-machine-ssh-password-free-login"
        },
        {
          "title": "Start ZooKeeper",
          "children": [],
          "anchor": "start-zookeeper"
        },
        {
          "title": "Modify install_env.sh",
          "children": [],
          "anchor": "modify-install_env.sh"
        },
        {
          "title": "Modify dolphinscheduler_env.sh",
          "children": [],
          "anchor": "modify-dolphinscheduler_env.sh"
        }
      ],
      "anchor": "modify-configuration"
    },
    {
      "title": "Initialize the Database",
      "children": [
        {
          "title": "Configure User Exemption and Permissions",
          "children": [],
          "anchor": "configure-user-exemption-and-permissions"
        },
        {
          "title": "Configure Machine SSH Password-Free Login",
          "children": [],
          "anchor": "configure-machine-ssh-password-free-login"
        },
        {
          "title": "Start ZooKeeper",
          "children": [],
          "anchor": "start-zookeeper"
        },
        {
          "title": "Modify install_env.sh",
          "children": [],
          "anchor": "modify-install_env.sh"
        },
        {
          "title": "Modify dolphinscheduler_env.sh",
          "children": [],
          "anchor": "modify-dolphinscheduler_env.sh"
        }
      ],
      "anchor": "initialize-the-database"
    },
    {
      "title": "Start DolphinScheduler",
      "children": [
        {
          "title": "Configure User Exemption and Permissions",
          "children": [],
          "anchor": "configure-user-exemption-and-permissions"
        },
        {
          "title": "Configure Machine SSH Password-Free Login",
          "children": [],
          "anchor": "configure-machine-ssh-password-free-login"
        },
        {
          "title": "Start ZooKeeper",
          "children": [],
          "anchor": "start-zookeeper"
        },
        {
          "title": "Modify install_env.sh",
          "children": [],
          "anchor": "modify-install_env.sh"
        },
        {
          "title": "Modify dolphinscheduler_env.sh",
          "children": [],
          "anchor": "modify-dolphinscheduler_env.sh"
        }
      ],
      "anchor": "start-dolphinscheduler"
    },
    {
      "title": "Login DolphinScheduler",
      "children": [
        {
          "title": "Configure User Exemption and Permissions",
          "children": [],
          "anchor": "configure-user-exemption-and-permissions"
        },
        {
          "title": "Configure Machine SSH Password-Free Login",
          "children": [],
          "anchor": "configure-machine-ssh-password-free-login"
        },
        {
          "title": "Start ZooKeeper",
          "children": [],
          "anchor": "start-zookeeper"
        },
        {
          "title": "Modify install_env.sh",
          "children": [],
          "anchor": "modify-install_env.sh"
        },
        {
          "title": "Modify dolphinscheduler_env.sh",
          "children": [],
          "anchor": "modify-dolphinscheduler_env.sh"
        }
      ],
      "anchor": "login-dolphinscheduler"
    },
    {
      "title": "Start or Stop Server",
      "children": [
        {
          "title": "Configure User Exemption and Permissions",
          "children": [],
          "anchor": "configure-user-exemption-and-permissions"
        },
        {
          "title": "Configure Machine SSH Password-Free Login",
          "children": [],
          "anchor": "configure-machine-ssh-password-free-login"
        },
        {
          "title": "Start ZooKeeper",
          "children": [],
          "anchor": "start-zookeeper"
        },
        {
          "title": "Modify install_env.sh",
          "children": [],
          "anchor": "modify-install_env.sh"
        },
        {
          "title": "Modify dolphinscheduler_env.sh",
          "children": [],
          "anchor": "modify-dolphinscheduler_env.sh"
        }
      ],
      "anchor": "start-or-stop-server"
    }
  ],
  "title": "Pseudo-Cluster Deployment",
  "link": "/guide/installation/pseudo-cluster"
}