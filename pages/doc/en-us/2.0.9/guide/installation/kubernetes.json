{
  "__html": "<h1 id=\"quickstart-in-kubernetes\">QuickStart in Kubernetes</h1>\n<p>Kubernetes deployment is deploy DolphinScheduler in a Kubernetes cluster, which can schedule a large number of tasks and can be used in production.</p>\n<p>If you are a green hand and want to experience DolphinScheduler, we recommended you install follow <a href=\"/en-us/docs/2.0.9/guide/installation/standalone\">Standalone</a>. If you want to experience more complete functions or schedule large tasks number, we recommended you install follow <a href=\"/en-us/docs/2.0.9/guide/installation/pseudo-cluster\">pseudo-cluster deployment</a>. If you want to using DolphinScheduler in production, we recommended you follow <a href=\"/en-us/docs/2.0.9/guide/installation/cluster\">cluster deployment</a> or <a href=\"/en-us/docs/2.0.9/guide/installation/kubernetes\">kubernetes</a></p>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<ul>\n<li><a href=\"https://helm.sh/\">Helm</a> 3.1.0+</li>\n<li><a href=\"https://kubernetes.io/\">Kubernetes</a> 1.12+</li>\n<li>PV provisioner support in the underlying infrastructure</li>\n</ul>\n<h2 id=\"installing-the-chart\">Installing the Chart</h2>\n<blockquote>\n<p>NOTE: You need to change your <code>Chart.yaml</code> locally to make it work. Due to a change in the Bitnami repo,\nhttps://charts.bitnami.com/bitnami was truncated only containing entries for the latest 6 months (from January 2022 on).\nThis URL: https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami contains the full 'index.yaml'.</p>\n<p>See detail here: https://github.com/bitnami/charts/issues/10833.</p>\n<p>Change you <code>Chart.yaml</code> in path <code>apache-dolphinscheduler-2.0.9-src/docker/kubernetes/dolphinscheduler</code> after you download the source code\nand replace two places from <code>repository: https://charts.bitnami.com/bitnami</code>\nto <code>repository: https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami</code></p>\n</blockquote>\n<p>Please download the source code package apache-dolphinscheduler-2.0.9-src.tar.gz, download address: <a href=\"/en-us/download/download.html\">download</a></p>\n<p>To install the chart with the release name <code>dolphinscheduler</code>, please execute the following commands:</p>\n<pre><code>$ tar -zxvf apache-dolphinscheduler-2.0.9-src.tar.gz\n$ cd apache-dolphinscheduler-2.0.9-src/docker/kubernetes/dolphinscheduler\n$ helm repo add bitnami https://charts.bitnami.com/bitnami\n$ helm dependency update .\n$ helm install dolphinscheduler . --set image.tag=2.0.9\n</code></pre>\n<p>To install the chart with a namespace named <code>test</code>:</p>\n<pre><code class=\"language-bash\">$ helm install dolphinscheduler . -n <span class=\"hljs-built_in\">test</span>\n</code></pre>\n<blockquote>\n<p><strong>Tip</strong>: If a namespace named <code>test</code> is used, the option <code>-n test</code> needs to be added to the <code>helm</code> and <code>kubectl</code> command</p>\n</blockquote>\n<p>These commands deploy DolphinScheduler on the Kubernetes cluster in the default configuration. The <a href=\"#appendix-configuration\">Appendix-Configuration</a> section lists the parameters that can be configured during installation.</p>\n<blockquote>\n<p><strong>Tip</strong>: List all releases using <code>helm list</code></p>\n</blockquote>\n<p>The <strong>PostgreSQL</strong> (with username <code>root</code>, password <code>root</code> and database <code>dolphinscheduler</code>) and <strong>ZooKeeper</strong> services will start by default</p>\n<h2 id=\"access-dolphinscheduler-ui\">Access DolphinScheduler UI</h2>\n<p>If <code>ingress.enabled</code> in <code>values.yaml</code> is set to <code>true</code>, you just access <code>http://${ingress.host}/dolphinscheduler</code> in browser.</p>\n<blockquote>\n<p><strong>Tip</strong>: If there is a problem with ingress access, please contact the Kubernetes administrator and refer to the <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/\">Ingress</a></p>\n</blockquote>\n<p>Otherwise, when <code>api.service.type=ClusterIP</code> you need to execute port-forward command like:</p>\n<pre><code class=\"language-bash\">$ kubectl port-forward --address 0.0.0.0 svc/dolphinscheduler-api 12345:12345\n$ kubectl port-forward --address 0.0.0.0 -n <span class=\"hljs-built_in\">test</span> svc/dolphinscheduler-api 12345:12345 <span class=\"hljs-comment\"># with test namespace</span>\n</code></pre>\n<blockquote>\n<p><strong>Tip</strong>: If the error of <code>unable to do port forwarding: socat not found</code> appears, you need to install <code>socat</code> at first</p>\n</blockquote>\n<p>And then access the web: http://localhost:12345/dolphinscheduler (The local address is http://localhost:12345/dolphinscheduler)</p>\n<p>Or when <code>api.service.type=NodePort</code> you need to execute the command:</p>\n<pre><code class=\"language-bash\">NODE_IP=$(kubectl get no -n {{ .Release.Namespace }} -o jsonpath=<span class=\"hljs-string\">&quot;{.items[0].status.addresses[0].address}&quot;</span>)\nNODE_PORT=$(kubectl get svc {{ template <span class=\"hljs-string\">&quot;dolphinscheduler.fullname&quot;</span> . }}-api -n {{ .Release.Namespace }} -o jsonpath=<span class=\"hljs-string\">&quot;{.spec.ports[0].nodePort}&quot;</span>)\n<span class=\"hljs-built_in\">echo</span> http://<span class=\"hljs-variable\">$NODE_IP</span>:<span class=\"hljs-variable\">$NODE_PORT</span>/dolphinscheduler\n</code></pre>\n<p>And then access the web: http://$NODE_IP:$NODE_PORT/dolphinscheduler</p>\n<p>The default username is <code>admin</code> and the default password is <code>dolphinscheduler123</code></p>\n<p>Please refer to the <code>Quick Start</code> in the chapter <a href=\"../quick-start.md\">Quick Start</a> to explore how to use DolphinScheduler</p>\n<h2 id=\"uninstalling-the-chart\">Uninstalling the Chart</h2>\n<p>To uninstall/delete the <code>dolphinscheduler</code> deployment:</p>\n<pre><code class=\"language-bash\">$ helm uninstall dolphinscheduler\n</code></pre>\n<p>The command removes all the Kubernetes components but PVC's associated with the chart and deletes the release.</p>\n<p>To delete the PVC's associated with <code>dolphinscheduler</code>:</p>\n<pre><code class=\"language-bash\">$ kubectl delete pvc -l app.kubernetes.io/instance=dolphinscheduler\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: Deleting the PVC's will delete all data as well. Please be cautious before doing it.</p>\n</blockquote>\n<h2 id=\"configuration\">Configuration</h2>\n<p>The configuration file is <code>values.yaml</code>, and the <a href=\"#appendix-configuration\">Appendix-Configuration</a> tables lists the configurable parameters of the DolphinScheduler and their default values.</p>\n<h2 id=\"support-matrix\">Support Matrix</h2>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Support</th>\n<th>Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Shell</td>\n<td>Yes</td>\n<td></td>\n</tr>\n<tr>\n<td>Python2</td>\n<td>Yes</td>\n<td></td>\n</tr>\n<tr>\n<td>Python3</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>Hadoop2</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>Hadoop3</td>\n<td>Not Sure</td>\n<td>Not tested</td>\n</tr>\n<tr>\n<td>Spark-Local(client)</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>Spark-YARN(cluster)</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>Spark-Standalone(cluster)</td>\n<td>Not Yet</td>\n<td></td>\n</tr>\n<tr>\n<td>Spark-Kubernetes(cluster)</td>\n<td>Not Yet</td>\n<td></td>\n</tr>\n<tr>\n<td>Flink-Local(local&gt;=1.11)</td>\n<td>Not Yet</td>\n<td>Generic CLI mode is not yet supported</td>\n</tr>\n<tr>\n<td>Flink-YARN(yarn-cluster)</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>Flink-YARN(yarn-session/yarn-per-job/yarn-application&gt;=1.11)</td>\n<td>Not Yet</td>\n<td>Generic CLI mode is not yet supported</td>\n</tr>\n<tr>\n<td>Flink-Standalone(default)</td>\n<td>Not Yet</td>\n<td></td>\n</tr>\n<tr>\n<td>Flink-Standalone(remote&gt;=1.11)</td>\n<td>Not Yet</td>\n<td>Generic CLI mode is not yet supported</td>\n</tr>\n<tr>\n<td>Flink-Kubernetes(default)</td>\n<td>Not Yet</td>\n<td></td>\n</tr>\n<tr>\n<td>Flink-Kubernetes(remote&gt;=1.11)</td>\n<td>Not Yet</td>\n<td>Generic CLI mode is not yet supported</td>\n</tr>\n<tr>\n<td>Flink-NativeKubernetes(kubernetes-session/application&gt;=1.11)</td>\n<td>Not Yet</td>\n<td>Generic CLI mode is not yet supported</td>\n</tr>\n<tr>\n<td>MapReduce</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>Kerberos</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>HTTP</td>\n<td>Yes</td>\n<td></td>\n</tr>\n<tr>\n<td>DataX</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>Sqoop</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>SQL-MySQL</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>SQL-PostgreSQL</td>\n<td>Yes</td>\n<td></td>\n</tr>\n<tr>\n<td>SQL-Hive</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>SQL-Spark</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>SQL-ClickHouse</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>SQL-Oracle</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>SQL-SQLServer</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n<tr>\n<td>SQL-DB2</td>\n<td>Indirect Yes</td>\n<td>Refer to FAQ</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"faq\">FAQ</h2>\n<h3 id=\"how-to-view-the-logs-of-a-pod-container?\">How to view the logs of a pod container?</h3>\n<p>List all pods (aka <code>po</code>):</p>\n<pre><code>kubectl get po\nkubectl get po -n test # with test namespace\n</code></pre>\n<p>View the logs of a pod container named dolphinscheduler-master-0:</p>\n<pre><code>kubectl logs dolphinscheduler-master-0\nkubectl logs -f dolphinscheduler-master-0 # follow log output\nkubectl logs --tail 10 dolphinscheduler-master-0 -n test # show last 10 lines from the end of the logs\n</code></pre>\n<h3 id=\"how-to-scale-api,-master-and-worker-on-kubernetes?\">How to scale api, master and worker on Kubernetes?</h3>\n<p>List all deployments (aka <code>deploy</code>):</p>\n<pre><code>kubectl get deploy\nkubectl get deploy -n test # with test namespace\n</code></pre>\n<p>Scale api to 3 replicas:</p>\n<pre><code>kubectl scale --replicas=3 deploy dolphinscheduler-api\nkubectl scale --replicas=3 deploy dolphinscheduler-api -n test # with test namespace\n</code></pre>\n<p>List all stateful sets (aka <code>sts</code>):</p>\n<pre><code>kubectl get sts\nkubectl get sts -n test # with test namespace\n</code></pre>\n<p>Scale master to 2 replicas:</p>\n<pre><code>kubectl scale --replicas=2 sts dolphinscheduler-master\nkubectl scale --replicas=2 sts dolphinscheduler-master -n test # with test namespace\n</code></pre>\n<p>Scale worker to 6 replicas:</p>\n<pre><code>kubectl scale --replicas=6 sts dolphinscheduler-worker\nkubectl scale --replicas=6 sts dolphinscheduler-worker -n test # with test namespace\n</code></pre>\n<h3 id=\"how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?\">How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?</h3>\n<blockquote>\n<p>Because of the commercial license, we cannot directly use the driver of MySQL.</p>\n<p>If you want to use MySQL, you can build a new image based on the <code>apache/dolphinscheduler</code> image as follows.</p>\n</blockquote>\n<ol>\n<li>\n<p>Download the MySQL driver <a href=\"https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar\">mysql-connector-java-8.0.16.jar</a></p>\n</li>\n<li>\n<p>Create a new <code>Dockerfile</code> to add MySQL driver:</p>\n</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:2.0.9\nCOPY mysql-connector-java-8.0.16.jar /opt/dolphinscheduler/lib\n</code></pre>\n<ol start=\"3\">\n<li>Build a new docker image including MySQL driver:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:mysql-driver .\n</code></pre>\n<ol start=\"4\">\n<li>\n<p>Push the docker image <code>apache/dolphinscheduler:mysql-driver</code> to a docker registry</p>\n</li>\n<li>\n<p>Modify image <code>repository</code> and update <code>tag</code> to <code>mysql-driver</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Modify postgresql <code>enabled</code> to <code>false</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Modify externalDatabase (especially modify <code>host</code>, <code>username</code> and <code>password</code>) in <code>values.yaml</code>:</p>\n</li>\n</ol>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">externalDatabase:</span>\n  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">&quot;mysql&quot;</span>\n  <span class=\"hljs-attr\">driver:</span> <span class=\"hljs-string\">&quot;com.mysql.jdbc.Driver&quot;</span>\n  <span class=\"hljs-attr\">host:</span> <span class=\"hljs-string\">&quot;localhost&quot;</span>\n  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-string\">&quot;3306&quot;</span>\n  <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">&quot;root&quot;</span>\n  <span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">&quot;root&quot;</span>\n  <span class=\"hljs-attr\">database:</span> <span class=\"hljs-string\">&quot;dolphinscheduler&quot;</span>\n  <span class=\"hljs-attr\">params:</span> <span class=\"hljs-string\">&quot;useUnicode=true&amp;characterEncoding=UTF-8&quot;</span>\n</code></pre>\n<ol start=\"8\">\n<li>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</li>\n</ol>\n<h3 id=\"how-to-support-mysql-datasource-in-<code>datasource-manage</code>?\">How to support MySQL datasource in <code>Datasource manage</code>?</h3>\n<blockquote>\n<p>Because of the commercial license, we cannot directly use the driver of MySQL.</p>\n<p>If you want to add MySQL datasource, you can build a new image based on the <code>apache/dolphinscheduler</code> image as follows.</p>\n</blockquote>\n<ol>\n<li>\n<p>Download the MySQL driver <a href=\"https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar\">mysql-connector-java-8.0.16.jar</a></p>\n</li>\n<li>\n<p>Create a new <code>Dockerfile</code> to add MySQL driver:</p>\n</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:2.0.9\nCOPY mysql-connector-java-8.0.16.jar /opt/dolphinscheduler/lib\n</code></pre>\n<ol start=\"3\">\n<li>Build a new docker image including MySQL driver:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:mysql-driver .\n</code></pre>\n<ol start=\"4\">\n<li>\n<p>Push the docker image <code>apache/dolphinscheduler:mysql-driver</code> to a docker registry</p>\n</li>\n<li>\n<p>Modify image <code>repository</code> and update <code>tag</code> to <code>mysql-driver</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</p>\n</li>\n<li>\n<p>Add a MySQL datasource in <code>Datasource manage</code></p>\n</li>\n</ol>\n<h3 id=\"how-to-support-oracle-datasource-in-<code>datasource-manage</code>?\">How to support Oracle datasource in <code>Datasource manage</code>?</h3>\n<blockquote>\n<p>Because of the commercial license, we cannot directly use the driver of Oracle.</p>\n<p>If you want to add Oracle datasource, you can build a new image based on the <code>apache/dolphinscheduler</code> image as follows.</p>\n</blockquote>\n<ol>\n<li>\n<p>Download the Oracle driver <a href=\"https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc8/\">ojdbc8.jar</a> (such as <code>ojdbc8-19.9.0.0.jar</code>)</p>\n</li>\n<li>\n<p>Create a new <code>Dockerfile</code> to add Oracle driver:</p>\n</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:2.0.9\nCOPY ojdbc8-19.9.0.0.jar /opt/dolphinscheduler/lib\n</code></pre>\n<ol start=\"3\">\n<li>Build a new docker image including Oracle driver:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:oracle-driver .\n</code></pre>\n<ol start=\"4\">\n<li>\n<p>Push the docker image <code>apache/dolphinscheduler:oracle-driver</code> to a docker registry</p>\n</li>\n<li>\n<p>Modify image <code>repository</code> and update <code>tag</code> to <code>oracle-driver</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</p>\n</li>\n<li>\n<p>Add an Oracle datasource in <code>Datasource manage</code></p>\n</li>\n</ol>\n<h3 id=\"how-to-support-python-2-pip-and-custom-requirements.txt?\">How to support Python 2 pip and custom requirements.txt?</h3>\n<ol>\n<li>Create a new <code>Dockerfile</code> to install pip:</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:2.0.9\nCOPY requirements.txt /tmp\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends python-pip &amp;&amp; \\\n    pip install --no-cache-dir -r /tmp/requirements.txt &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n</code></pre>\n<p>The command will install the default <strong>pip 18.1</strong>. If you upgrade the pip, just add one line</p>\n<pre><code>    pip install --no-cache-dir -U pip &amp;&amp; \\\n</code></pre>\n<ol start=\"2\">\n<li>Build a new docker image including pip:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:pip .\n</code></pre>\n<ol start=\"3\">\n<li>\n<p>Push the docker image <code>apache/dolphinscheduler:pip</code> to a docker registry</p>\n</li>\n<li>\n<p>Modify image <code>repository</code> and update <code>tag</code> to <code>pip</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</p>\n</li>\n<li>\n<p>Verify pip under a new Python task</p>\n</li>\n</ol>\n<h3 id=\"how-to-support-python-3?\">How to support Python 3?</h3>\n<ol>\n<li>Create a new <code>Dockerfile</code> to install Python 3:</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:2.0.9\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends python3 &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n</code></pre>\n<p>The command will install the default <strong>Python 3.7.3</strong>. If you also want to install <strong>pip3</strong>, just replace <code>python3</code> with <code>python3-pip</code> like</p>\n<pre><code>    apt-get install -y --no-install-recommends python3-pip &amp;&amp; \\\n</code></pre>\n<ol start=\"2\">\n<li>Build a new docker image including Python 3:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:python3 .\n</code></pre>\n<ol start=\"3\">\n<li>\n<p>Push the docker image <code>apache/dolphinscheduler:python3</code> to a docker registry</p>\n</li>\n<li>\n<p>Modify image <code>repository</code> and update <code>tag</code> to <code>python3</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Modify <code>PYTHON_HOME</code> to <code>/usr/bin/python3</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</p>\n</li>\n<li>\n<p>Verify Python 3 under a new Python task</p>\n</li>\n</ol>\n<h3 id=\"how-to-support-hadoop,-spark,-flink,-hive-or-datax?\">How to support Hadoop, Spark, Flink, Hive or DataX?</h3>\n<p>Take Spark 2.4.7 as an example:</p>\n<ol>\n<li>\n<p>Download the Spark 2.4.7 release binary <code>spark-2.4.7-bin-hadoop2.7.tgz</code></p>\n</li>\n<li>\n<p>Ensure that <code>common.sharedStoragePersistence.enabled</code> is turned on</p>\n</li>\n<li>\n<p>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</p>\n</li>\n<li>\n<p>Copy the Spark 2.4.7 release binary into the Docker container</p>\n</li>\n</ol>\n<pre><code class=\"language-bash\">kubectl <span class=\"hljs-built_in\">cp</span> spark-2.4.7-bin-hadoop2.7.tgz dolphinscheduler-worker-0:/opt/soft\nkubectl <span class=\"hljs-built_in\">cp</span> -n <span class=\"hljs-built_in\">test</span> spark-2.4.7-bin-hadoop2.7.tgz dolphinscheduler-worker-0:/opt/soft <span class=\"hljs-comment\"># with test namespace</span>\n</code></pre>\n<p>Because the volume <code>sharedStoragePersistence</code> is mounted on <code>/opt/soft</code>, all files in <code>/opt/soft</code> will not be lost</p>\n<ol start=\"5\">\n<li>Attach the container and ensure that <code>SPARK_HOME2</code> exists</li>\n</ol>\n<pre><code class=\"language-bash\">kubectl <span class=\"hljs-built_in\">exec</span> -it dolphinscheduler-worker-0 bash\nkubectl <span class=\"hljs-built_in\">exec</span> -n <span class=\"hljs-built_in\">test</span> -it dolphinscheduler-worker-0 bash <span class=\"hljs-comment\"># with test namespace</span>\n<span class=\"hljs-built_in\">cd</span> /opt/soft\ntar zxf spark-2.4.7-bin-hadoop2.7.tgz\n<span class=\"hljs-built_in\">rm</span> -f spark-2.4.7-bin-hadoop2.7.tgz\n<span class=\"hljs-built_in\">ln</span> -s spark-2.4.7-bin-hadoop2.7 spark2 <span class=\"hljs-comment\"># or just mv</span>\n<span class=\"hljs-variable\">$SPARK_HOME2</span>/bin/spark-submit --version\n</code></pre>\n<p>The last command will print the Spark version if everything goes well</p>\n<ol start=\"6\">\n<li>Verify Spark under a Shell task</li>\n</ol>\n<pre><code>$SPARK_HOME2/bin/spark-submit --class org.apache.spark.examples.SparkPi $SPARK_HOME2/examples/jars/spark-examples_2.11-2.4.7.jar\n</code></pre>\n<p>Check whether the task log contains the output like <code>Pi is roughly 3.146015</code></p>\n<ol start=\"7\">\n<li>Verify Spark under a Spark task</li>\n</ol>\n<p>The file <code>spark-examples_2.11-2.4.7.jar</code> needs to be uploaded to the resources first, and then create a Spark task with:</p>\n<ul>\n<li>Spark Version: <code>SPARK2</code></li>\n<li>Main Class: <code>org.apache.spark.examples.SparkPi</code></li>\n<li>Main Package: <code>spark-examples_2.11-2.4.7.jar</code></li>\n<li>Deploy Mode: <code>local</code></li>\n</ul>\n<p>Similarly, check whether the task log contains the output like <code>Pi is roughly 3.146015</code></p>\n<ol start=\"8\">\n<li>Verify Spark on YARN</li>\n</ol>\n<p>Spark on YARN (Deploy Mode is <code>cluster</code> or <code>client</code>) requires Hadoop support. Similar to Spark support, the operation of supporting Hadoop is almost the same as the previous steps</p>\n<p>Ensure that <code>$HADOOP_HOME</code> and <code>$HADOOP_CONF_DIR</code> exists</p>\n<h3 id=\"how-to-support-spark-3?\">How to support Spark 3?</h3>\n<p>In fact, the way to submit applications with <code>spark-submit</code> is the same, regardless of Spark 1, 2 or 3. In other words, the semantics of <code>SPARK_HOME2</code> is the second <code>SPARK_HOME</code> instead of <code>SPARK2</code>'s <code>HOME</code>, so just set <code>SPARK_HOME2=/path/to/spark3</code></p>\n<p>Take Spark 3.1.1 as an example:</p>\n<ol>\n<li>\n<p>Download the Spark 3.1.1 release binary <code>spark-3.1.1-bin-hadoop2.7.tgz</code></p>\n</li>\n<li>\n<p>Ensure that <code>common.sharedStoragePersistence.enabled</code> is turned on</p>\n</li>\n<li>\n<p>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</p>\n</li>\n<li>\n<p>Copy the Spark 3.1.1 release binary into the Docker container</p>\n</li>\n</ol>\n<pre><code class=\"language-bash\">kubectl <span class=\"hljs-built_in\">cp</span> spark-3.1.1-bin-hadoop2.7.tgz dolphinscheduler-worker-0:/opt/soft\nkubectl <span class=\"hljs-built_in\">cp</span> -n <span class=\"hljs-built_in\">test</span> spark-3.1.1-bin-hadoop2.7.tgz dolphinscheduler-worker-0:/opt/soft <span class=\"hljs-comment\"># with test namespace</span>\n</code></pre>\n<ol start=\"5\">\n<li>Attach the container and ensure that <code>SPARK_HOME2</code> exists</li>\n</ol>\n<pre><code class=\"language-bash\">kubectl <span class=\"hljs-built_in\">exec</span> -it dolphinscheduler-worker-0 bash\nkubectl <span class=\"hljs-built_in\">exec</span> -n <span class=\"hljs-built_in\">test</span> -it dolphinscheduler-worker-0 bash <span class=\"hljs-comment\"># with test namespace</span>\n<span class=\"hljs-built_in\">cd</span> /opt/soft\ntar zxf spark-3.1.1-bin-hadoop2.7.tgz\n<span class=\"hljs-built_in\">rm</span> -f spark-3.1.1-bin-hadoop2.7.tgz\n<span class=\"hljs-built_in\">ln</span> -s spark-3.1.1-bin-hadoop2.7 spark2 <span class=\"hljs-comment\"># or just mv</span>\n<span class=\"hljs-variable\">$SPARK_HOME2</span>/bin/spark-submit --version\n</code></pre>\n<p>The last command will print the Spark version if everything goes well</p>\n<ol start=\"6\">\n<li>Verify Spark under a Shell task</li>\n</ol>\n<pre><code>$SPARK_HOME2/bin/spark-submit --class org.apache.spark.examples.SparkPi $SPARK_HOME2/examples/jars/spark-examples_2.12-3.1.1.jar\n</code></pre>\n<p>Check whether the task log contains the output like <code>Pi is roughly 3.146015</code></p>\n<h3 id=\"how-to-support-shared-storage-between-master,-worker-and-api-server?\">How to support shared storage between Master, Worker and Api server?</h3>\n<p>For example, Master, Worker and API server may use Hadoop at the same time</p>\n<ol>\n<li>Modify the following configurations in <code>values.yaml</code></li>\n</ol>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">common:</span>\n  <span class=\"hljs-attr\">sharedStoragePersistence:</span>\n    <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">&quot;/opt/soft&quot;</span>\n    <span class=\"hljs-attr\">accessModes:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;ReadWriteMany&quot;</span>\n    <span class=\"hljs-attr\">storageClassName:</span> <span class=\"hljs-string\">&quot;-&quot;</span>\n    <span class=\"hljs-attr\">storage:</span> <span class=\"hljs-string\">&quot;20Gi&quot;</span>\n</code></pre>\n<p><code>storageClassName</code> and <code>storage</code> need to be modified to actual values</p>\n<blockquote>\n<p><strong>Note</strong>: <code>storageClassName</code> must support the access mode: <code>ReadWriteMany</code></p>\n</blockquote>\n<ol start=\"2\">\n<li>\n<p>Copy the Hadoop into the directory <code>/opt/soft</code></p>\n</li>\n<li>\n<p>Ensure that <code>$HADOOP_HOME</code> and <code>$HADOOP_CONF_DIR</code> are correct</p>\n</li>\n</ol>\n<h3 id=\"how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?\">How to support local file resource storage instead of HDFS and S3?</h3>\n<p>Modify the following configurations in <code>values.yaml</code></p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">common:</span>\n  <span class=\"hljs-attr\">configmap:</span>\n    <span class=\"hljs-attr\">RESOURCE_STORAGE_TYPE:</span> <span class=\"hljs-string\">&quot;HDFS&quot;</span>\n    <span class=\"hljs-attr\">RESOURCE_UPLOAD_PATH:</span> <span class=\"hljs-string\">&quot;/dolphinscheduler&quot;</span>\n    <span class=\"hljs-attr\">FS_DEFAULT_FS:</span> <span class=\"hljs-string\">&quot;file:///&quot;</span>\n  <span class=\"hljs-attr\">fsFileResourcePersistence:</span>\n    <span class=\"hljs-attr\">enabled:</span> <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-attr\">accessModes:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;ReadWriteMany&quot;</span>\n    <span class=\"hljs-attr\">storageClassName:</span> <span class=\"hljs-string\">&quot;-&quot;</span>\n    <span class=\"hljs-attr\">storage:</span> <span class=\"hljs-string\">&quot;20Gi&quot;</span>\n</code></pre>\n<p><code>storageClassName</code> and <code>storage</code> need to be modified to actual values</p>\n<blockquote>\n<p><strong>Note</strong>: <code>storageClassName</code> must support the access mode: <code>ReadWriteMany</code></p>\n</blockquote>\n<h3 id=\"how-to-support-s3-resource-storage-like-minio?\">How to support S3 resource storage like MinIO?</h3>\n<p>Take MinIO as an example: Modify the following configurations in <code>values.yaml</code></p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">common:</span>\n  <span class=\"hljs-attr\">configmap:</span>\n    <span class=\"hljs-attr\">RESOURCE_STORAGE_TYPE:</span> <span class=\"hljs-string\">&quot;S3&quot;</span>\n    <span class=\"hljs-attr\">RESOURCE_UPLOAD_PATH:</span> <span class=\"hljs-string\">&quot;/dolphinscheduler&quot;</span>\n    <span class=\"hljs-attr\">FS_DEFAULT_FS:</span> <span class=\"hljs-string\">&quot;s3a://BUCKET_NAME&quot;</span>\n    <span class=\"hljs-attr\">FS_S3A_ENDPOINT:</span> <span class=\"hljs-string\">&quot;http://MINIO_IP:9000&quot;</span>\n    <span class=\"hljs-attr\">FS_S3A_ACCESS_KEY:</span> <span class=\"hljs-string\">&quot;MINIO_ACCESS_KEY&quot;</span>\n    <span class=\"hljs-attr\">FS_S3A_SECRET_KEY:</span> <span class=\"hljs-string\">&quot;MINIO_SECRET_KEY&quot;</span>\n</code></pre>\n<p><code>BUCKET_NAME</code>, <code>MINIO_IP</code>, <code>MINIO_ACCESS_KEY</code> and <code>MINIO_SECRET_KEY</code> need to be modified to actual values</p>\n<blockquote>\n<p><strong>Note</strong>: <code>MINIO_IP</code> can only use IP instead of domain name, because DolphinScheduler currently doesn't support S3 path style access</p>\n</blockquote>\n<h3 id=\"how-to-configure-skywalking?\">How to configure SkyWalking?</h3>\n<p>Modify SKYWALKING configurations in <code>values.yaml</code>:</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">common:</span>\n  <span class=\"hljs-attr\">configmap:</span>\n    <span class=\"hljs-attr\">SKYWALKING_ENABLE:</span> <span class=\"hljs-string\">&quot;true&quot;</span>\n    <span class=\"hljs-attr\">SW_AGENT_COLLECTOR_BACKEND_SERVICES:</span> <span class=\"hljs-string\">&quot;127.0.0.1:11800&quot;</span>\n    <span class=\"hljs-attr\">SW_GRPC_LOG_SERVER_HOST:</span> <span class=\"hljs-string\">&quot;127.0.0.1&quot;</span>\n    <span class=\"hljs-attr\">SW_GRPC_LOG_SERVER_PORT:</span> <span class=\"hljs-string\">&quot;11800&quot;</span>\n</code></pre>\n<h2 id=\"appendix-configuration\">Appendix-Configuration</h2>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>timezone</code></td>\n<td>World time and date for cities in all time zones</td>\n<td><code>Asia/Shanghai</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>image.repository</code></td>\n<td>Docker image repository for the DolphinScheduler</td>\n<td><code>apache/dolphinscheduler</code></td>\n</tr>\n<tr>\n<td><code>image.tag</code></td>\n<td>Docker image version for the DolphinScheduler</td>\n<td><code>latest</code></td>\n</tr>\n<tr>\n<td><code>image.pullPolicy</code></td>\n<td>Image pull policy. One of Always, Never, IfNotPresent</td>\n<td><code>IfNotPresent</code></td>\n</tr>\n<tr>\n<td><code>image.pullSecret</code></td>\n<td>Image pull secret. An optional reference to secret in the same namespace to use for pulling any of the images</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>postgresql.enabled</code></td>\n<td>If not exists external PostgreSQL, by default, the DolphinScheduler will use a internal PostgreSQL</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>postgresql.postgresqlUsername</code></td>\n<td>The username for internal PostgreSQL</td>\n<td><code>root</code></td>\n</tr>\n<tr>\n<td><code>postgresql.postgresqlPassword</code></td>\n<td>The password for internal PostgreSQL</td>\n<td><code>root</code></td>\n</tr>\n<tr>\n<td><code>postgresql.postgresqlDatabase</code></td>\n<td>The database for internal PostgreSQL</td>\n<td><code>dolphinscheduler</code></td>\n</tr>\n<tr>\n<td><code>postgresql.persistence.enabled</code></td>\n<td>Set <code>postgresql.persistence.enabled</code> to <code>true</code> to mount a new volume for internal PostgreSQL</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>postgresql.persistence.size</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td><code>postgresql.persistence.storageClass</code></td>\n<td>PostgreSQL data persistent volume storage class. If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>externalDatabase.type</code></td>\n<td>If exists external PostgreSQL, and set <code>postgresql.enabled</code> value to false. DolphinScheduler's database type will use it</td>\n<td><code>postgresql</code></td>\n</tr>\n<tr>\n<td><code>externalDatabase.driver</code></td>\n<td>If exists external PostgreSQL, and set <code>postgresql.enabled</code> value to false. DolphinScheduler's database driver will use it</td>\n<td><code>org.postgresql.Driver</code></td>\n</tr>\n<tr>\n<td><code>externalDatabase.host</code></td>\n<td>If exists external PostgreSQL, and set <code>postgresql.enabled</code> value to false. DolphinScheduler's database host will use it</td>\n<td><code>localhost</code></td>\n</tr>\n<tr>\n<td><code>externalDatabase.port</code></td>\n<td>If exists external PostgreSQL, and set <code>postgresql.enabled</code> value to false. DolphinScheduler's database port will use it</td>\n<td><code>5432</code></td>\n</tr>\n<tr>\n<td><code>externalDatabase.username</code></td>\n<td>If exists external PostgreSQL, and set <code>postgresql.enabled</code> value to false. DolphinScheduler's database username will use it</td>\n<td><code>root</code></td>\n</tr>\n<tr>\n<td><code>externalDatabase.password</code></td>\n<td>If exists external PostgreSQL, and set <code>postgresql.enabled</code> value to false. DolphinScheduler's database password will use it</td>\n<td><code>root</code></td>\n</tr>\n<tr>\n<td><code>externalDatabase.database</code></td>\n<td>If exists external PostgreSQL, and set <code>postgresql.enabled</code> value to false. DolphinScheduler's database database will use it</td>\n<td><code>dolphinscheduler</code></td>\n</tr>\n<tr>\n<td><code>externalDatabase.params</code></td>\n<td>If exists external PostgreSQL, and set <code>postgresql.enabled</code> value to false. DolphinScheduler's database params will use it</td>\n<td><code>characterEncoding=utf8</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>zookeeper.enabled</code></td>\n<td>If not exists external Zookeeper, by default, the DolphinScheduler will use a internal Zookeeper</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>zookeeper.fourlwCommandsWhitelist</code></td>\n<td>A list of comma separated Four Letter Words commands to use</td>\n<td><code>srvr,ruok,wchs,cons</code></td>\n</tr>\n<tr>\n<td><code>zookeeper.persistence.enabled</code></td>\n<td>Set <code>zookeeper.persistence.enabled</code> to <code>true</code> to mount a new volume for internal Zookeeper</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>zookeeper.persistence.size</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td><code>zookeeper.persistence.storageClass</code></td>\n<td>Zookeeper data persistent volume storage class. If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>zookeeper.zookeeperRoot</code></td>\n<td>Specify dolphinscheduler root directory in Zookeeper</td>\n<td><code>/dolphinscheduler</code></td>\n</tr>\n<tr>\n<td><code>externalZookeeper.zookeeperQuorum</code></td>\n<td>If exists external Zookeeper, and set <code>zookeeper.enabled</code> value to false. Specify Zookeeper quorum</td>\n<td><code>127.0.0.1:2181</code></td>\n</tr>\n<tr>\n<td><code>externalZookeeper.zookeeperRoot</code></td>\n<td>If exists external Zookeeper, and set <code>zookeeper.enabled</code> value to false. Specify dolphinscheduler root directory in Zookeeper</td>\n<td><code>/dolphinscheduler</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>common.configmap.DOLPHINSCHEDULER_OPTS</code></td>\n<td>The jvm options for dolphinscheduler, suitable for all servers</td>\n<td><code>&quot;&quot;</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.DATA_BASEDIR_PATH</code></td>\n<td>User data directory path, self configuration, please make sure the directory exists and have read write permissions</td>\n<td><code>/tmp/dolphinscheduler</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.RESOURCE_STORAGE_TYPE</code></td>\n<td>Resource storage type: HDFS, S3, NONE</td>\n<td><code>HDFS</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.RESOURCE_UPLOAD_PATH</code></td>\n<td>Resource store on HDFS/S3 path, please make sure the directory exists on hdfs and have read write permissions</td>\n<td><code>/dolphinscheduler</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.FS_DEFAULT_FS</code></td>\n<td>Resource storage file system like <code>file:///</code>, <code>hdfs://mycluster:8020</code> or <code>s3a://dolphinscheduler</code></td>\n<td><code>file:///</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.FS_S3A_ENDPOINT</code></td>\n<td>S3 endpoint when <code>common.configmap.RESOURCE_STORAGE_TYPE</code> is set to <code>S3</code></td>\n<td><code>s3.xxx.amazonaws.com</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.FS_S3A_ACCESS_KEY</code></td>\n<td>S3 access key when <code>common.configmap.RESOURCE_STORAGE_TYPE</code> is set to <code>S3</code></td>\n<td><code>xxxxxxx</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.FS_S3A_SECRET_KEY</code></td>\n<td>S3 secret key when <code>common.configmap.RESOURCE_STORAGE_TYPE</code> is set to <code>S3</code></td>\n<td><code>xxxxxxx</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.HADOOP_SECURITY_AUTHENTICATION_STARTUP_STATE</code></td>\n<td>Whether to startup kerberos</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.JAVA_SECURITY_KRB5_CONF_PATH</code></td>\n<td>The java.security.krb5.conf path</td>\n<td><code>/opt/krb5.conf</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.LOGIN_USER_KEYTAB_USERNAME</code></td>\n<td>The login user from keytab username</td>\n<td><code>hdfs@HADOOP.COM</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.LOGIN_USER_KEYTAB_PATH</code></td>\n<td>The login user from keytab path</td>\n<td><code>/opt/hdfs.keytab</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.KERBEROS_EXPIRE_TIME</code></td>\n<td>The kerberos expire time, the unit is hour</td>\n<td><code>2</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.HDFS_ROOT_USER</code></td>\n<td>The HDFS root user who must have the permission to create directories under the HDFS root path</td>\n<td><code>hdfs</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.RESOURCE_MANAGER_HTTPADDRESS_PORT</code></td>\n<td>Set resource manager httpaddress port for yarn</td>\n<td><code>8088</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.YARN_RESOURCEMANAGER_HA_RM_IDS</code></td>\n<td>If resourcemanager HA is enabled, please set the HA IPs</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.YARN_APPLICATION_STATUS_ADDRESS</code></td>\n<td>If resourcemanager is single, you only need to replace ds1 to actual resourcemanager hostname, otherwise keep default</td>\n<td><code>http://ds1:%s/ws/v1/cluster/apps/%s</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.SKYWALKING_ENABLE</code></td>\n<td>Set whether to enable skywalking</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.SW_AGENT_COLLECTOR_BACKEND_SERVICES</code></td>\n<td>Set agent collector backend services for skywalking</td>\n<td><code>127.0.0.1:11800</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.SW_GRPC_LOG_SERVER_HOST</code></td>\n<td>Set grpc log server host for skywalking</td>\n<td><code>127.0.0.1</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.SW_GRPC_LOG_SERVER_PORT</code></td>\n<td>Set grpc log server port for skywalking</td>\n<td><code>11800</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.HADOOP_HOME</code></td>\n<td>Set <code>HADOOP_HOME</code> for DolphinScheduler's task environment</td>\n<td><code>/opt/soft/hadoop</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.HADOOP_CONF_DIR</code></td>\n<td>Set <code>HADOOP_CONF_DIR</code> for DolphinScheduler's task environment</td>\n<td><code>/opt/soft/hadoop/etc/hadoop</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.SPARK_HOME1</code></td>\n<td>Set <code>SPARK_HOME1</code> for DolphinScheduler's task environment</td>\n<td><code>/opt/soft/spark1</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.SPARK_HOME2</code></td>\n<td>Set <code>SPARK_HOME2</code> for DolphinScheduler's task environment</td>\n<td><code>/opt/soft/spark2</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.PYTHON_HOME</code></td>\n<td>Set <code>PYTHON_HOME</code> for DolphinScheduler's task environment</td>\n<td><code>/usr/bin/python</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.JAVA_HOME</code></td>\n<td>Set <code>JAVA_HOME</code> for DolphinScheduler's task environment</td>\n<td><code>/usr/local/openjdk-8</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.HIVE_HOME</code></td>\n<td>Set <code>HIVE_HOME</code> for DolphinScheduler's task environment</td>\n<td><code>/opt/soft/hive</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.FLINK_HOME</code></td>\n<td>Set <code>FLINK_HOME</code> for DolphinScheduler's task environment</td>\n<td><code>/opt/soft/flink</code></td>\n</tr>\n<tr>\n<td><code>common.configmap.DATAX_HOME</code></td>\n<td>Set <code>DATAX_HOME</code> for DolphinScheduler's task environment</td>\n<td><code>/opt/soft/datax</code></td>\n</tr>\n<tr>\n<td><code>common.sharedStoragePersistence.enabled</code></td>\n<td>Set <code>common.sharedStoragePersistence.enabled</code> to <code>true</code> to mount a shared storage volume for Hadoop, Spark binary and etc</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>common.sharedStoragePersistence.mountPath</code></td>\n<td>The mount path for the shared storage volume</td>\n<td><code>/opt/soft</code></td>\n</tr>\n<tr>\n<td><code>common.sharedStoragePersistence.accessModes</code></td>\n<td><code>PersistentVolumeClaim</code> access modes, must be <code>ReadWriteMany</code></td>\n<td><code>[ReadWriteMany]</code></td>\n</tr>\n<tr>\n<td><code>common.sharedStoragePersistence.storageClassName</code></td>\n<td>Shared Storage persistent volume storage class, must support the access mode: ReadWriteMany</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>common.sharedStoragePersistence.storage</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td><code>common.fsFileResourcePersistence.enabled</code></td>\n<td>Set <code>common.fsFileResourcePersistence.enabled</code> to <code>true</code> to mount a new file resource volume for <code>api</code> and <code>worker</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>common.fsFileResourcePersistence.accessModes</code></td>\n<td><code>PersistentVolumeClaim</code> access modes, must be <code>ReadWriteMany</code></td>\n<td><code>[ReadWriteMany]</code></td>\n</tr>\n<tr>\n<td><code>common.fsFileResourcePersistence.storageClassName</code></td>\n<td>Resource persistent volume storage class, must support the access mode: ReadWriteMany</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>common.fsFileResourcePersistence.storage</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>master.podManagementPolicy</code></td>\n<td>PodManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down</td>\n<td><code>Parallel</code></td>\n</tr>\n<tr>\n<td><code>master.replicas</code></td>\n<td>Replicas is the desired number of replicas of the given Template</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>master.annotations</code></td>\n<td>The <code>annotations</code> for master server</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>master.affinity</code></td>\n<td>If specified, the pod's scheduling constraints</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>master.nodeSelector</code></td>\n<td>NodeSelector is a selector which must be true for the pod to fit on a node</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>master.tolerations</code></td>\n<td>If specified, the pod's tolerations</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>master.resources</code></td>\n<td>The <code>resource</code> limit and request config for master server</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_SERVER_OPTS</code></td>\n<td>The jvm options for master server</td>\n<td><code>-Xms1g -Xmx1g -Xmn512m</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_EXEC_THREADS</code></td>\n<td>Master execute thread number to limit process instances</td>\n<td><code>100</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_EXEC_TASK_NUM</code></td>\n<td>Master execute task number in parallel per process instance</td>\n<td><code>20</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_DISPATCH_TASK_NUM</code></td>\n<td>Master dispatch task number per batch</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_HOST_SELECTOR</code></td>\n<td>Master host selector to select a suitable worker, optional values include Random, RoundRobin, LowerWeight</td>\n<td><code>LowerWeight</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_HEARTBEAT_INTERVAL</code></td>\n<td>Master heartbeat interval, the unit is second</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_TASK_COMMIT_RETRYTIMES</code></td>\n<td>Master commit task retry times</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_TASK_COMMIT_INTERVAL</code></td>\n<td>master commit task interval, the unit is second</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_MAX_CPULOAD_AVG</code></td>\n<td>Master max cpuload avg, only higher than the system cpu load average, master server can schedule</td>\n<td><code>-1</code> (<code>the number of cpu cores * 2</code>)</td>\n</tr>\n<tr>\n<td><code>master.configmap.MASTER_RESERVED_MEMORY</code></td>\n<td>Master reserved memory, only lower than system available memory, master server can schedule, the unit is G</td>\n<td><code>0.3</code></td>\n</tr>\n<tr>\n<td><code>master.livenessProbe.enabled</code></td>\n<td>Turn on and off liveness probe</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>master.livenessProbe.initialDelaySeconds</code></td>\n<td>Delay before liveness probe is initiated</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>master.livenessProbe.periodSeconds</code></td>\n<td>How often to perform the probe</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>master.livenessProbe.timeoutSeconds</code></td>\n<td>When the probe times out</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>master.livenessProbe.failureThreshold</code></td>\n<td>Minimum consecutive successes for the probe</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>master.livenessProbe.successThreshold</code></td>\n<td>Minimum consecutive failures for the probe</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>master.readinessProbe.enabled</code></td>\n<td>Turn on and off readiness probe</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>master.readinessProbe.initialDelaySeconds</code></td>\n<td>Delay before readiness probe is initiated</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>master.readinessProbe.periodSeconds</code></td>\n<td>How often to perform the probe</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>master.readinessProbe.timeoutSeconds</code></td>\n<td>When the probe times out</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>master.readinessProbe.failureThreshold</code></td>\n<td>Minimum consecutive successes for the probe</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>master.readinessProbe.successThreshold</code></td>\n<td>Minimum consecutive failures for the probe</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>master.persistentVolumeClaim.enabled</code></td>\n<td>Set <code>master.persistentVolumeClaim.enabled</code> to <code>true</code> to mount a new volume for <code>master</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>master.persistentVolumeClaim.accessModes</code></td>\n<td><code>PersistentVolumeClaim</code> access modes</td>\n<td><code>[ReadWriteOnce]</code></td>\n</tr>\n<tr>\n<td><code>master.persistentVolumeClaim.storageClassName</code></td>\n<td><code>Master</code> logs data persistent volume storage class. If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>master.persistentVolumeClaim.storage</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>worker.podManagementPolicy</code></td>\n<td>PodManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down</td>\n<td><code>Parallel</code></td>\n</tr>\n<tr>\n<td><code>worker.replicas</code></td>\n<td>Replicas is the desired number of replicas of the given Template</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>worker.annotations</code></td>\n<td>The <code>annotations</code> for worker server</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>worker.affinity</code></td>\n<td>If specified, the pod's scheduling constraints</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>worker.nodeSelector</code></td>\n<td>NodeSelector is a selector which must be true for the pod to fit on a node</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>worker.tolerations</code></td>\n<td>If specified, the pod's tolerations</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>worker.resources</code></td>\n<td>The <code>resource</code> limit and request config for worker server</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>worker.configmap.LOGGER_SERVER_OPTS</code></td>\n<td>The jvm options for logger server</td>\n<td><code>-Xms512m -Xmx512m -Xmn256m</code></td>\n</tr>\n<tr>\n<td><code>worker.configmap.WORKER_SERVER_OPTS</code></td>\n<td>The jvm options for worker server</td>\n<td><code>-Xms1g -Xmx1g -Xmn512m</code></td>\n</tr>\n<tr>\n<td><code>worker.configmap.WORKER_EXEC_THREADS</code></td>\n<td>Worker execute thread number to limit task instances</td>\n<td><code>100</code></td>\n</tr>\n<tr>\n<td><code>worker.configmap.WORKER_HEARTBEAT_INTERVAL</code></td>\n<td>Worker heartbeat interval, the unit is second</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>worker.configmap.WORKER_MAX_CPULOAD_AVG</code></td>\n<td>Worker max cpuload avg, only higher than the system cpu load average, worker server can be dispatched tasks</td>\n<td><code>-1</code> (<code>the number of cpu cores * 2</code>)</td>\n</tr>\n<tr>\n<td><code>worker.configmap.WORKER_RESERVED_MEMORY</code></td>\n<td>Worker reserved memory, only lower than system available memory, worker server can be dispatched tasks, the unit is G</td>\n<td><code>0.3</code></td>\n</tr>\n<tr>\n<td><code>worker.configmap.WORKER_GROUPS</code></td>\n<td>Worker groups</td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td><code>worker.livenessProbe.enabled</code></td>\n<td>Turn on and off liveness probe</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>worker.livenessProbe.initialDelaySeconds</code></td>\n<td>Delay before liveness probe is initiated</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>worker.livenessProbe.periodSeconds</code></td>\n<td>How often to perform the probe</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>worker.livenessProbe.timeoutSeconds</code></td>\n<td>When the probe times out</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>worker.livenessProbe.failureThreshold</code></td>\n<td>Minimum consecutive successes for the probe</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>worker.livenessProbe.successThreshold</code></td>\n<td>Minimum consecutive failures for the probe</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>worker.readinessProbe.enabled</code></td>\n<td>Turn on and off readiness probe</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>worker.readinessProbe.initialDelaySeconds</code></td>\n<td>Delay before readiness probe is initiated</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>worker.readinessProbe.periodSeconds</code></td>\n<td>How often to perform the probe</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>worker.readinessProbe.timeoutSeconds</code></td>\n<td>When the probe times out</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>worker.readinessProbe.failureThreshold</code></td>\n<td>Minimum consecutive successes for the probe</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>worker.readinessProbe.successThreshold</code></td>\n<td>Minimum consecutive failures for the probe</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.enabled</code></td>\n<td>Set <code>worker.persistentVolumeClaim.enabled</code> to <code>true</code> to enable <code>persistentVolumeClaim</code> for <code>worker</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.dataPersistentVolume.enabled</code></td>\n<td>Set <code>worker.persistentVolumeClaim.dataPersistentVolume.enabled</code> to <code>true</code> to mount a data volume for <code>worker</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.dataPersistentVolume.accessModes</code></td>\n<td><code>PersistentVolumeClaim</code> access modes</td>\n<td><code>[ReadWriteOnce]</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.dataPersistentVolume.storageClassName</code></td>\n<td><code>Worker</code> data persistent volume storage class. If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.dataPersistentVolume.storage</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.logsPersistentVolume.enabled</code></td>\n<td>Set <code>worker.persistentVolumeClaim.logsPersistentVolume.enabled</code> to <code>true</code> to mount a logs volume for <code>worker</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.logsPersistentVolume.accessModes</code></td>\n<td><code>PersistentVolumeClaim</code> access modes</td>\n<td><code>[ReadWriteOnce]</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.logsPersistentVolume.storageClassName</code></td>\n<td><code>Worker</code> logs data persistent volume storage class. If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>worker.persistentVolumeClaim.logsPersistentVolume.storage</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>alert.replicas</code></td>\n<td>Replicas is the desired number of replicas of the given Template</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>alert.strategy.type</code></td>\n<td>Type of deployment. Can be &quot;Recreate&quot; or &quot;RollingUpdate&quot;</td>\n<td><code>RollingUpdate</code></td>\n</tr>\n<tr>\n<td><code>alert.strategy.rollingUpdate.maxSurge</code></td>\n<td>The maximum number of pods that can be scheduled above the desired number of pods</td>\n<td><code>25%</code></td>\n</tr>\n<tr>\n<td><code>alert.strategy.rollingUpdate.maxUnavailable</code></td>\n<td>The maximum number of pods that can be unavailable during the update</td>\n<td><code>25%</code></td>\n</tr>\n<tr>\n<td><code>alert.annotations</code></td>\n<td>The <code>annotations</code> for alert server</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>alert.affinity</code></td>\n<td>If specified, the pod's scheduling constraints</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>alert.nodeSelector</code></td>\n<td>NodeSelector is a selector which must be true for the pod to fit on a node</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>alert.tolerations</code></td>\n<td>If specified, the pod's tolerations</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>alert.resources</code></td>\n<td>The <code>resource</code> limit and request config for alert server</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.ALERT_SERVER_OPTS</code></td>\n<td>The jvm options for alert server</td>\n<td><code>-Xms512m -Xmx512m -Xmn256m</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.XLS_FILE_PATH</code></td>\n<td>XLS file path</td>\n<td><code>/tmp/xls</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.MAIL_SERVER_HOST</code></td>\n<td>Mail <code>SERVER HOST </code></td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.MAIL_SERVER_PORT</code></td>\n<td>Mail <code>SERVER PORT</code></td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.MAIL_SENDER</code></td>\n<td>Mail <code>SENDER</code></td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.MAIL_USER</code></td>\n<td>Mail <code>USER</code></td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.MAIL_PASSWD</code></td>\n<td>Mail <code>PASSWORD</code></td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.MAIL_SMTP_STARTTLS_ENABLE</code></td>\n<td>Mail <code>SMTP STARTTLS</code> enable</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.MAIL_SMTP_SSL_ENABLE</code></td>\n<td>Mail <code>SMTP SSL</code> enable</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.MAIL_SMTP_SSL_TRUST</code></td>\n<td>Mail <code>SMTP SSL TRUST</code></td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.ENTERPRISE_WECHAT_ENABLE</code></td>\n<td><code>Enterprise Wechat</code> enable</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.ENTERPRISE_WECHAT_CORP_ID</code></td>\n<td><code>Enterprise Wechat</code> corp id</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.ENTERPRISE_WECHAT_SECRET</code></td>\n<td><code>Enterprise Wechat</code> secret</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.ENTERPRISE_WECHAT_AGENT_ID</code></td>\n<td><code>Enterprise Wechat</code> agent id</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.configmap.ENTERPRISE_WECHAT_USERS</code></td>\n<td><code>Enterprise Wechat</code> users</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>alert.livenessProbe.enabled</code></td>\n<td>Turn on and off liveness probe</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>alert.livenessProbe.initialDelaySeconds</code></td>\n<td>Delay before liveness probe is initiated</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>alert.livenessProbe.periodSeconds</code></td>\n<td>How often to perform the probe</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>alert.livenessProbe.timeoutSeconds</code></td>\n<td>When the probe times out</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>alert.livenessProbe.failureThreshold</code></td>\n<td>Minimum consecutive successes for the probe</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>alert.livenessProbe.successThreshold</code></td>\n<td>Minimum consecutive failures for the probe</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>alert.readinessProbe.enabled</code></td>\n<td>Turn on and off readiness probe</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>alert.readinessProbe.initialDelaySeconds</code></td>\n<td>Delay before readiness probe is initiated</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>alert.readinessProbe.periodSeconds</code></td>\n<td>How often to perform the probe</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>alert.readinessProbe.timeoutSeconds</code></td>\n<td>When the probe times out</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>alert.readinessProbe.failureThreshold</code></td>\n<td>Minimum consecutive successes for the probe</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>alert.readinessProbe.successThreshold</code></td>\n<td>Minimum consecutive failures for the probe</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>alert.persistentVolumeClaim.enabled</code></td>\n<td>Set <code>alert.persistentVolumeClaim.enabled</code> to <code>true</code> to mount a new volume for <code>alert</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>alert.persistentVolumeClaim.accessModes</code></td>\n<td><code>PersistentVolumeClaim</code> access modes</td>\n<td><code>[ReadWriteOnce]</code></td>\n</tr>\n<tr>\n<td><code>alert.persistentVolumeClaim.storageClassName</code></td>\n<td><code>Alert</code> logs data persistent volume storage class. If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>alert.persistentVolumeClaim.storage</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>api.replicas</code></td>\n<td>Replicas is the desired number of replicas of the given Template</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>api.strategy.type</code></td>\n<td>Type of deployment. Can be &quot;Recreate&quot; or &quot;RollingUpdate&quot;</td>\n<td><code>RollingUpdate</code></td>\n</tr>\n<tr>\n<td><code>api.strategy.rollingUpdate.maxSurge</code></td>\n<td>The maximum number of pods that can be scheduled above the desired number of pods</td>\n<td><code>25%</code></td>\n</tr>\n<tr>\n<td><code>api.strategy.rollingUpdate.maxUnavailable</code></td>\n<td>The maximum number of pods that can be unavailable during the update</td>\n<td><code>25%</code></td>\n</tr>\n<tr>\n<td><code>api.annotations</code></td>\n<td>The <code>annotations</code> for api server</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>api.affinity</code></td>\n<td>If specified, the pod's scheduling constraints</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>api.nodeSelector</code></td>\n<td>NodeSelector is a selector which must be true for the pod to fit on a node</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>api.tolerations</code></td>\n<td>If specified, the pod's tolerations</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>api.resources</code></td>\n<td>The <code>resource</code> limit and request config for api server</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>api.configmap.API_SERVER_OPTS</code></td>\n<td>The jvm options for api server</td>\n<td><code>-Xms512m -Xmx512m -Xmn256m</code></td>\n</tr>\n<tr>\n<td><code>api.livenessProbe.enabled</code></td>\n<td>Turn on and off liveness probe</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>api.livenessProbe.initialDelaySeconds</code></td>\n<td>Delay before liveness probe is initiated</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>api.livenessProbe.periodSeconds</code></td>\n<td>How often to perform the probe</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>api.livenessProbe.timeoutSeconds</code></td>\n<td>When the probe times out</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>api.livenessProbe.failureThreshold</code></td>\n<td>Minimum consecutive successes for the probe</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>api.livenessProbe.successThreshold</code></td>\n<td>Minimum consecutive failures for the probe</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>api.readinessProbe.enabled</code></td>\n<td>Turn on and off readiness probe</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>api.readinessProbe.initialDelaySeconds</code></td>\n<td>Delay before readiness probe is initiated</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>api.readinessProbe.periodSeconds</code></td>\n<td>How often to perform the probe</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>api.readinessProbe.timeoutSeconds</code></td>\n<td>When the probe times out</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>api.readinessProbe.failureThreshold</code></td>\n<td>Minimum consecutive successes for the probe</td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><code>api.readinessProbe.successThreshold</code></td>\n<td>Minimum consecutive failures for the probe</td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><code>api.persistentVolumeClaim.enabled</code></td>\n<td>Set <code>api.persistentVolumeClaim.enabled</code> to <code>true</code> to mount a new volume for <code>api</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>api.persistentVolumeClaim.accessModes</code></td>\n<td><code>PersistentVolumeClaim</code> access modes</td>\n<td><code>[ReadWriteOnce]</code></td>\n</tr>\n<tr>\n<td><code>api.persistentVolumeClaim.storageClassName</code></td>\n<td><code>api</code> logs data persistent volume storage class. If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>api.persistentVolumeClaim.storage</code></td>\n<td><code>PersistentVolumeClaim</code> size</td>\n<td><code>20Gi</code></td>\n</tr>\n<tr>\n<td><code>api.service.type</code></td>\n<td><code>type</code> determines how the Service is exposed. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer</td>\n<td><code>ClusterIP</code></td>\n</tr>\n<tr>\n<td><code>api.service.clusterIP</code></td>\n<td><code>clusterIP</code> is the IP address of the service and is usually assigned randomly by the master</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>api.service.nodePort</code></td>\n<td><code>nodePort</code> is the port on each node on which this service is exposed when type=NodePort</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>api.service.externalIPs</code></td>\n<td><code>externalIPs</code> is a list of IP addresses for which nodes in the cluster will also accept traffic for this service</td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td><code>api.service.externalName</code></td>\n<td><code>externalName</code> is the external reference that kubedns or equivalent will return as a CNAME record for this service</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>api.service.loadBalancerIP</code></td>\n<td><code>loadBalancerIP</code> when service.type is LoadBalancer. LoadBalancer will get created with the IP specified in this field</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td><code>api.service.annotations</code></td>\n<td><code>annotations</code> may need to be set when service.type is LoadBalancer</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>ingress.enabled</code></td>\n<td>Enable ingress</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>ingress.host</code></td>\n<td>Ingress host</td>\n<td><code>dolphinscheduler.org</code></td>\n</tr>\n<tr>\n<td><code>ingress.path</code></td>\n<td>Ingress path</td>\n<td><code>/dolphinscheduler</code></td>\n</tr>\n<tr>\n<td><code>ingress.tls.enabled</code></td>\n<td>Enable ingress tls</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>ingress.tls.secretName</code></td>\n<td>Ingress tls secret name</td>\n<td><code>dolphinscheduler-tls</code></td>\n</tr>\n</tbody>\n</table>\n",
  "location": [
    "Installation",
    "Kubernetes Deployment"
  ],
  "time": "2023-06-05",
  "structure": [
    {
      "title": "Prerequisites",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Python 2 pip and custom requirements.txt?",
          "children": [],
          "anchor": "how-to-support-python-2-pip-and-custom-requirements.txt?"
        },
        {
          "title": "How to support Python 3?",
          "children": [],
          "anchor": "how-to-support-python-3?"
        },
        {
          "title": "How to support Hadoop, Spark, Flink, Hive or DataX?",
          "children": [],
          "anchor": "how-to-support-hadoop,-spark,-flink,-hive-or-datax?"
        },
        {
          "title": "How to support Spark 3?",
          "children": [],
          "anchor": "how-to-support-spark-3?"
        },
        {
          "title": "How to support shared storage between Master, Worker and Api server?",
          "children": [],
          "anchor": "how-to-support-shared-storage-between-master,-worker-and-api-server?"
        },
        {
          "title": "How to support local file resource storage instead of HDFS and S3?",
          "children": [],
          "anchor": "how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?"
        },
        {
          "title": "How to support S3 resource storage like MinIO?",
          "children": [],
          "anchor": "how-to-support-s3-resource-storage-like-minio?"
        },
        {
          "title": "How to configure SkyWalking?",
          "children": [],
          "anchor": "how-to-configure-skywalking?"
        }
      ],
      "anchor": "prerequisites"
    },
    {
      "title": "Installing the Chart",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Python 2 pip and custom requirements.txt?",
          "children": [],
          "anchor": "how-to-support-python-2-pip-and-custom-requirements.txt?"
        },
        {
          "title": "How to support Python 3?",
          "children": [],
          "anchor": "how-to-support-python-3?"
        },
        {
          "title": "How to support Hadoop, Spark, Flink, Hive or DataX?",
          "children": [],
          "anchor": "how-to-support-hadoop,-spark,-flink,-hive-or-datax?"
        },
        {
          "title": "How to support Spark 3?",
          "children": [],
          "anchor": "how-to-support-spark-3?"
        },
        {
          "title": "How to support shared storage between Master, Worker and Api server?",
          "children": [],
          "anchor": "how-to-support-shared-storage-between-master,-worker-and-api-server?"
        },
        {
          "title": "How to support local file resource storage instead of HDFS and S3?",
          "children": [],
          "anchor": "how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?"
        },
        {
          "title": "How to support S3 resource storage like MinIO?",
          "children": [],
          "anchor": "how-to-support-s3-resource-storage-like-minio?"
        },
        {
          "title": "How to configure SkyWalking?",
          "children": [],
          "anchor": "how-to-configure-skywalking?"
        }
      ],
      "anchor": "installing-the-chart"
    },
    {
      "title": "Access DolphinScheduler UI",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Python 2 pip and custom requirements.txt?",
          "children": [],
          "anchor": "how-to-support-python-2-pip-and-custom-requirements.txt?"
        },
        {
          "title": "How to support Python 3?",
          "children": [],
          "anchor": "how-to-support-python-3?"
        },
        {
          "title": "How to support Hadoop, Spark, Flink, Hive or DataX?",
          "children": [],
          "anchor": "how-to-support-hadoop,-spark,-flink,-hive-or-datax?"
        },
        {
          "title": "How to support Spark 3?",
          "children": [],
          "anchor": "how-to-support-spark-3?"
        },
        {
          "title": "How to support shared storage between Master, Worker and Api server?",
          "children": [],
          "anchor": "how-to-support-shared-storage-between-master,-worker-and-api-server?"
        },
        {
          "title": "How to support local file resource storage instead of HDFS and S3?",
          "children": [],
          "anchor": "how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?"
        },
        {
          "title": "How to support S3 resource storage like MinIO?",
          "children": [],
          "anchor": "how-to-support-s3-resource-storage-like-minio?"
        },
        {
          "title": "How to configure SkyWalking?",
          "children": [],
          "anchor": "how-to-configure-skywalking?"
        }
      ],
      "anchor": "access-dolphinscheduler-ui"
    },
    {
      "title": "Uninstalling the Chart",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Python 2 pip and custom requirements.txt?",
          "children": [],
          "anchor": "how-to-support-python-2-pip-and-custom-requirements.txt?"
        },
        {
          "title": "How to support Python 3?",
          "children": [],
          "anchor": "how-to-support-python-3?"
        },
        {
          "title": "How to support Hadoop, Spark, Flink, Hive or DataX?",
          "children": [],
          "anchor": "how-to-support-hadoop,-spark,-flink,-hive-or-datax?"
        },
        {
          "title": "How to support Spark 3?",
          "children": [],
          "anchor": "how-to-support-spark-3?"
        },
        {
          "title": "How to support shared storage between Master, Worker and Api server?",
          "children": [],
          "anchor": "how-to-support-shared-storage-between-master,-worker-and-api-server?"
        },
        {
          "title": "How to support local file resource storage instead of HDFS and S3?",
          "children": [],
          "anchor": "how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?"
        },
        {
          "title": "How to support S3 resource storage like MinIO?",
          "children": [],
          "anchor": "how-to-support-s3-resource-storage-like-minio?"
        },
        {
          "title": "How to configure SkyWalking?",
          "children": [],
          "anchor": "how-to-configure-skywalking?"
        }
      ],
      "anchor": "uninstalling-the-chart"
    },
    {
      "title": "Configuration",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Python 2 pip and custom requirements.txt?",
          "children": [],
          "anchor": "how-to-support-python-2-pip-and-custom-requirements.txt?"
        },
        {
          "title": "How to support Python 3?",
          "children": [],
          "anchor": "how-to-support-python-3?"
        },
        {
          "title": "How to support Hadoop, Spark, Flink, Hive or DataX?",
          "children": [],
          "anchor": "how-to-support-hadoop,-spark,-flink,-hive-or-datax?"
        },
        {
          "title": "How to support Spark 3?",
          "children": [],
          "anchor": "how-to-support-spark-3?"
        },
        {
          "title": "How to support shared storage between Master, Worker and Api server?",
          "children": [],
          "anchor": "how-to-support-shared-storage-between-master,-worker-and-api-server?"
        },
        {
          "title": "How to support local file resource storage instead of HDFS and S3?",
          "children": [],
          "anchor": "how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?"
        },
        {
          "title": "How to support S3 resource storage like MinIO?",
          "children": [],
          "anchor": "how-to-support-s3-resource-storage-like-minio?"
        },
        {
          "title": "How to configure SkyWalking?",
          "children": [],
          "anchor": "how-to-configure-skywalking?"
        }
      ],
      "anchor": "configuration"
    },
    {
      "title": "Support Matrix",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Python 2 pip and custom requirements.txt?",
          "children": [],
          "anchor": "how-to-support-python-2-pip-and-custom-requirements.txt?"
        },
        {
          "title": "How to support Python 3?",
          "children": [],
          "anchor": "how-to-support-python-3?"
        },
        {
          "title": "How to support Hadoop, Spark, Flink, Hive or DataX?",
          "children": [],
          "anchor": "how-to-support-hadoop,-spark,-flink,-hive-or-datax?"
        },
        {
          "title": "How to support Spark 3?",
          "children": [],
          "anchor": "how-to-support-spark-3?"
        },
        {
          "title": "How to support shared storage between Master, Worker and Api server?",
          "children": [],
          "anchor": "how-to-support-shared-storage-between-master,-worker-and-api-server?"
        },
        {
          "title": "How to support local file resource storage instead of HDFS and S3?",
          "children": [],
          "anchor": "how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?"
        },
        {
          "title": "How to support S3 resource storage like MinIO?",
          "children": [],
          "anchor": "how-to-support-s3-resource-storage-like-minio?"
        },
        {
          "title": "How to configure SkyWalking?",
          "children": [],
          "anchor": "how-to-configure-skywalking?"
        }
      ],
      "anchor": "support-matrix"
    },
    {
      "title": "FAQ",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Python 2 pip and custom requirements.txt?",
          "children": [],
          "anchor": "how-to-support-python-2-pip-and-custom-requirements.txt?"
        },
        {
          "title": "How to support Python 3?",
          "children": [],
          "anchor": "how-to-support-python-3?"
        },
        {
          "title": "How to support Hadoop, Spark, Flink, Hive or DataX?",
          "children": [],
          "anchor": "how-to-support-hadoop,-spark,-flink,-hive-or-datax?"
        },
        {
          "title": "How to support Spark 3?",
          "children": [],
          "anchor": "how-to-support-spark-3?"
        },
        {
          "title": "How to support shared storage between Master, Worker and Api server?",
          "children": [],
          "anchor": "how-to-support-shared-storage-between-master,-worker-and-api-server?"
        },
        {
          "title": "How to support local file resource storage instead of HDFS and S3?",
          "children": [],
          "anchor": "how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?"
        },
        {
          "title": "How to support S3 resource storage like MinIO?",
          "children": [],
          "anchor": "how-to-support-s3-resource-storage-like-minio?"
        },
        {
          "title": "How to configure SkyWalking?",
          "children": [],
          "anchor": "how-to-configure-skywalking?"
        }
      ],
      "anchor": "faq"
    },
    {
      "title": "Appendix-Configuration",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Python 2 pip and custom requirements.txt?",
          "children": [],
          "anchor": "how-to-support-python-2-pip-and-custom-requirements.txt?"
        },
        {
          "title": "How to support Python 3?",
          "children": [],
          "anchor": "how-to-support-python-3?"
        },
        {
          "title": "How to support Hadoop, Spark, Flink, Hive or DataX?",
          "children": [],
          "anchor": "how-to-support-hadoop,-spark,-flink,-hive-or-datax?"
        },
        {
          "title": "How to support Spark 3?",
          "children": [],
          "anchor": "how-to-support-spark-3?"
        },
        {
          "title": "How to support shared storage between Master, Worker and Api server?",
          "children": [],
          "anchor": "how-to-support-shared-storage-between-master,-worker-and-api-server?"
        },
        {
          "title": "How to support local file resource storage instead of HDFS and S3?",
          "children": [],
          "anchor": "how-to-support-local-file-resource-storage-instead-of-hdfs-and-s3?"
        },
        {
          "title": "How to support S3 resource storage like MinIO?",
          "children": [],
          "anchor": "how-to-support-s3-resource-storage-like-minio?"
        },
        {
          "title": "How to configure SkyWalking?",
          "children": [],
          "anchor": "how-to-configure-skywalking?"
        }
      ],
      "anchor": "appendix-configuration"
    }
  ],
  "title": "QuickStart in Kubernetes",
  "link": "/guide/installation/kubernetes"
}