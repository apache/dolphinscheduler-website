{
  "__html": "<h1 id=\"docker-quick-start\">Docker Quick Start</h1>\n<p>There are three ways to start DolphinScheduler with Docker</p>\n<ul>\n<li><a href=\"#using-standalone-server-docker-image\">Standalone-server</a> is the way you find if you just want to start and try DolphinScheduler as a beginner.</li>\n<li><a href=\"#using-docker-compose-to-start-server\">docker-compose</a> is for some who want to deploy DolphinScheduler in small or event middle scale workflows in their daily work.</li>\n<li><a href=\"#using-exists-postgresql-zookeeper\">Using exists postgresql and zookeeper server</a> is for users who want to reuse the database or zookeeper server already exists.</li>\n</ul>\n<h2 id=\"prepare\">Prepare</h2>\n<p>Need to install <a href=\"https://docs.docker.com/engine/install/\">Docker</a> 1.13.1+ and <a href=\"https://docs.docker.com/compose/\">Docker Compose</a> 1.28.0+\nbefore starting DolphinScheduler with Docker</p>\n<h2 id=\"start-server\">Start Server</h2>\n<h3 id=\"using-standalone-server-docker-image\">Using standalone-server Docker Image</h3>\n<p>Start DolphinScheduler with standalone-server Docker images is the easiest way to experience and explode it. In this way,\nyou can learn DolphinScheduler's concepts and usage, with minimal cost.</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">DOLPHINSCHEDULER_VERSION=3.2.2</span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">docker run --name dolphinscheduler-standalone-server -p 12345:12345 -p 25333:25333 -d apache/dolphinscheduler-standalone-server:<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">${DOLPHINSCHEDULER_VERSION}</span>&quot;</span></span>\n</code></pre>\n<blockquote>\n<p>Note: Do not use apache/dolphinscheduler-standalone-server Docker image in production, it should only for you to taste\nDolphinScheduler at the first time. Not only because it runs all services in one single process, but also it uses H2 as\nits database which will lose metadata after it stops (could be changed to another database to avoid it). In addition,\napache/dolphinscheduler-standalone-server only contains DolphinScheduler core services, some tasks such as Spark and Flink,\nrequire external components or environment to run it.</p>\n</blockquote>\n<h3 id=\"using-docker-compose-to-start-server\">Using docker-compose to Start Server</h3>\n<p>The difference between start services by docker-compose and standalone-server are servers running in one single process\nor not. Services start with docker-compose running in separate containers, as well as different processes. Metadata could\nbe stored on disks after you change docker-compose configuration, and it is robust and stable for someone who wants to run\nDolphinScheduler in a long term. You have to install <a href=\"https://docs.docker.com/compose/install/\">docker-compose</a> before you\nstart servers.</p>\n<p>After complete the installation, get the <code>docker-compose.yaml</code> file from <a href=\"https://dolphinscheduler.apache.org/en-us/download/3.2.2\">download page</a>\nform its source package, and make sure you get the right version. After download the package, you can run the commands as below.</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">DOLPHINSCHEDULER_VERSION=3.2.2</span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">tar -zxf apache-dolphinscheduler-<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">${DOLPHINSCHEDULER_VERSION}</span>&quot;</span>-src.tar.gz</span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Going to docker-compose<span class=\"hljs-string\">&#x27;s location</span></span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"><span class=\"hljs-string\">For Mac or Linux users</span></span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"hljs-string\">cd apache-dolphinscheduler-&quot;${DOLPHINSCHEDULER_VERSION}&quot;-src/deploy/docker</span></span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"><span class=\"hljs-string\">For Windows users, you should run command `cd apache-dolphinscheduler-&quot;${DOLPHINSCHEDULER_VERSION}&quot;-src\\deploy\\docker`</span></span>\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\"><span class=\"hljs-string\">Initialize the database, use profile schema</span></span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"hljs-string\">docker-compose --profile schema up -d</span></span>\n<span class=\"hljs-meta prompt_\">\n# </span><span class=\"language-bash\"><span class=\"hljs-string\">start all dolphinscheduler server, use profile all</span></span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"hljs-string\">docker-compose --profile all up -d</span></span>\n</code></pre>\n<blockquote>\n<p>NOTES: After installed docker-compose, it is recommended to modify some configurations for better experience. We highly\nrecommended modify docker daemon memory up to 4 GB, see <a href=\"https://stackoverflow.com/a/44533437/7152658\">How to assign more memory to docker container</a>\nfor more detail.</p>\n<p>It will not only start DolphinScheduler servers but also some others necessary services like PostgreSQL(with <code>root</code>\nas user, <code>root</code> as password and <code>dolphinscheduler</code> as database) and ZooKeeper when starting with docker-compose.</p>\n</blockquote>\n<h3 id=\"using-exists-postgresql-zookeeper\">Using Exists PostgreSQL ZooKeeper</h3>\n<p><a href=\"#using-docker-compose-to-start-server\">Using docker-compose to start server</a> will create new a database and the ZooKeeper\ncontainer when it up. You could start DolphinScheduler server separately if you want to reuse your exists services.</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">DOLPHINSCHEDULER_VERSION=3.2.2</span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Initialize the database, make sure database &lt;DATABASE&gt; already exists</span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">docker run -d --name dolphinscheduler-tools \\\n    -e DATABASE=<span class=\"hljs-string\">&quot;postgresql&quot;</span> \\\n    -e SPRING_DATASOURCE_URL=<span class=\"hljs-string\">&quot;jdbc:postgresql://localhost:5432/&lt;DATABASE&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_USERNAME=<span class=\"hljs-string\">&quot;&lt;USER&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_PASSWORD=<span class=\"hljs-string\">&quot;&lt;PASSWORD&gt;&quot;</span> \\\n    -e SPRING_JACKSON_TIME_ZONE=<span class=\"hljs-string\">&quot;UTC&quot;</span> \\\n    --net host \\\n    apache/dolphinscheduler-tools:<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">${DOLPHINSCHEDULER_VERSION}</span>&quot;</span> tools/bin/upgrade-schema.sh</span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Starting DolphinScheduler service</span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">docker run -d --name dolphinscheduler-master \\\n    -e DATABASE=<span class=\"hljs-string\">&quot;postgresql&quot;</span> \\\n    -e SPRING_DATASOURCE_URL=<span class=\"hljs-string\">&quot;jdbc:postgresql://localhost:5432/&lt;DATABASE&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_USERNAME=<span class=\"hljs-string\">&quot;&lt;USER&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_PASSWORD=<span class=\"hljs-string\">&quot;&lt;PASSWORD&gt;&quot;</span> \\\n    -e SPRING_JACKSON_TIME_ZONE=<span class=\"hljs-string\">&quot;UTC&quot;</span> \\\n    -e REGISTRY_ZOOKEEPER_CONNECT_STRING=<span class=\"hljs-string\">&quot;localhost:2181&quot;</span> \\\n    --net host \\\n    -d apache/dolphinscheduler-master:<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">${DOLPHINSCHEDULER_VERSION}</span>&quot;</span></span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">docker run -d --name dolphinscheduler-worker \\\n    -e DATABASE=<span class=\"hljs-string\">&quot;postgresql&quot;</span> \\\n    -e SPRING_DATASOURCE_URL=<span class=\"hljs-string\">&quot;jdbc:postgresql://localhost:5432/&lt;DATABASE&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_USERNAME=<span class=\"hljs-string\">&quot;&lt;USER&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_PASSWORD=<span class=\"hljs-string\">&quot;&lt;PASSWORD&gt;&quot;</span> \\\n    -e SPRING_JACKSON_TIME_ZONE=<span class=\"hljs-string\">&quot;UTC&quot;</span> \\\n    -e REGISTRY_ZOOKEEPER_CONNECT_STRING=<span class=\"hljs-string\">&quot;localhost:2181&quot;</span> \\\n    --net host \\\n    -d apache/dolphinscheduler-worker:<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">${DOLPHINSCHEDULER_VERSION}</span>&quot;</span></span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">docker run -d --name dolphinscheduler-api \\\n    -e DATABASE=<span class=\"hljs-string\">&quot;postgresql&quot;</span> \\\n    -e SPRING_DATASOURCE_URL=<span class=\"hljs-string\">&quot;jdbc:postgresql://localhost:5432/&lt;DATABASE&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_USERNAME=<span class=\"hljs-string\">&quot;&lt;USER&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_PASSWORD=<span class=\"hljs-string\">&quot;&lt;PASSWORD&gt;&quot;</span> \\\n    -e SPRING_JACKSON_TIME_ZONE=<span class=\"hljs-string\">&quot;UTC&quot;</span> \\\n    -e REGISTRY_ZOOKEEPER_CONNECT_STRING=<span class=\"hljs-string\">&quot;localhost:2181&quot;</span> \\\n    --net host \\\n    -d apache/dolphinscheduler-api:<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">${DOLPHINSCHEDULER_VERSION}</span>&quot;</span></span>\n<span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">docker run -d --name dolphinscheduler-alert-server \\\n    -e DATABASE=<span class=\"hljs-string\">&quot;postgresql&quot;</span> \\\n    -e SPRING_DATASOURCE_URL=<span class=\"hljs-string\">&quot;jdbc:postgresql://localhost:5432/&lt;DATABASE&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_USERNAME=<span class=\"hljs-string\">&quot;&lt;USER&gt;&quot;</span> \\\n    -e SPRING_DATASOURCE_PASSWORD=<span class=\"hljs-string\">&quot;&lt;PASSWORD&gt;&quot;</span> \\\n    -e SPRING_JACKSON_TIME_ZONE=<span class=\"hljs-string\">&quot;UTC&quot;</span> \\\n    -e REGISTRY_ZOOKEEPER_CONNECT_STRING=<span class=\"hljs-string\">&quot;localhost:2181&quot;</span> \\\n    --net host \\\n    -d apache/dolphinscheduler-alert-server:<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">${DOLPHINSCHEDULER_VERSION}</span>&quot;</span></span>\n</code></pre>\n<blockquote>\n<p>Note: You should install and start <a href=\"https://www.postgresql.org/download/\">PostgreSQL</a>(8.2.15+) and <a href=\"https://zookeeper.apache.org/releases.html\">ZooKeeper</a>(3.8.0)\nby yourself if you want to use this way to start Dolphinscheduler, but you do not have those services</p>\n</blockquote>\n<h2 id=\"login-dolphinscheduler\">Login DolphinScheduler</h2>\n<p>You could access DolphinScheduler web UI by click <a href=\"http://localhost:12345/dolphinscheduler/ui\">http://localhost:12345/dolphinscheduler/ui</a>\nand use <code>admin</code> and <code>dolphinscheduler123</code> as default username and password in the login page.</p>\n<p><img src=\"/img/new_ui/dev/quick-start/login.png\" alt=\"login\"></p>\n<blockquote>\n<p>Note: If you start the services by the way <a href=\"#using-exists-postgresql-zookeeper\">using exists PostgreSQL ZooKeeper</a>, and\nstarting with multiple machine, you should change URL domain from <code>localhost</code> to IP or hostname the api server running.</p>\n</blockquote>\n<h2 id=\"change-environment-variable\">Change Environment Variable</h2>\n<p>You can modify some environment variables to change configurations when you are starting servers through Docker. We have\nan example in <a href=\"#using-exists-postgresql-zookeeper\">using exists PostgreSQL ZooKeeper</a> to change database and ZooKeeper configurations,\nand you could find all environment variables in <a href=\"https://github.com/apache/dolphinscheduler/blob/3.2.2/script/env/dolphinscheduler_env.sh\">all environment variables</a> <!-- markdown-link-check-disable-line -->\nand change them if you want.</p>\n",
  "location": [
    "Quick Start",
    "Docker Deployment"
  ],
  "time": "2024-7-16",
  "structure": [
    {
      "title": "Prepare",
      "children": [
        {
          "title": "Using standalone-server Docker Image",
          "children": [],
          "anchor": "using-standalone-server-docker-image"
        },
        {
          "title": "Using docker-compose to Start Server",
          "children": [],
          "anchor": "using-docker-compose-to-start-server"
        },
        {
          "title": "Using Exists PostgreSQL ZooKeeper",
          "children": [],
          "anchor": "using-exists-postgresql-zookeeper"
        }
      ],
      "anchor": "prepare"
    },
    {
      "title": "Start Server",
      "children": [
        {
          "title": "Using standalone-server Docker Image",
          "children": [],
          "anchor": "using-standalone-server-docker-image"
        },
        {
          "title": "Using docker-compose to Start Server",
          "children": [],
          "anchor": "using-docker-compose-to-start-server"
        },
        {
          "title": "Using Exists PostgreSQL ZooKeeper",
          "children": [],
          "anchor": "using-exists-postgresql-zookeeper"
        }
      ],
      "anchor": "start-server"
    },
    {
      "title": "Login DolphinScheduler",
      "children": [
        {
          "title": "Using standalone-server Docker Image",
          "children": [],
          "anchor": "using-standalone-server-docker-image"
        },
        {
          "title": "Using docker-compose to Start Server",
          "children": [],
          "anchor": "using-docker-compose-to-start-server"
        },
        {
          "title": "Using Exists PostgreSQL ZooKeeper",
          "children": [],
          "anchor": "using-exists-postgresql-zookeeper"
        }
      ],
      "anchor": "login-dolphinscheduler"
    },
    {
      "title": "Change Environment Variable",
      "children": [
        {
          "title": "Using standalone-server Docker Image",
          "children": [],
          "anchor": "using-standalone-server-docker-image"
        },
        {
          "title": "Using docker-compose to Start Server",
          "children": [],
          "anchor": "using-docker-compose-to-start-server"
        },
        {
          "title": "Using Exists PostgreSQL ZooKeeper",
          "children": [],
          "anchor": "using-exists-postgresql-zookeeper"
        }
      ],
      "anchor": "change-environment-variable"
    }
  ],
  "title": "Docker Quick Start",
  "link": "/guide/start/docker"
}