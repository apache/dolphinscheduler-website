{
  "__html": "<h1 id=\"stored-procedure\">Stored Procedure</h1>\n<ul>\n<li>Execute the stored procedure according to the selected DataSource.</li>\n</ul>\n<blockquote>\n<p>Drag from the <code>PROCEDURE</code> task node into the canvas, as shown in the figure below:</p>\n</blockquote>\n<p align=\"center\">\n   <img src=\"/img/procedure_edit.png\" width=\"80%\" />\n </p>\n<h2 id=\"task-parameters\">Task Parameters</h2>\n<table>\n<thead>\n<tr>\n<th><strong>Parameter</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Node Name</td>\n<td>Set the name of the task. Node names within a workflow definition are unique.</td>\n</tr>\n<tr>\n<td>Run flag</td>\n<td>Indicates whether the node can be scheduled normally. If it is not necessary to execute, you can turn on the prohibiting execution switch.</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Describes the function of this node.</td>\n</tr>\n<tr>\n<td>Task priority</td>\n<td>When the number of worker threads is insufficient, they are executed in order from high to low according to the priority, and they are executed according to the first-in, first-out principle when the priority is the same.</td>\n</tr>\n<tr>\n<td>Worker group</td>\n<td>The task is assigned to the machines in the worker group for execution. If Default is selected, a worker machine will be randomly selected for execution.</td>\n</tr>\n<tr>\n<td>Task group name</td>\n<td>The group in Resources, if not configured, it will not be used.</td>\n</tr>\n<tr>\n<td>Environment Name</td>\n<td>Configure the environment in which to run the script.</td>\n</tr>\n<tr>\n<td>Number of failed retries</td>\n<td>The number of times the task is resubmitted after failure. It supports drop-down and manual filling.</td>\n</tr>\n<tr>\n<td>Failure Retry Interval</td>\n<td>The time interval for resubmitting the task if the task fails. It supports drop-down and manual filling.</td>\n</tr>\n<tr>\n<td>Timeout alarm</td>\n<td>Check Timeout Alarm and Timeout Failure. When the task exceeds the &quot;timeout duration&quot;, an alarm email will be sent and the task execution will fail.</td>\n</tr>\n<tr>\n<td>DataSource</td>\n<td>The DataSource type of the stored procedure supports MySQL, POSTGRESQL, ORACLE.</td>\n</tr>\n<tr>\n<td>SQL Statement</td>\n<td>call a stored procedure, such as <code>call test(${in1},${out1});</code>.</td>\n</tr>\n<tr>\n<td>Custom parameters</td>\n<td>The custom parameter types of the stored procedure support <code>IN</code> and <code>OUT</code>, and the data types support: VARCHAR, INTEGER, LONG, FLOAT, DOUBLE, DATE, TIME, TIMESTAMP and BOOLEAN.</td>\n</tr>\n<tr>\n<td>Predecessor task</td>\n<td>Selecting the predecessor task of the current task will set the selected predecessor task as the upstream of the current task.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"remark\">Remark</h2>\n<ul>\n<li>\n<p>Prepare: Create a stored procedure in the database, such as:</p>\n<pre><code>CREATE PROCEDURE dolphinscheduler.test(in in1 INT, out out1 INT)\nbegin\nset out1=in1;\nEND\n</code></pre>\n</li>\n</ul>\n",
  "location": [
    "Introduction to Functions",
    "Task",
    "Stored Procedure"
  ],
  "time": "2023-1-3",
  "structure": [
    {
      "title": "Task Parameters",
      "children": [],
      "anchor": "task-parameters"
    },
    {
      "title": "Remark",
      "children": [],
      "anchor": "remark"
    }
  ],
  "title": "Stored Procedure",
  "link": "/guide/task/stored-procedure"
}