{
  "__html": "<h1 id=\"local-parameter\">Local Parameter</h1>\n<h2 id=\"scope\">Scope</h2>\n<p>Parameters configured on the task definition page, the scope of this parameter is inside this task only. But if you configure according to <a href=\"/en-us/docs/3.1.4/guide/parameter/context\">Refer to Parameter Context</a>, it could pass to downstream tasks.</p>\n<h2 id=\"usage\">Usage</h2>\n<ul>\n<li>If you want to use parameter in single task, see <a href=\"#use-local-parameter-by-custom-parameter\">local parameter with custom parameter</a>.</li>\n<li>If you want to use set parameter in task and use them in downstream tasks:\n<ul>\n<li>For simple use without using custom parameter, see <a href=\"#export-local-parameter-by-setvalue\">export parameter via <code>setValue</code></a>.</li>\n<li>Using custom parameter, see <a href=\"#export-local-parameter-by-setvalue-and-custom-parameter\">export parameter via <code>setValue</code> and custom parameter</a>.</li>\n<li>Using bash variable, see <a href=\"#export-local-parameter-by-setvalue-and-bash-variable\">export parameter via <code>setValue</code> and bash variable</a>.</li>\n</ul>\n</li>\n</ul>\n<p>Usage of local parameters is: at the task define page, click the '+' beside the 'Custom Parameters' and fill in the key and value to save.</p>\n<h2 id=\"examples\">Examples</h2>\n<h3 id=\"use-local-parameter-by-custom-parameter\">Use Local Parameter by Custom Parameter</h3>\n<p>This example shows how to use local parameters to print the current date.</p>\n<p>Create a Shell task and write a script with the content <code>echo ${dt}</code>. Click <strong>custom parameter</strong> in the configuration bar, and the configuration is as follows:</p>\n<p><img src=\"/img/new_ui/dev/parameter/local_parameter01.png\" alt=\"local-parameter01\"></p>\n<p>Parameters:</p>\n<ul>\n<li>dt: indicates the parameter name.</li>\n<li>IN: IN indicates that local parameters can only be used on the current node, and OUT indicates that local parameters can be transmitted to the downstream.</li>\n<li>DATE: indicates the DATE of the data type.</li>\n<li>$[YYYY-MM-DD] : indicates a built-in parameter derived from a user-defined format.</li>\n</ul>\n<p>Save the workflow and run it. View log of Shell task.</p>\n<p><img src=\"/img/new_ui/dev/parameter/local_parameter02.png\" alt=\"local-parameter02\"></p>\n<blockquote>\n<p>Note: The local parameter can be used in the workflow of the current task node. If it is set to OUT, it can be passed to the downstream workflow. Please refer to: <a href=\"/en-us/docs/3.1.4/guide/parameter/context\">Parameter Context</a>.</p>\n</blockquote>\n<h3 id=\"export-local-parameter-by-<code>setvalue</code>\">Export Local Parameter by <code>setValue</code></h3>\n<p>If you want to simple export parameters and then use them in downstream tasks, you could use <code>setValue</code> in your task. And you can manage your parameters into one single task. You can use syntax <code>echo '${setValue(set_val=123)}'</code>(<strong>do not forget the single quote</strong>) in Shell task and add new <code>OUT</code> custom parameter to export it.</p>\n<p><img src=\"/img/new_ui/dev/parameter/local_param_set_val.png\" alt=\"local-parameter-set-val\"></p>\n<p>You can get this value in downstream task using syntax <code>echo '${set_val}'</code>.</p>\n<h3 id=\"export-local-parameter-by-<code>setvalue</code>-and-custom-parameter\">Export Local Parameter by <code>setValue</code> and Custom Parameter</h3>\n<p>If you want to export parameters with custom parameter instead of constants value, and then use them in downstream tasks,\nyou could use <code>setValue</code> in your task, which easier to maintain by change &quot;custom parameter&quot; block when you want to\nchange its value. You can use syntax <code>echo &quot;#{setValue(set_val_param=${val})}&quot;</code>(<strong>do not forget the double quote, if you are\nusing any variable with <code>setValue</code></strong>) in Shell task and add new <code>IN</code> custom parameter for input variable <code>val</code> and <code>OUT</code> custom\nparameter for exporting parameter <code>set_val_param</code>.</p>\n<p><img src=\"/img/new_ui/dev/parameter/local_param_set_val_custom.png\" alt=\"local-parameter-set-val-param\"></p>\n<p>You could get this value in downstream task using syntax <code>echo '${set_val_param}'</code>.</p>\n<h3 id=\"export-local-parameter-by-<code>setvalue</code>-and-bash-variable\">Export Local Parameter by <code>setValue</code> and Bash Variable</h3>\n<p>If you want to export parameters with bash variable instead of constants value, and then use them in downstream tasks,\nyou could use <code>setValue</code> in your task, which more flexible such as you can get variable for exists local or HTTP resource.\nYou can use syntax like</p>\n<pre><code class=\"language-shell\">lines_num=$(wget https://raw.githubusercontent.com/apache/dolphinscheduler/dev/README.md -q -O - | wc -l | xargs)\necho &quot;#{setValue(set_val_var=${lines_num})}&quot;\n</code></pre>\n<p>in Shell task(<strong>do not forget the double quote, if you are using any variable with <code>setValue</code></strong>) and add <code>OUT</code> custom parameter\nfor exporting parameter <code>set_val_var</code>\n.</p>\n<p><img src=\"/img/new_ui/dev/parameter/local_param_set_val_bash.png\" alt=\"local-parameter-set-val-bash\"></p>\n<p>You could get this value in downstream task using syntax <code>echo '${set_val_var}'</code>.</p>\n",
  "location": [
    "Introduction to Functions",
    "Parameter",
    "Local Parameter"
  ],
  "time": "2023-02-24",
  "structure": [
    {
      "title": "Scope",
      "children": [
        {
          "title": "Use Local Parameter by Custom Parameter",
          "children": [],
          "anchor": "use-local-parameter-by-custom-parameter"
        },
        {
          "title": "Export Local Parameter by setValue",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue"
        },
        {
          "title": "Export Local Parameter by setValue and Custom Parameter",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue-and-custom-parameter"
        },
        {
          "title": "Export Local Parameter by setValue and Bash Variable",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue-and-bash-variable"
        }
      ],
      "anchor": "scope"
    },
    {
      "title": "Usage",
      "children": [
        {
          "title": "Use Local Parameter by Custom Parameter",
          "children": [],
          "anchor": "use-local-parameter-by-custom-parameter"
        },
        {
          "title": "Export Local Parameter by setValue",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue"
        },
        {
          "title": "Export Local Parameter by setValue and Custom Parameter",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue-and-custom-parameter"
        },
        {
          "title": "Export Local Parameter by setValue and Bash Variable",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue-and-bash-variable"
        }
      ],
      "anchor": "usage"
    },
    {
      "title": "Examples",
      "children": [
        {
          "title": "Use Local Parameter by Custom Parameter",
          "children": [],
          "anchor": "use-local-parameter-by-custom-parameter"
        },
        {
          "title": "Export Local Parameter by setValue",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue"
        },
        {
          "title": "Export Local Parameter by setValue and Custom Parameter",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue-and-custom-parameter"
        },
        {
          "title": "Export Local Parameter by setValue and Bash Variable",
          "children": [],
          "anchor": "export-local-parameter-by-setvalue-and-bash-variable"
        }
      ],
      "anchor": "examples"
    }
  ],
  "title": "Local Parameter",
  "link": "/guide/parameter/local"
}