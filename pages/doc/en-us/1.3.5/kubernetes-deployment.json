{
  "__html": "<h1 id=\"quickstart-in-kubernetes\">QuickStart in Kubernetes</h1>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<ul>\n<li><a href=\"https://helm.sh/\">Helm</a> 3.1.0+</li>\n<li><a href=\"https://kubernetes.io/\">Kubernetes</a> 1.12+</li>\n<li>PV provisioner support in the underlying infrastructure</li>\n</ul>\n<h2 id=\"installing-the-chart\">Installing the Chart</h2>\n<blockquote>\n<p>NOTE: You need to change your <code>Chart.yaml</code> locally to make it work. Due to a change in the Bitnami repo,\nhttps://charts.bitnami.com/bitnami was truncated only containing entries for the latest 6 months (from January 2022 on).\nThis URL: https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami contains the full 'index.yaml'.</p>\n<p>See detail here: https://github.com/bitnami/charts/issues/10833.</p>\n<p>Change you <code>Chart.yaml</code> in path <code>apache-dolphinscheduler-incubating-1.3.5-src-release/docker/kubernetes/dolphinscheduler</code> after you download the source code\nand replace two places from <code>repository: https://charts.bitnami.com/bitnami</code>\nto <code>repository: https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami</code></p>\n</blockquote>\n<p>Please download the source code package apache-dolphinscheduler-incubating-1.3.5-src.zip, download address: <a href=\"/en-us/download/download.html\">download</a></p>\n<p>To install the chart with the release name <code>dolphinscheduler</code>, please execute the following commands:</p>\n<pre><code>$ unzip apache-dolphinscheduler-incubating-1.3.5-src.zip\n$ cd apache-dolphinscheduler-incubating-1.3.5-src-release/docker/kubernetes/dolphinscheduler\n$ helm repo add bitnami https://charts.bitnami.com/bitnami\n$ helm dependency update .\n$ helm install dolphinscheduler . --set image.tag=1.3.5\n</code></pre>\n<p>To install the chart with a namespace named <code>test</code>:</p>\n<pre><code class=\"language-bash\">$ helm install dolphinscheduler . -n <span class=\"hljs-built_in\">test</span>\n</code></pre>\n<blockquote>\n<p><strong>Tip</strong>: If a namespace named <code>test</code> is used, the option <code>-n test</code> needs to be added to the <code>helm</code> and <code>kubectl</code> command</p>\n</blockquote>\n<p>These commands deploy DolphinScheduler on the Kubernetes cluster in the default configuration. The <a href=\"#configuration\">Configuration</a> section lists the parameters that can be configured during installation.</p>\n<blockquote>\n<p><strong>Tip</strong>: List all releases using <code>helm list</code></p>\n</blockquote>\n<p>The <strong>PostgreSQL</strong> (with username <code>root</code>, password <code>root</code> and database <code>dolphinscheduler</code>) and <strong>ZooKeeper</strong> services will start by default</p>\n<h2 id=\"access-dolphinscheduler-ui\">Access DolphinScheduler UI</h2>\n<p>If <code>ingress.enabled</code> in <code>values.yaml</code> is set to <code>true</code>, you just access <code>http://${ingress.host}/dolphinscheduler</code> in browser.</p>\n<blockquote>\n<p><strong>Tip</strong>: If there is a problem with ingress access, please contact the Kubernetes administrator and refer to the <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/\">Ingress</a></p>\n</blockquote>\n<p>Otherwise, you need to execute port-forward command like:</p>\n<pre><code class=\"language-bash\">$ kubectl port-forward --address 0.0.0.0 svc/dolphinscheduler-api 12345:12345\n$ kubectl port-forward --address 0.0.0.0 -n <span class=\"hljs-built_in\">test</span> svc/dolphinscheduler-api 12345:12345 <span class=\"hljs-comment\"># with test namespace</span>\n</code></pre>\n<blockquote>\n<p><strong>Tip</strong>: If the error of <code>unable to do port forwarding: socat not found</code> appears, you need to install <code>socat</code> at first</p>\n</blockquote>\n<p>And then access the web: http://localhost:12345/dolphinscheduler (The local address is http://localhost:12345/dolphinscheduler)</p>\n<p>The default username is <code>admin</code> and the default password is <code>dolphinscheduler123</code></p>\n<p>Please refer to the <code>Quick Start</code> in the chapter <a href=\"./quick-start.md\">Quick Start</a> to explore how to use DolphinScheduler</p>\n<h2 id=\"uninstalling-the-chart\">Uninstalling the Chart</h2>\n<p>To uninstall/delete the <code>dolphinscheduler</code> deployment:</p>\n<pre><code class=\"language-bash\">$ helm uninstall dolphinscheduler\n</code></pre>\n<p>The command removes all the Kubernetes components but PVC's associated with the chart and deletes the release.</p>\n<p>To delete the PVC's associated with <code>dolphinscheduler</code>:</p>\n<pre><code class=\"language-bash\">$ kubectl delete pvc -l app.kubernetes.io/instance=dolphinscheduler\n</code></pre>\n<blockquote>\n<p><strong>Note</strong>: Deleting the PVC's will delete all data as well. Please be cautious before doing it.</p>\n</blockquote>\n<h2 id=\"configuration\">Configuration</h2>\n<p>The configuration file is <code>values.yaml</code>, and the <a href=\"https://github.com/apache/dolphinscheduler/blob/1.3.5/docker/kubernetes/dolphinscheduler/README.md#configuration\">DolphinScheduler Kubernetes Configuration</a> lists the configurable parameters of the DolphinScheduler and their default values.</p>\n<h2 id=\"faq\">FAQ</h2>\n<h3 id=\"how-to-view-the-logs-of-a-pod-container?\">How to view the logs of a pod container?</h3>\n<p>List all pods (aka <code>po</code>):</p>\n<pre><code>kubectl get po\nkubectl get po -n test # with test namespace\n</code></pre>\n<p>View the logs of a pod container named dolphinscheduler-master-0:</p>\n<pre><code>kubectl logs dolphinscheduler-master-0\nkubectl logs -f dolphinscheduler-master-0 # follow log output\nkubectl logs --tail 10 dolphinscheduler-master-0 -n test # show last 10 lines from the end of the logs\n</code></pre>\n<h3 id=\"how-to-scale-api,-master-and-worker-on-kubernetes?\">How to scale api, master and worker on Kubernetes?</h3>\n<p>List all deployments (aka <code>deploy</code>):</p>\n<pre><code>kubectl get deploy\nkubectl get deploy -n test # with test namespace\n</code></pre>\n<p>Scale api to 3 replicas:</p>\n<pre><code>kubectl scale --replicas=3 deploy dolphinscheduler-api\nkubectl scale --replicas=3 deploy dolphinscheduler-api -n test # with test namespace\n</code></pre>\n<p>List all statefulsets (aka <code>sts</code>):</p>\n<pre><code>kubectl get sts\nkubectl get sts -n test # with test namespace\n</code></pre>\n<p>Scale master to 2 replicas:</p>\n<pre><code>kubectl scale --replicas=2 sts dolphinscheduler-master\nkubectl scale --replicas=2 sts dolphinscheduler-master -n test # with test namespace\n</code></pre>\n<p>Scale worker to 6 replicas:</p>\n<pre><code>kubectl scale --replicas=6 sts dolphinscheduler-worker\nkubectl scale --replicas=6 sts dolphinscheduler-worker -n test # with test namespace\n</code></pre>\n<h3 id=\"how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?\">How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?</h3>\n<p>Not yet supported, the version 1.3.6 will support</p>\n<h3 id=\"how-to-support-mysql-datasource-in-<code>datasource-manage</code>?\">How to support MySQL datasource in <code>Datasource manage</code>?</h3>\n<blockquote>\n<p>Because of the commercial license, we cannot directly use the driver of MySQL.</p>\n<p>If you want to add MySQL datasource, you can build a new image based on the <code>apache/dolphinscheduler</code> image as follows.</p>\n</blockquote>\n<ol>\n<li>\n<p>Download the MySQL driver <a href=\"https://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.49/mysql-connector-java-5.1.49.jar\">mysql-connector-java-5.1.49.jar</a> (require <code>&gt;=5.1.47</code>)</p>\n</li>\n<li>\n<p>Create a new <code>Dockerfile</code> to add MySQL driver:</p>\n</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:1.3.5\nCOPY mysql-connector-java-5.1.49.jar /opt/dolphinscheduler/lib\n</code></pre>\n<ol start=\"3\">\n<li>Build a new docker image including MySQL driver:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:mysql-driver .\n</code></pre>\n<ol start=\"4\">\n<li>\n<p>Push the docker image <code>apache/dolphinscheduler:mysql-driver</code> to a docker registry</p>\n</li>\n<li>\n<p>Modify image <code>registry</code> and <code>repository</code>, and update <code>tag</code> to <code>mysql-driver</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</p>\n</li>\n<li>\n<p>Add a MySQL datasource in <code>Datasource manage</code></p>\n</li>\n</ol>\n<h3 id=\"how-to-support-oracle-datasource-in-<code>datasource-manage</code>?\">How to support Oracle datasource in <code>Datasource manage</code>?</h3>\n<blockquote>\n<p>Because of the commercial license, we cannot directly use the driver of Oracle.</p>\n<p>If you want to add Oracle datasource, you can build a new image based on the <code>apache/dolphinscheduler</code> image as follows.</p>\n</blockquote>\n<ol>\n<li>\n<p>Download the Oracle driver <a href=\"https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc8/\">ojdbc8.jar</a> (such as <code>ojdbc8-19.9.0.0.jar</code>)</p>\n</li>\n<li>\n<p>Create a new <code>Dockerfile</code> to add Oracle driver:</p>\n</li>\n</ol>\n<pre><code>FROM dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler:1.3.5\nCOPY ojdbc8-19.9.0.0.jar /opt/dolphinscheduler/lib\n</code></pre>\n<ol start=\"3\">\n<li>Build a new docker image including Oracle driver:</li>\n</ol>\n<pre><code>docker build -t apache/dolphinscheduler:oracle-driver .\n</code></pre>\n<ol start=\"4\">\n<li>\n<p>Push the docker image <code>apache/dolphinscheduler:oracle-driver</code> to a docker registry</p>\n</li>\n<li>\n<p>Modify image <code>registry</code> and <code>repository</code>, and update <code>tag</code> to <code>oracle-driver</code> in <code>values.yaml</code></p>\n</li>\n<li>\n<p>Run a DolphinScheduler release in Kubernetes (See <strong>Installing the Chart</strong>)</p>\n</li>\n<li>\n<p>Add a Oracle datasource in <code>Datasource manage</code></p>\n</li>\n</ol>\n",
  "location": [
    "Deployment Document",
    "Kubernetes Deployment"
  ],
  "time": "2021-2-14",
  "structure": [
    {
      "title": "Prerequisites",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        }
      ],
      "anchor": "prerequisites"
    },
    {
      "title": "Installing the Chart",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        }
      ],
      "anchor": "installing-the-chart"
    },
    {
      "title": "Access DolphinScheduler UI",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        }
      ],
      "anchor": "access-dolphinscheduler-ui"
    },
    {
      "title": "Uninstalling the Chart",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        }
      ],
      "anchor": "uninstalling-the-chart"
    },
    {
      "title": "Configuration",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        }
      ],
      "anchor": "configuration"
    },
    {
      "title": "FAQ",
      "children": [
        {
          "title": "How to view the logs of a pod container?",
          "children": [],
          "anchor": "how-to-view-the-logs-of-a-pod-container?"
        },
        {
          "title": "How to scale api, master and worker on Kubernetes?",
          "children": [],
          "anchor": "how-to-scale-api,-master-and-worker-on-kubernetes?"
        },
        {
          "title": "How to use MySQL as the DolphinScheduler's database instead of PostgreSQL?",
          "children": [],
          "anchor": "how-to-use-mysql-as-the-dolphinscheduler's-database-instead-of-postgresql?"
        },
        {
          "title": "How to support MySQL datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-mysql-datasource-in-datasource-manage?"
        },
        {
          "title": "How to support Oracle datasource in Datasource manage?",
          "children": [],
          "anchor": "how-to-support-oracle-datasource-in-datasource-manage?"
        }
      ],
      "anchor": "faq"
    }
  ],
  "title": "QuickStart in Kubernetes",
  "link": "/kubernetes-deployment"
}